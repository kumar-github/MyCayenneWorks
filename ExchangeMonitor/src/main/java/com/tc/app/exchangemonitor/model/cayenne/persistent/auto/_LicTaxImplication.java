package com.tc.app.exchangemonitor.model.cayenne.persistent.auto;

import org.apache.cayenne.CayenneDataObject;
import org.apache.cayenne.exp.Property;

import com.tc.app.exchangemonitor.model.cayenne.persistent.Commodity;
import com.tc.app.exchangemonitor.model.cayenne.persistent.ProductUsage;

/**
 * Class _LicTaxImplication was generated by Cayenne.
 * It is probably a good idea to avoid changing this class manually,
 * since it may be overwritten next time code is regenerated.
 * If you need to make any customizations, please use subclass.
 */
public abstract class _LicTaxImplication extends CayenneDataObject
{

	private static final long serialVersionUID = 1L;

	public static final String LICENSE_COVERS_NUM_PK_COLUMN = "license_covers_num";
	public static final String LICENSE_NUM_PK_COLUMN = "license_num";
	public static final String TAX_CODE_PK_COLUMN = "tax_code";

	public static final Property<String> TAX_EXEMPT_IND = new Property<String>("taxExemptInd");
	public static final Property<Double> TAX_RATE_DISCOUNT = new Property<Double>("taxRateDiscount");
	public static final Property<Integer> TRANS_ID = new Property<Integer>("transId");
	public static final Property<Commodity> COMMODITY = new Property<Commodity>("commodity");
	public static final Property<ProductUsage> PRODUCT_USAGE = new Property<ProductUsage>("productUsage");

	public void setTaxExemptInd(String taxExemptInd)
	{
		writeProperty("taxExemptInd", taxExemptInd);
	}

	public String getTaxExemptInd()
	{
		return (String) readProperty("taxExemptInd");
	}

	public void setTaxRateDiscount(Double taxRateDiscount)
	{
		writeProperty("taxRateDiscount", taxRateDiscount);
	}

	public Double getTaxRateDiscount()
	{
		return (Double) readProperty("taxRateDiscount");
	}

	public void setTransId(Integer transId)
	{
		writeProperty("transId", transId);
	}

	public Integer getTransId()
	{
		return (Integer) readProperty("transId");
	}

	public void setCommodity(Commodity commodity)
	{
		setToOneTarget("commodity", commodity, true);
	}

	public Commodity getCommodity()
	{
		return (Commodity) readProperty("commodity");
	}

	public void setProductUsage(ProductUsage productUsage)
	{
		setToOneTarget("productUsage", productUsage, true);
	}

	public ProductUsage getProductUsage()
	{
		return (ProductUsage) readProperty("productUsage");
	}

}
