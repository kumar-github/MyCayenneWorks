package com.tc.app.exchangemonitor.model.cayenne.persistent.auto;

import java.util.List;

import org.apache.cayenne.CayenneDataObject;
import org.apache.cayenne.exp.Property;

import com.tc.app.exchangemonitor.model.cayenne.persistent.ReportExcelLabelPcka;
import com.tc.app.exchangemonitor.model.cayenne.persistent.ReportLinksPcka;

/**
 * Class _ReportExcelPcka was generated by Cayenne.
 * It is probably a good idea to avoid changing this class manually,
 * since it may be overwritten next time code is regenerated.
 * If you need to make any customizations, please use subclass.
 */
public abstract class _ReportExcelPcka extends CayenneDataObject
{

	private static final long serialVersionUID = 1L;

	public static final String FLDINT_REPORT_EXCEL_PCKA_REC_ID_PK_COLUMN = "fldintReportExcelPckaRecId";

	public static final Property<String> FLDCHR_ERASE_COLUMN = new Property<String>("fldchrEraseColumn");
	public static final Property<String> FLDCHR_ERASE_ROW = new Property<String>("fldchrEraseRow");
	public static final Property<String> FLDCHR_EXCEL_LEFT_LABEL = new Property<String>("fldchrExcelLeftLabel");
	public static final Property<String> FLDCHR_EXCEL_MIDDLE_LABEL = new Property<String>("fldchrExcelMiddleLabel");
	public static final Property<String> FLDCHR_EXCEL_PIVOUT_NAME = new Property<String>("fldchrExcelPivoutName");
	public static final Property<String> FLDCHR_EXCEL_REPORT_NAME = new Property<String>("fldchrExcelReportName");
	public static final Property<String> FLDCHR_EXCEL_TOP_LABEL = new Property<String>("fldchrExcelTopLabel");
	public static final Property<String> FLDCHR_EXCEL_WORK_SHEET_NAME = new Property<String>("fldchrExcelWorkSheetName");
	public static final Property<String> FLDCHR_FLAG_ENABLE_PIVOUT = new Property<String>("fldchrFlagEnablePivout");
	public static final Property<String> FLDCHR_FLAG_EXPORT_EXCEL = new Property<String>("fldchrFlagExportExcel");
	public static final Property<Integer> FLDINT_REFERENCE_COLUMN = new Property<Integer>("fldintReferenceColumn");
	public static final Property<ReportLinksPcka> FLDINT_REPORT_LINKS_PCKA_REC = new Property<ReportLinksPcka>("fldintReportLinksPckaRec");
	public static final Property<List<ReportExcelLabelPcka>> REPORT_EXCEL_LABEL_PCKAS = new Property<List<ReportExcelLabelPcka>>("reportExcelLabelPckas");

	public void setFldchrEraseColumn(String fldchrEraseColumn)
	{
		writeProperty("fldchrEraseColumn", fldchrEraseColumn);
	}

	public String getFldchrEraseColumn()
	{
		return (String) readProperty("fldchrEraseColumn");
	}

	public void setFldchrEraseRow(String fldchrEraseRow)
	{
		writeProperty("fldchrEraseRow", fldchrEraseRow);
	}

	public String getFldchrEraseRow()
	{
		return (String) readProperty("fldchrEraseRow");
	}

	public void setFldchrExcelLeftLabel(String fldchrExcelLeftLabel)
	{
		writeProperty("fldchrExcelLeftLabel", fldchrExcelLeftLabel);
	}

	public String getFldchrExcelLeftLabel()
	{
		return (String) readProperty("fldchrExcelLeftLabel");
	}

	public void setFldchrExcelMiddleLabel(String fldchrExcelMiddleLabel)
	{
		writeProperty("fldchrExcelMiddleLabel", fldchrExcelMiddleLabel);
	}

	public String getFldchrExcelMiddleLabel()
	{
		return (String) readProperty("fldchrExcelMiddleLabel");
	}

	public void setFldchrExcelPivoutName(String fldchrExcelPivoutName)
	{
		writeProperty("fldchrExcelPivoutName", fldchrExcelPivoutName);
	}

	public String getFldchrExcelPivoutName()
	{
		return (String) readProperty("fldchrExcelPivoutName");
	}

	public void setFldchrExcelReportName(String fldchrExcelReportName)
	{
		writeProperty("fldchrExcelReportName", fldchrExcelReportName);
	}

	public String getFldchrExcelReportName()
	{
		return (String) readProperty("fldchrExcelReportName");
	}

	public void setFldchrExcelTopLabel(String fldchrExcelTopLabel)
	{
		writeProperty("fldchrExcelTopLabel", fldchrExcelTopLabel);
	}

	public String getFldchrExcelTopLabel()
	{
		return (String) readProperty("fldchrExcelTopLabel");
	}

	public void setFldchrExcelWorkSheetName(String fldchrExcelWorkSheetName)
	{
		writeProperty("fldchrExcelWorkSheetName", fldchrExcelWorkSheetName);
	}

	public String getFldchrExcelWorkSheetName()
	{
		return (String) readProperty("fldchrExcelWorkSheetName");
	}

	public void setFldchrFlagEnablePivout(String fldchrFlagEnablePivout)
	{
		writeProperty("fldchrFlagEnablePivout", fldchrFlagEnablePivout);
	}

	public String getFldchrFlagEnablePivout()
	{
		return (String) readProperty("fldchrFlagEnablePivout");
	}

	public void setFldchrFlagExportExcel(String fldchrFlagExportExcel)
	{
		writeProperty("fldchrFlagExportExcel", fldchrFlagExportExcel);
	}

	public String getFldchrFlagExportExcel()
	{
		return (String) readProperty("fldchrFlagExportExcel");
	}

	public void setFldintReferenceColumn(Integer fldintReferenceColumn)
	{
		writeProperty("fldintReferenceColumn", fldintReferenceColumn);
	}

	public Integer getFldintReferenceColumn()
	{
		return (Integer) readProperty("fldintReferenceColumn");
	}

	public void setFldintReportLinksPckaRec(ReportLinksPcka fldintReportLinksPckaRec)
	{
		setToOneTarget("fldintReportLinksPckaRec", fldintReportLinksPckaRec, true);
	}

	public ReportLinksPcka getFldintReportLinksPckaRec()
	{
		return (ReportLinksPcka) readProperty("fldintReportLinksPckaRec");
	}

	public void addToReportExcelLabelPckas(ReportExcelLabelPcka obj)
	{
		addToManyTarget("reportExcelLabelPckas", obj, true);
	}

	public void removeFromReportExcelLabelPckas(ReportExcelLabelPcka obj)
	{
		removeToManyTarget("reportExcelLabelPckas", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<ReportExcelLabelPcka> getReportExcelLabelPckas()
	{
		return (List<ReportExcelLabelPcka>) readProperty("reportExcelLabelPckas");
	}

}
