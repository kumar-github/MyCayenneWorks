package com.tc.app.exchangemonitor.model.cayenne.persistent.auto;

import java.util.List;

import org.apache.cayenne.CayenneDataObject;
import org.apache.cayenne.exp.Property;

import com.tc.app.exchangemonitor.model.cayenne.persistent.CommktFutureAttr;
import com.tc.app.exchangemonitor.model.cayenne.persistent.CommktOptionAttr;
import com.tc.app.exchangemonitor.model.cayenne.persistent.CommktPhysicalAttr;
import com.tc.app.exchangemonitor.model.cayenne.persistent.CreditGroup;
import com.tc.app.exchangemonitor.model.cayenne.persistent.Desk;
import com.tc.app.exchangemonitor.model.cayenne.persistent.Gtc;
import com.tc.app.exchangemonitor.model.cayenne.persistent.Location;
import com.tc.app.exchangemonitor.model.cayenne.persistent.Portfolio;
import com.tc.app.exchangemonitor.model.cayenne.persistent.TradeItem;
import com.tc.app.exchangemonitor.model.cayenne.persistent.UserJobTitle;
import com.tc.app.exchangemonitor.model.cayenne.persistent.AccountCommktGtc;
import com.tc.app.exchangemonitor.model.cayenne.persistent.AccountCreditInfo;
import com.tc.app.exchangemonitor.model.cayenne.persistent.AccountCreditLimit;
import com.tc.app.exchangemonitor.model.cayenne.persistent.AccountInstruction;
import com.tc.app.exchangemonitor.model.cayenne.persistent.Accumulation;
import com.tc.app.exchangemonitor.model.cayenne.persistent.Allocation;
import com.tc.app.exchangemonitor.model.cayenne.persistent.AllocationItem;
import com.tc.app.exchangemonitor.model.cayenne.persistent.BusCostMailList;
import com.tc.app.exchangemonitor.model.cayenne.persistent.CashForecastFile;
import com.tc.app.exchangemonitor.model.cayenne.persistent.Contract;
import com.tc.app.exchangemonitor.model.cayenne.persistent.ContractTransmission;
import com.tc.app.exchangemonitor.model.cayenne.persistent.Cost;
import com.tc.app.exchangemonitor.model.cayenne.persistent.CostApproval;
import com.tc.app.exchangemonitor.model.cayenne.persistent.CostComposite;
import com.tc.app.exchangemonitor.model.cayenne.persistent.CreditLimit;
import com.tc.app.exchangemonitor.model.cayenne.persistent.CreditReserve;
import com.tc.app.exchangemonitor.model.cayenne.persistent.Document;
import com.tc.app.exchangemonitor.model.cayenne.persistent.GroupsToUsers;
import com.tc.app.exchangemonitor.model.cayenne.persistent.IctsUserPermission;
import com.tc.app.exchangemonitor.model.cayenne.persistent.ImpliedPrCurve;
import com.tc.app.exchangemonitor.model.cayenne.persistent.ImpliedPrDifferential;
import com.tc.app.exchangemonitor.model.cayenne.persistent.Lc;
import com.tc.app.exchangemonitor.model.cayenne.persistent.LiveScenario;
import com.tc.app.exchangemonitor.model.cayenne.persistent.LocationExtInfo;
import com.tc.app.exchangemonitor.model.cayenne.persistent.MasterCollAgreement;
import com.tc.app.exchangemonitor.model.cayenne.persistent.Parcel;
import com.tc.app.exchangemonitor.model.cayenne.persistent.ParentGuarantee;
import com.tc.app.exchangemonitor.model.cayenne.persistent.PlContract;
import com.tc.app.exchangemonitor.model.cayenne.persistent.PortfolioEod;
import com.tc.app.exchangemonitor.model.cayenne.persistent.RecapItem;
import com.tc.app.exchangemonitor.model.cayenne.persistent.RiskCover;
import com.tc.app.exchangemonitor.model.cayenne.persistent.Scenario;
import com.tc.app.exchangemonitor.model.cayenne.persistent.SendToSap;
import com.tc.app.exchangemonitor.model.cayenne.persistent.Shipment;
import com.tc.app.exchangemonitor.model.cayenne.persistent.Strategy;
import com.tc.app.exchangemonitor.model.cayenne.persistent.SymphonyOutboundData;
import com.tc.app.exchangemonitor.model.cayenne.persistent.TiMarkToMarket;
import com.tc.app.exchangemonitor.model.cayenne.persistent.Trade;
import com.tc.app.exchangemonitor.model.cayenne.persistent.TradeItemComposite;
import com.tc.app.exchangemonitor.model.cayenne.persistent.TradeItemDryPhy;
import com.tc.app.exchangemonitor.model.cayenne.persistent.TradeItemWetPhy;
import com.tc.app.exchangemonitor.model.cayenne.persistent.TradeSearchSavedata;
import com.tc.app.exchangemonitor.model.cayenne.persistent.UserConfig;
import com.tc.app.exchangemonitor.model.cayenne.persistent.UserContact;
import com.tc.app.exchangemonitor.model.cayenne.persistent.UserDefault;
import com.tc.app.exchangemonitor.model.cayenne.persistent.UserLoginHistory;
import com.tc.app.exchangemonitor.model.cayenne.persistent.UserResources;
import com.tc.app.exchangemonitor.model.cayenne.persistent.UserUserGroup;
import com.tc.app.exchangemonitor.model.cayenne.persistent.VarRun;
import com.tc.app.exchangemonitor.model.cayenne.persistent.Voucher;
import com.tc.app.exchangemonitor.model.cayenne.persistent.VoucherApproval;
import com.tc.app.exchangemonitor.model.cayenne.persistent.VoucherDuedate;
import com.tc.app.exchangemonitor.model.cayenne.persistent.VoucherPayApproval;
import com.tc.app.exchangemonitor.model.cayenne.persistent.VoucherPayment;
import com.tc.app.exchangemonitor.model.cayenne.persistent.WorkAreaUserLinks;

/**
 * Class _IctsUser was generated by Cayenne.
 * It is probably a good idea to avoid changing this class manually,
 * since it may be overwritten next time code is regenerated.
 * If you need to make any customizations, please use subclass.
 */
public abstract class _IctsUser extends CayenneDataObject
{

	private static final long serialVersionUID = 1L;

	public static final String USER_INIT_PK_COLUMN = "user_init";

	public static final Property<String> EMAIL_ADDRESS = new Property<>("emailAddress");
	public static final Property<Integer> TRANS_ID = new Property<>("transId");
	public static final Property<String> US_CITIZEN_IND = new Property<>("usCitizenInd");
	public static final Property<Integer> USER_EMPLOYEE_NUM = new Property<>("userEmployeeNum");
	public static final Property<String> USER_FIRST_NAME = new Property<>("userFirstName");
	public static final Property<String> USER_LAST_NAME = new Property<>("userLastName");
	public static final Property<String> USER_LOGON_ID = new Property<>("userLogonId");
	public static final Property<String> USER_STATUS = new Property<>("userStatus");
	public static final Property<List<AccountCommktGtc>> ACCOUNT_COMMKT_GTCS = new Property<>("accountCommktGtcs");
	public static final Property<List<AccountCreditInfo>> ACCOUNT_CREDIT_INFOES = new Property<>("accountCreditInfoes");
	public static final Property<List<AccountCreditLimit>> ACCOUNT_CREDIT_LIMITS = new Property<>("accountCreditLimits");
	public static final Property<List<AccountInstruction>> ACCOUNT_INSTRUCTIONS = new Property<>("accountInstructions");
	public static final Property<List<Accumulation>> ACCUMULATIONS = new Property<>("accumulations");
	public static final Property<List<AllocationItem>> ALLOCATION_ITEMS = new Property<>("allocationItems");
	public static final Property<List<Allocation>> ALLOCATIONS = new Property<>("allocations");
	public static final Property<List<BusCostMailList>> BUS_COST_MAIL_LISTS = new Property<>("busCostMailLists");
	public static final Property<List<CashForecastFile>> CASH_FORECAST_FILES = new Property<>("cashForecastFiles");
	public static final Property<List<CashForecastFile>> CASH_FORECAST_FILES1 = new Property<>("cashForecastFiles1");
	public static final Property<List<CommktFutureAttr>> COMMKT_FUTURE_ATTRS = new Property<>("commktFutureAttrs");
	public static final Property<List<CommktOptionAttr>> COMMKT_OPTION_ATTRS = new Property<>("commktOptionAttrs");
	public static final Property<List<CommktPhysicalAttr>> COMMKT_PHYSICAL_ATTRS = new Property<>("commktPhysicalAttrs");
	public static final Property<List<ContractTransmission>> CONTRACT_TRANSMISSIONS = new Property<>("contractTransmissions");
	public static final Property<List<Contract>> CONTRACTS = new Property<>("contracts");
	public static final Property<List<Contract>> CONTRACTS1 = new Property<>("contracts1");
	public static final Property<List<CostApproval>> COST_APPROVALS = new Property<>("costApprovals");
	public static final Property<List<CostComposite>> COST_COMPOSITES = new Property<>("costComposites");
	public static final Property<List<Cost>> COSTS = new Property<>("costs");
	public static final Property<List<Cost>> COSTS1 = new Property<>("costs1");
	public static final Property<List<Cost>> COSTS2 = new Property<>("costs2");
	public static final Property<List<Cost>> COSTS3 = new Property<>("costs3");
	public static final Property<List<Cost>> COSTS4 = new Property<>("costs4");
	public static final Property<List<Cost>> COSTS5 = new Property<>("costs5");
	public static final Property<List<Cost>> COSTS6 = new Property<>("costs6");
	public static final Property<List<CreditGroup>> CREDIT_GROUPS = new Property<>("creditGroups");
	public static final Property<List<CreditLimit>> CREDIT_LIMITS = new Property<>("creditLimits");
	public static final Property<List<CreditReserve>> CREDIT_RESERVES = new Property<>("creditReserves");
	public static final Property<Desk> DESK = new Property<>("desk");
	public static final Property<List<Document>> DOCUMENTS = new Property<>("documents");
	public static final Property<List<GroupsToUsers>> GROUPS_TO_USERSS = new Property<>("groupsToUserss");
	public static final Property<List<Gtc>> GTCS = new Property<>("gtcs");
	public static final Property<UserConfig> ICTS_USER = new Property<>("ictsUser");
	public static final Property<List<IctsUserPermission>> ICTS_USER_PERMISSIONS = new Property<>("ictsUserPermissions");
	public static final Property<List<ImpliedPrCurve>> IMPLIED_PR_CURVES = new Property<>("impliedPrCurves");
	public static final Property<List<ImpliedPrCurve>> IMPLIED_PR_CURVES1 = new Property<>("impliedPrCurves1");
	public static final Property<List<ImpliedPrDifferential>> IMPLIED_PR_DIFFERENTIALS = new Property<>("impliedPrDifferentials");
	public static final Property<List<Lc>> LCS = new Property<>("lcs");
	public static final Property<List<Lc>> LCS1 = new Property<>("lcs1");
	public static final Property<List<LiveScenario>> LIVE_SCENARIOS = new Property<>("liveScenarios");
	public static final Property<Location> LOCATION = new Property<>("location");
	public static final Property<List<LocationExtInfo>> LOCATION_EXT_INFOES = new Property<>("locationExtInfoes");
	public static final Property<List<LocationExtInfo>> LOCATION_EXT_INFOES1 = new Property<>("locationExtInfoes1");
	public static final Property<List<LocationExtInfo>> LOCATION_EXT_INFOES2 = new Property<>("locationExtInfoes2");
	public static final Property<List<MasterCollAgreement>> MASTER_COLL_AGREEMENTS = new Property<>("masterCollAgreements");
	public static final Property<List<Parcel>> PARCELS = new Property<>("parcels");
	public static final Property<List<Parcel>> PARCELS1 = new Property<>("parcels1");
	public static final Property<List<ParentGuarantee>> PARENT_GUARANTEES = new Property<>("parentGuarantees");
	public static final Property<List<ParentGuarantee>> PARENT_GUARANTEES1 = new Property<>("parentGuarantees1");
	public static final Property<List<PlContract>> PL_CONTRACTS = new Property<>("plContracts");
	public static final Property<List<PlContract>> PL_CONTRACTS1 = new Property<>("plContracts1");
	public static final Property<List<PortfolioEod>> PORTFOLIO_EODS = new Property<>("portfolioEods");
	public static final Property<List<Portfolio>> PORTFOLIOS = new Property<>("portfolios");
	public static final Property<List<RecapItem>> RECAP_ITEMS = new Property<>("recapItems");
	public static final Property<List<RiskCover>> RISK_COVERS = new Property<>("riskCovers");
	public static final Property<List<Scenario>> SCENARIOS = new Property<>("scenarios");
	public static final Property<List<SendToSap>> SEND_TO_SAPS = new Property<>("sendToSaps");
	public static final Property<List<Shipment>> SHIPMENTS = new Property<>("shipments");
	public static final Property<List<Shipment>> SHIPMENTS1 = new Property<>("shipments1");
	public static final Property<List<Strategy>> STRATEGIES = new Property<>("strategies");
	public static final Property<List<SymphonyOutboundData>> SYMPHONY_OUTBOUND_DATAS = new Property<>("symphonyOutboundDatas");
	public static final Property<List<TiMarkToMarket>> TI_MARK_TO_MARKETS = new Property<>("tiMarkToMarkets");
	public static final Property<List<TradeItemComposite>> TRADE_ITEM_COMPOSITES = new Property<>("tradeItemComposites");
	public static final Property<List<TradeItemDryPhy>> TRADE_ITEM_DRY_PHIES = new Property<>("tradeItemDryPhies");
	public static final Property<List<TradeItemDryPhy>> TRADE_ITEM_DRY_PHIES1 = new Property<>("tradeItemDryPhies1");
	public static final Property<List<TradeItemWetPhy>> TRADE_ITEM_WET_PHIES = new Property<>("tradeItemWetPhies");
	public static final Property<List<TradeItemWetPhy>> TRADE_ITEM_WET_PHIES1 = new Property<>("tradeItemWetPhies1");
	public static final Property<List<TradeItem>> TRADE_ITEMS = new Property<>("tradeItems");
	public static final Property<List<TradeSearchSavedata>> TRADE_SEARCH_SAVEDATAS = new Property<>("tradeSearchSavedatas");
	public static final Property<List<Trade>> TRADES = new Property<>("trades");
	public static final Property<List<Trade>> TRADES1 = new Property<>("trades1");
	public static final Property<List<Trade>> TRADES2 = new Property<>("trades2");
	public static final Property<List<Trade>> TRADES3 = new Property<>("trades3");
	public static final Property<List<UserContact>> USER_CONTACTS = new Property<>("userContacts");
	public static final Property<List<UserDefault>> USER_DEFAULTS = new Property<>("userDefaults");
	public static final Property<UserJobTitle> USER_JOB_TITLE = new Property<>("userJobTitle");
	public static final Property<List<UserLoginHistory>> USER_LOGIN_HISTORIES = new Property<>("userLoginHistories");
	public static final Property<List<UserResources>> USER_RESOURCESES = new Property<>("userResourceses");
	public static final Property<List<UserUserGroup>> USER_USER_GROUPS = new Property<>("userUserGroups");
	public static final Property<List<VarRun>> VAR_RUNS = new Property<>("varRuns");
	public static final Property<List<VoucherApproval>> VOUCHER_APPROVALS = new Property<>("voucherApprovals");
	public static final Property<List<VoucherDuedate>> VOUCHER_DUEDATES = new Property<>("voucherDuedates");
	public static final Property<List<VoucherDuedate>> VOUCHER_DUEDATES1 = new Property<>("voucherDuedates1");
	public static final Property<List<VoucherPayApproval>> VOUCHER_PAY_APPROVALS = new Property<>("voucherPayApprovals");
	public static final Property<List<VoucherPayment>> VOUCHER_PAYMENTS = new Property<>("voucherPayments");
	public static final Property<List<Voucher>> VOUCHERS = new Property<>("vouchers");
	public static final Property<List<Voucher>> VOUCHERS1 = new Property<>("vouchers1");
	public static final Property<List<Voucher>> VOUCHERS2 = new Property<>("vouchers2");
	public static final Property<List<Voucher>> VOUCHERS3 = new Property<>("vouchers3");
	public static final Property<List<Voucher>> VOUCHERS4 = new Property<>("vouchers4");
	public static final Property<List<WorkAreaUserLinks>> WORK_AREA_USER_LINKSS = new Property<>("workAreaUserLinkss");

	public void setEmailAddress(final String emailAddress)
	{
		this.writeProperty("emailAddress", emailAddress);
	}

	public String getEmailAddress()
	{
		return (String) this.readProperty("emailAddress");
	}

	public void setTransId(final Integer transId)
	{
		this.writeProperty("transId", transId);
	}

	public Integer getTransId()
	{
		return (Integer) this.readProperty("transId");
	}

	public void setUsCitizenInd(final String usCitizenInd)
	{
		this.writeProperty("usCitizenInd", usCitizenInd);
	}

	public String getUsCitizenInd()
	{
		return (String) this.readProperty("usCitizenInd");
	}

	public void setUserEmployeeNum(final Integer userEmployeeNum)
	{
		this.writeProperty("userEmployeeNum", userEmployeeNum);
	}

	public Integer getUserEmployeeNum()
	{
		return (Integer) this.readProperty("userEmployeeNum");
	}

	public void setUserFirstName(final String userFirstName)
	{
		this.writeProperty("userFirstName", userFirstName);
	}

	public String getUserFirstName()
	{
		return (String) this.readProperty("userFirstName");
	}

	public void setUserLastName(final String userLastName)
	{
		this.writeProperty("userLastName", userLastName);
	}

	public String getUserLastName()
	{
		return (String) this.readProperty("userLastName");
	}

	public void setUserLogonId(final String userLogonId)
	{
		this.writeProperty("userLogonId", userLogonId);
	}

	public String getUserLogonId()
	{
		return (String) this.readProperty("userLogonId");
	}

	public void setUserStatus(final String userStatus)
	{
		this.writeProperty("userStatus", userStatus);
	}

	public String getUserStatus()
	{
		return (String) this.readProperty("userStatus");
	}

	public void addToAccountCommktGtcs(final AccountCommktGtc obj)
	{
		this.addToManyTarget("accountCommktGtcs", obj, true);
	}

	public void removeFromAccountCommktGtcs(final AccountCommktGtc obj)
	{
		this.removeToManyTarget("accountCommktGtcs", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<AccountCommktGtc> getAccountCommktGtcs()
	{
		return (List<AccountCommktGtc>) this.readProperty("accountCommktGtcs");
	}

	public void addToAccountCreditInfoes(final AccountCreditInfo obj)
	{
		this.addToManyTarget("accountCreditInfoes", obj, true);
	}

	public void removeFromAccountCreditInfoes(final AccountCreditInfo obj)
	{
		this.removeToManyTarget("accountCreditInfoes", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<AccountCreditInfo> getAccountCreditInfoes()
	{
		return (List<AccountCreditInfo>) this.readProperty("accountCreditInfoes");
	}

	public void addToAccountCreditLimits(final AccountCreditLimit obj)
	{
		this.addToManyTarget("accountCreditLimits", obj, true);
	}

	public void removeFromAccountCreditLimits(final AccountCreditLimit obj)
	{
		this.removeToManyTarget("accountCreditLimits", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<AccountCreditLimit> getAccountCreditLimits()
	{
		return (List<AccountCreditLimit>) this.readProperty("accountCreditLimits");
	}

	public void addToAccountInstructions(final AccountInstruction obj)
	{
		this.addToManyTarget("accountInstructions", obj, true);
	}

	public void removeFromAccountInstructions(final AccountInstruction obj)
	{
		this.removeToManyTarget("accountInstructions", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<AccountInstruction> getAccountInstructions()
	{
		return (List<AccountInstruction>) this.readProperty("accountInstructions");
	}

	public void addToAccumulations(final Accumulation obj)
	{
		this.addToManyTarget("accumulations", obj, true);
	}

	public void removeFromAccumulations(final Accumulation obj)
	{
		this.removeToManyTarget("accumulations", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<Accumulation> getAccumulations()
	{
		return (List<Accumulation>) this.readProperty("accumulations");
	}

	public void addToAllocationItems(final AllocationItem obj)
	{
		this.addToManyTarget("allocationItems", obj, true);
	}

	public void removeFromAllocationItems(final AllocationItem obj)
	{
		this.removeToManyTarget("allocationItems", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<AllocationItem> getAllocationItems()
	{
		return (List<AllocationItem>) this.readProperty("allocationItems");
	}

	public void addToAllocations(final Allocation obj)
	{
		this.addToManyTarget("allocations", obj, true);
	}

	public void removeFromAllocations(final Allocation obj)
	{
		this.removeToManyTarget("allocations", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<Allocation> getAllocations()
	{
		return (List<Allocation>) this.readProperty("allocations");
	}

	public void addToBusCostMailLists(final BusCostMailList obj)
	{
		this.addToManyTarget("busCostMailLists", obj, true);
	}

	public void removeFromBusCostMailLists(final BusCostMailList obj)
	{
		this.removeToManyTarget("busCostMailLists", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<BusCostMailList> getBusCostMailLists()
	{
		return (List<BusCostMailList>) this.readProperty("busCostMailLists");
	}

	public void addToCashForecastFiles(final CashForecastFile obj)
	{
		this.addToManyTarget("cashForecastFiles", obj, true);
	}

	public void removeFromCashForecastFiles(final CashForecastFile obj)
	{
		this.removeToManyTarget("cashForecastFiles", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<CashForecastFile> getCashForecastFiles()
	{
		return (List<CashForecastFile>) this.readProperty("cashForecastFiles");
	}

	public void addToCashForecastFiles1(final CashForecastFile obj)
	{
		this.addToManyTarget("cashForecastFiles1", obj, true);
	}

	public void removeFromCashForecastFiles1(final CashForecastFile obj)
	{
		this.removeToManyTarget("cashForecastFiles1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<CashForecastFile> getCashForecastFiles1()
	{
		return (List<CashForecastFile>) this.readProperty("cashForecastFiles1");
	}

	public void addToCommktFutureAttrs(final CommktFutureAttr obj)
	{
		this.addToManyTarget("commktFutureAttrs", obj, true);
	}

	public void removeFromCommktFutureAttrs(final CommktFutureAttr obj)
	{
		this.removeToManyTarget("commktFutureAttrs", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<CommktFutureAttr> getCommktFutureAttrs()
	{
		return (List<CommktFutureAttr>) this.readProperty("commktFutureAttrs");
	}

	public void addToCommktOptionAttrs(final CommktOptionAttr obj)
	{
		this.addToManyTarget("commktOptionAttrs", obj, true);
	}

	public void removeFromCommktOptionAttrs(final CommktOptionAttr obj)
	{
		this.removeToManyTarget("commktOptionAttrs", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<CommktOptionAttr> getCommktOptionAttrs()
	{
		return (List<CommktOptionAttr>) this.readProperty("commktOptionAttrs");
	}

	public void addToCommktPhysicalAttrs(final CommktPhysicalAttr obj)
	{
		this.addToManyTarget("commktPhysicalAttrs", obj, true);
	}

	public void removeFromCommktPhysicalAttrs(final CommktPhysicalAttr obj)
	{
		this.removeToManyTarget("commktPhysicalAttrs", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<CommktPhysicalAttr> getCommktPhysicalAttrs()
	{
		return (List<CommktPhysicalAttr>) this.readProperty("commktPhysicalAttrs");
	}

	public void addToContractTransmissions(final ContractTransmission obj)
	{
		this.addToManyTarget("contractTransmissions", obj, true);
	}

	public void removeFromContractTransmissions(final ContractTransmission obj)
	{
		this.removeToManyTarget("contractTransmissions", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<ContractTransmission> getContractTransmissions()
	{
		return (List<ContractTransmission>) this.readProperty("contractTransmissions");
	}

	public void addToContracts(final Contract obj)
	{
		this.addToManyTarget("contracts", obj, true);
	}

	public void removeFromContracts(final Contract obj)
	{
		this.removeToManyTarget("contracts", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<Contract> getContracts()
	{
		return (List<Contract>) this.readProperty("contracts");
	}

	public void addToContracts1(final Contract obj)
	{
		this.addToManyTarget("contracts1", obj, true);
	}

	public void removeFromContracts1(final Contract obj)
	{
		this.removeToManyTarget("contracts1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<Contract> getContracts1()
	{
		return (List<Contract>) this.readProperty("contracts1");
	}

	public void addToCostApprovals(final CostApproval obj)
	{
		this.addToManyTarget("costApprovals", obj, true);
	}

	public void removeFromCostApprovals(final CostApproval obj)
	{
		this.removeToManyTarget("costApprovals", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<CostApproval> getCostApprovals()
	{
		return (List<CostApproval>) this.readProperty("costApprovals");
	}

	public void addToCostComposites(final CostComposite obj)
	{
		this.addToManyTarget("costComposites", obj, true);
	}

	public void removeFromCostComposites(final CostComposite obj)
	{
		this.removeToManyTarget("costComposites", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<CostComposite> getCostComposites()
	{
		return (List<CostComposite>) this.readProperty("costComposites");
	}

	public void addToCosts(final Cost obj)
	{
		this.addToManyTarget("costs", obj, true);
	}

	public void removeFromCosts(final Cost obj)
	{
		this.removeToManyTarget("costs", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<Cost> getCosts()
	{
		return (List<Cost>) this.readProperty("costs");
	}

	public void addToCosts1(final Cost obj)
	{
		this.addToManyTarget("costs1", obj, true);
	}

	public void removeFromCosts1(final Cost obj)
	{
		this.removeToManyTarget("costs1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<Cost> getCosts1()
	{
		return (List<Cost>) this.readProperty("costs1");
	}

	public void addToCosts2(final Cost obj)
	{
		this.addToManyTarget("costs2", obj, true);
	}

	public void removeFromCosts2(final Cost obj)
	{
		this.removeToManyTarget("costs2", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<Cost> getCosts2()
	{
		return (List<Cost>) this.readProperty("costs2");
	}

	public void addToCosts3(final Cost obj)
	{
		this.addToManyTarget("costs3", obj, true);
	}

	public void removeFromCosts3(final Cost obj)
	{
		this.removeToManyTarget("costs3", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<Cost> getCosts3()
	{
		return (List<Cost>) this.readProperty("costs3");
	}

	public void addToCosts4(final Cost obj)
	{
		this.addToManyTarget("costs4", obj, true);
	}

	public void removeFromCosts4(final Cost obj)
	{
		this.removeToManyTarget("costs4", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<Cost> getCosts4()
	{
		return (List<Cost>) this.readProperty("costs4");
	}

	public void addToCosts5(final Cost obj)
	{
		this.addToManyTarget("costs5", obj, true);
	}

	public void removeFromCosts5(final Cost obj)
	{
		this.removeToManyTarget("costs5", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<Cost> getCosts5()
	{
		return (List<Cost>) this.readProperty("costs5");
	}

	public void addToCosts6(final Cost obj)
	{
		this.addToManyTarget("costs6", obj, true);
	}

	public void removeFromCosts6(final Cost obj)
	{
		this.removeToManyTarget("costs6", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<Cost> getCosts6()
	{
		return (List<Cost>) this.readProperty("costs6");
	}

	public void addToCreditGroups(final CreditGroup obj)
	{
		this.addToManyTarget("creditGroups", obj, true);
	}

	public void removeFromCreditGroups(final CreditGroup obj)
	{
		this.removeToManyTarget("creditGroups", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<CreditGroup> getCreditGroups()
	{
		return (List<CreditGroup>) this.readProperty("creditGroups");
	}

	public void addToCreditLimits(final CreditLimit obj)
	{
		this.addToManyTarget("creditLimits", obj, true);
	}

	public void removeFromCreditLimits(final CreditLimit obj)
	{
		this.removeToManyTarget("creditLimits", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<CreditLimit> getCreditLimits()
	{
		return (List<CreditLimit>) this.readProperty("creditLimits");
	}

	public void addToCreditReserves(final CreditReserve obj)
	{
		this.addToManyTarget("creditReserves", obj, true);
	}

	public void removeFromCreditReserves(final CreditReserve obj)
	{
		this.removeToManyTarget("creditReserves", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<CreditReserve> getCreditReserves()
	{
		return (List<CreditReserve>) this.readProperty("creditReserves");
	}

	public void setDesk(final Desk desk)
	{
		this.setToOneTarget("desk", desk, true);
	}

	public Desk getDesk()
	{
		return (Desk) this.readProperty("desk");
	}

	public void addToDocuments(final Document obj)
	{
		this.addToManyTarget("documents", obj, true);
	}

	public void removeFromDocuments(final Document obj)
	{
		this.removeToManyTarget("documents", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<Document> getDocuments()
	{
		return (List<Document>) this.readProperty("documents");
	}

	public void addToGroupsToUserss(final GroupsToUsers obj)
	{
		this.addToManyTarget("groupsToUserss", obj, true);
	}

	public void removeFromGroupsToUserss(final GroupsToUsers obj)
	{
		this.removeToManyTarget("groupsToUserss", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<GroupsToUsers> getGroupsToUserss()
	{
		return (List<GroupsToUsers>) this.readProperty("groupsToUserss");
	}

	public void addToGtcs(final Gtc obj)
	{
		this.addToManyTarget("gtcs", obj, true);
	}

	public void removeFromGtcs(final Gtc obj)
	{
		this.removeToManyTarget("gtcs", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<Gtc> getGtcs()
	{
		return (List<Gtc>) this.readProperty("gtcs");
	}

	public void setIctsUser(final UserConfig ictsUser)
	{
		this.setToOneTarget("ictsUser", ictsUser, true);
	}

	public UserConfig getIctsUser()
	{
		return (UserConfig) this.readProperty("ictsUser");
	}

	public void addToIctsUserPermissions(final IctsUserPermission obj)
	{
		this.addToManyTarget("ictsUserPermissions", obj, true);
	}

	public void removeFromIctsUserPermissions(final IctsUserPermission obj)
	{
		this.removeToManyTarget("ictsUserPermissions", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<IctsUserPermission> getIctsUserPermissions()
	{
		return (List<IctsUserPermission>) this.readProperty("ictsUserPermissions");
	}

	public void addToImpliedPrCurves(final ImpliedPrCurve obj)
	{
		this.addToManyTarget("impliedPrCurves", obj, true);
	}

	public void removeFromImpliedPrCurves(final ImpliedPrCurve obj)
	{
		this.removeToManyTarget("impliedPrCurves", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<ImpliedPrCurve> getImpliedPrCurves()
	{
		return (List<ImpliedPrCurve>) this.readProperty("impliedPrCurves");
	}

	public void addToImpliedPrCurves1(final ImpliedPrCurve obj)
	{
		this.addToManyTarget("impliedPrCurves1", obj, true);
	}

	public void removeFromImpliedPrCurves1(final ImpliedPrCurve obj)
	{
		this.removeToManyTarget("impliedPrCurves1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<ImpliedPrCurve> getImpliedPrCurves1()
	{
		return (List<ImpliedPrCurve>) this.readProperty("impliedPrCurves1");
	}

	public void addToImpliedPrDifferentials(final ImpliedPrDifferential obj)
	{
		this.addToManyTarget("impliedPrDifferentials", obj, true);
	}

	public void removeFromImpliedPrDifferentials(final ImpliedPrDifferential obj)
	{
		this.removeToManyTarget("impliedPrDifferentials", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<ImpliedPrDifferential> getImpliedPrDifferentials()
	{
		return (List<ImpliedPrDifferential>) this.readProperty("impliedPrDifferentials");
	}

	public void addToLcs(final Lc obj)
	{
		this.addToManyTarget("lcs", obj, true);
	}

	public void removeFromLcs(final Lc obj)
	{
		this.removeToManyTarget("lcs", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<Lc> getLcs()
	{
		return (List<Lc>) this.readProperty("lcs");
	}

	public void addToLcs1(final Lc obj)
	{
		this.addToManyTarget("lcs1", obj, true);
	}

	public void removeFromLcs1(final Lc obj)
	{
		this.removeToManyTarget("lcs1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<Lc> getLcs1()
	{
		return (List<Lc>) this.readProperty("lcs1");
	}

	public void addToLiveScenarios(final LiveScenario obj)
	{
		this.addToManyTarget("liveScenarios", obj, true);
	}

	public void removeFromLiveScenarios(final LiveScenario obj)
	{
		this.removeToManyTarget("liveScenarios", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<LiveScenario> getLiveScenarios()
	{
		return (List<LiveScenario>) this.readProperty("liveScenarios");
	}

	public void setLocation(final Location location)
	{
		this.setToOneTarget("location", location, true);
	}

	public Location getLocation()
	{
		return (Location) this.readProperty("location");
	}

	public void addToLocationExtInfoes(final LocationExtInfo obj)
	{
		this.addToManyTarget("locationExtInfoes", obj, true);
	}

	public void removeFromLocationExtInfoes(final LocationExtInfo obj)
	{
		this.removeToManyTarget("locationExtInfoes", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<LocationExtInfo> getLocationExtInfoes()
	{
		return (List<LocationExtInfo>) this.readProperty("locationExtInfoes");
	}

	public void addToLocationExtInfoes1(final LocationExtInfo obj)
	{
		this.addToManyTarget("locationExtInfoes1", obj, true);
	}

	public void removeFromLocationExtInfoes1(final LocationExtInfo obj)
	{
		this.removeToManyTarget("locationExtInfoes1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<LocationExtInfo> getLocationExtInfoes1()
	{
		return (List<LocationExtInfo>) this.readProperty("locationExtInfoes1");
	}

	public void addToLocationExtInfoes2(final LocationExtInfo obj)
	{
		this.addToManyTarget("locationExtInfoes2", obj, true);
	}

	public void removeFromLocationExtInfoes2(final LocationExtInfo obj)
	{
		this.removeToManyTarget("locationExtInfoes2", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<LocationExtInfo> getLocationExtInfoes2()
	{
		return (List<LocationExtInfo>) this.readProperty("locationExtInfoes2");
	}

	public void addToMasterCollAgreements(final MasterCollAgreement obj)
	{
		this.addToManyTarget("masterCollAgreements", obj, true);
	}

	public void removeFromMasterCollAgreements(final MasterCollAgreement obj)
	{
		this.removeToManyTarget("masterCollAgreements", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<MasterCollAgreement> getMasterCollAgreements()
	{
		return (List<MasterCollAgreement>) this.readProperty("masterCollAgreements");
	}

	public void addToParcels(final Parcel obj)
	{
		this.addToManyTarget("parcels", obj, true);
	}

	public void removeFromParcels(final Parcel obj)
	{
		this.removeToManyTarget("parcels", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<Parcel> getParcels()
	{
		return (List<Parcel>) this.readProperty("parcels");
	}

	public void addToParcels1(final Parcel obj)
	{
		this.addToManyTarget("parcels1", obj, true);
	}

	public void removeFromParcels1(final Parcel obj)
	{
		this.removeToManyTarget("parcels1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<Parcel> getParcels1()
	{
		return (List<Parcel>) this.readProperty("parcels1");
	}

	public void addToParentGuarantees(final ParentGuarantee obj)
	{
		this.addToManyTarget("parentGuarantees", obj, true);
	}

	public void removeFromParentGuarantees(final ParentGuarantee obj)
	{
		this.removeToManyTarget("parentGuarantees", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<ParentGuarantee> getParentGuarantees()
	{
		return (List<ParentGuarantee>) this.readProperty("parentGuarantees");
	}

	public void addToParentGuarantees1(final ParentGuarantee obj)
	{
		this.addToManyTarget("parentGuarantees1", obj, true);
	}

	public void removeFromParentGuarantees1(final ParentGuarantee obj)
	{
		this.removeToManyTarget("parentGuarantees1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<ParentGuarantee> getParentGuarantees1()
	{
		return (List<ParentGuarantee>) this.readProperty("parentGuarantees1");
	}

	public void addToPlContracts(final PlContract obj)
	{
		this.addToManyTarget("plContracts", obj, true);
	}

	public void removeFromPlContracts(final PlContract obj)
	{
		this.removeToManyTarget("plContracts", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<PlContract> getPlContracts()
	{
		return (List<PlContract>) this.readProperty("plContracts");
	}

	public void addToPlContracts1(final PlContract obj)
	{
		this.addToManyTarget("plContracts1", obj, true);
	}

	public void removeFromPlContracts1(final PlContract obj)
	{
		this.removeToManyTarget("plContracts1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<PlContract> getPlContracts1()
	{
		return (List<PlContract>) this.readProperty("plContracts1");
	}

	public void addToPortfolioEods(final PortfolioEod obj)
	{
		this.addToManyTarget("portfolioEods", obj, true);
	}

	public void removeFromPortfolioEods(final PortfolioEod obj)
	{
		this.removeToManyTarget("portfolioEods", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<PortfolioEod> getPortfolioEods()
	{
		return (List<PortfolioEod>) this.readProperty("portfolioEods");
	}

	public void addToPortfolios(final Portfolio obj)
	{
		this.addToManyTarget("portfolios", obj, true);
	}

	public void removeFromPortfolios(final Portfolio obj)
	{
		this.removeToManyTarget("portfolios", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<Portfolio> getPortfolios()
	{
		return (List<Portfolio>) this.readProperty("portfolios");
	}

	public void addToRecapItems(final RecapItem obj)
	{
		this.addToManyTarget("recapItems", obj, true);
	}

	public void removeFromRecapItems(final RecapItem obj)
	{
		this.removeToManyTarget("recapItems", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<RecapItem> getRecapItems()
	{
		return (List<RecapItem>) this.readProperty("recapItems");
	}

	public void addToRiskCovers(final RiskCover obj)
	{
		this.addToManyTarget("riskCovers", obj, true);
	}

	public void removeFromRiskCovers(final RiskCover obj)
	{
		this.removeToManyTarget("riskCovers", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<RiskCover> getRiskCovers()
	{
		return (List<RiskCover>) this.readProperty("riskCovers");
	}

	public void addToScenarios(final Scenario obj)
	{
		this.addToManyTarget("scenarios", obj, true);
	}

	public void removeFromScenarios(final Scenario obj)
	{
		this.removeToManyTarget("scenarios", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<Scenario> getScenarios()
	{
		return (List<Scenario>) this.readProperty("scenarios");
	}

	public void addToSendToSaps(final SendToSap obj)
	{
		this.addToManyTarget("sendToSaps", obj, true);
	}

	public void removeFromSendToSaps(final SendToSap obj)
	{
		this.removeToManyTarget("sendToSaps", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<SendToSap> getSendToSaps()
	{
		return (List<SendToSap>) this.readProperty("sendToSaps");
	}

	public void addToShipments(final Shipment obj)
	{
		this.addToManyTarget("shipments", obj, true);
	}

	public void removeFromShipments(final Shipment obj)
	{
		this.removeToManyTarget("shipments", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<Shipment> getShipments()
	{
		return (List<Shipment>) this.readProperty("shipments");
	}

	public void addToShipments1(final Shipment obj)
	{
		this.addToManyTarget("shipments1", obj, true);
	}

	public void removeFromShipments1(final Shipment obj)
	{
		this.removeToManyTarget("shipments1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<Shipment> getShipments1()
	{
		return (List<Shipment>) this.readProperty("shipments1");
	}

	public void addToStrategies(final Strategy obj)
	{
		this.addToManyTarget("strategies", obj, true);
	}

	public void removeFromStrategies(final Strategy obj)
	{
		this.removeToManyTarget("strategies", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<Strategy> getStrategies()
	{
		return (List<Strategy>) this.readProperty("strategies");
	}

	public void addToSymphonyOutboundDatas(final SymphonyOutboundData obj)
	{
		this.addToManyTarget("symphonyOutboundDatas", obj, true);
	}

	public void removeFromSymphonyOutboundDatas(final SymphonyOutboundData obj)
	{
		this.removeToManyTarget("symphonyOutboundDatas", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<SymphonyOutboundData> getSymphonyOutboundDatas()
	{
		return (List<SymphonyOutboundData>) this.readProperty("symphonyOutboundDatas");
	}

	public void addToTiMarkToMarkets(final TiMarkToMarket obj)
	{
		this.addToManyTarget("tiMarkToMarkets", obj, true);
	}

	public void removeFromTiMarkToMarkets(final TiMarkToMarket obj)
	{
		this.removeToManyTarget("tiMarkToMarkets", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TiMarkToMarket> getTiMarkToMarkets()
	{
		return (List<TiMarkToMarket>) this.readProperty("tiMarkToMarkets");
	}

	public void addToTradeItemComposites(final TradeItemComposite obj)
	{
		this.addToManyTarget("tradeItemComposites", obj, true);
	}

	public void removeFromTradeItemComposites(final TradeItemComposite obj)
	{
		this.removeToManyTarget("tradeItemComposites", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeItemComposite> getTradeItemComposites()
	{
		return (List<TradeItemComposite>) this.readProperty("tradeItemComposites");
	}

	public void addToTradeItemDryPhies(final TradeItemDryPhy obj)
	{
		this.addToManyTarget("tradeItemDryPhies", obj, true);
	}

	public void removeFromTradeItemDryPhies(final TradeItemDryPhy obj)
	{
		this.removeToManyTarget("tradeItemDryPhies", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeItemDryPhy> getTradeItemDryPhies()
	{
		return (List<TradeItemDryPhy>) this.readProperty("tradeItemDryPhies");
	}

	public void addToTradeItemDryPhies1(final TradeItemDryPhy obj)
	{
		this.addToManyTarget("tradeItemDryPhies1", obj, true);
	}

	public void removeFromTradeItemDryPhies1(final TradeItemDryPhy obj)
	{
		this.removeToManyTarget("tradeItemDryPhies1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeItemDryPhy> getTradeItemDryPhies1()
	{
		return (List<TradeItemDryPhy>) this.readProperty("tradeItemDryPhies1");
	}

	public void addToTradeItemWetPhies(final TradeItemWetPhy obj)
	{
		this.addToManyTarget("tradeItemWetPhies", obj, true);
	}

	public void removeFromTradeItemWetPhies(final TradeItemWetPhy obj)
	{
		this.removeToManyTarget("tradeItemWetPhies", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeItemWetPhy> getTradeItemWetPhies()
	{
		return (List<TradeItemWetPhy>) this.readProperty("tradeItemWetPhies");
	}

	public void addToTradeItemWetPhies1(final TradeItemWetPhy obj)
	{
		this.addToManyTarget("tradeItemWetPhies1", obj, true);
	}

	public void removeFromTradeItemWetPhies1(final TradeItemWetPhy obj)
	{
		this.removeToManyTarget("tradeItemWetPhies1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeItemWetPhy> getTradeItemWetPhies1()
	{
		return (List<TradeItemWetPhy>) this.readProperty("tradeItemWetPhies1");
	}

	public void addToTradeItems(final TradeItem obj)
	{
		this.addToManyTarget("tradeItems", obj, true);
	}

	public void removeFromTradeItems(final TradeItem obj)
	{
		this.removeToManyTarget("tradeItems", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeItem> getTradeItems()
	{
		return (List<TradeItem>) this.readProperty("tradeItems");
	}

	public void addToTradeSearchSavedatas(final TradeSearchSavedata obj)
	{
		this.addToManyTarget("tradeSearchSavedatas", obj, true);
	}

	public void removeFromTradeSearchSavedatas(final TradeSearchSavedata obj)
	{
		this.removeToManyTarget("tradeSearchSavedatas", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeSearchSavedata> getTradeSearchSavedatas()
	{
		return (List<TradeSearchSavedata>) this.readProperty("tradeSearchSavedatas");
	}

	public void addToTrades(final Trade obj)
	{
		this.addToManyTarget("trades", obj, true);
	}

	public void removeFromTrades(final Trade obj)
	{
		this.removeToManyTarget("trades", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<Trade> getTrades()
	{
		return (List<Trade>) this.readProperty("trades");
	}

	public void addToTrades1(final Trade obj)
	{
		this.addToManyTarget("trades1", obj, true);
	}

	public void removeFromTrades1(final Trade obj)
	{
		this.removeToManyTarget("trades1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<Trade> getTrades1()
	{
		return (List<Trade>) this.readProperty("trades1");
	}

	public void addToTrades2(final Trade obj)
	{
		this.addToManyTarget("trades2", obj, true);
	}

	public void removeFromTrades2(final Trade obj)
	{
		this.removeToManyTarget("trades2", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<Trade> getTrades2()
	{
		return (List<Trade>) this.readProperty("trades2");
	}

	public void addToTrades3(final Trade obj)
	{
		this.addToManyTarget("trades3", obj, true);
	}

	public void removeFromTrades3(final Trade obj)
	{
		this.removeToManyTarget("trades3", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<Trade> getTrades3()
	{
		return (List<Trade>) this.readProperty("trades3");
	}

	public void addToUserContacts(final UserContact obj)
	{
		this.addToManyTarget("userContacts", obj, true);
	}

	public void removeFromUserContacts(final UserContact obj)
	{
		this.removeToManyTarget("userContacts", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<UserContact> getUserContacts()
	{
		return (List<UserContact>) this.readProperty("userContacts");
	}

	public void addToUserDefaults(final UserDefault obj)
	{
		this.addToManyTarget("userDefaults", obj, true);
	}

	public void removeFromUserDefaults(final UserDefault obj)
	{
		this.removeToManyTarget("userDefaults", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<UserDefault> getUserDefaults()
	{
		return (List<UserDefault>) this.readProperty("userDefaults");
	}

	public void setUserJobTitle(final UserJobTitle userJobTitle)
	{
		this.setToOneTarget("userJobTitle", userJobTitle, true);
	}

	public UserJobTitle getUserJobTitle()
	{
		return (UserJobTitle) this.readProperty("userJobTitle");
	}

	public void addToUserLoginHistories(final UserLoginHistory obj)
	{
		this.addToManyTarget("userLoginHistories", obj, true);
	}

	public void removeFromUserLoginHistories(final UserLoginHistory obj)
	{
		this.removeToManyTarget("userLoginHistories", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<UserLoginHistory> getUserLoginHistories()
	{
		return (List<UserLoginHistory>) this.readProperty("userLoginHistories");
	}

	public void addToUserResourceses(final UserResources obj)
	{
		this.addToManyTarget("userResourceses", obj, true);
	}

	public void removeFromUserResourceses(final UserResources obj)
	{
		this.removeToManyTarget("userResourceses", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<UserResources> getUserResourceses()
	{
		return (List<UserResources>) this.readProperty("userResourceses");
	}

	public void addToUserUserGroups(final UserUserGroup obj)
	{
		this.addToManyTarget("userUserGroups", obj, true);
	}

	public void removeFromUserUserGroups(final UserUserGroup obj)
	{
		this.removeToManyTarget("userUserGroups", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<UserUserGroup> getUserUserGroups()
	{
		return (List<UserUserGroup>) this.readProperty("userUserGroups");
	}

	public void addToVarRuns(final VarRun obj)
	{
		this.addToManyTarget("varRuns", obj, true);
	}

	public void removeFromVarRuns(final VarRun obj)
	{
		this.removeToManyTarget("varRuns", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<VarRun> getVarRuns()
	{
		return (List<VarRun>) this.readProperty("varRuns");
	}

	public void addToVoucherApprovals(final VoucherApproval obj)
	{
		this.addToManyTarget("voucherApprovals", obj, true);
	}

	public void removeFromVoucherApprovals(final VoucherApproval obj)
	{
		this.removeToManyTarget("voucherApprovals", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<VoucherApproval> getVoucherApprovals()
	{
		return (List<VoucherApproval>) this.readProperty("voucherApprovals");
	}

	public void addToVoucherDuedates(final VoucherDuedate obj)
	{
		this.addToManyTarget("voucherDuedates", obj, true);
	}

	public void removeFromVoucherDuedates(final VoucherDuedate obj)
	{
		this.removeToManyTarget("voucherDuedates", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<VoucherDuedate> getVoucherDuedates()
	{
		return (List<VoucherDuedate>) this.readProperty("voucherDuedates");
	}

	public void addToVoucherDuedates1(final VoucherDuedate obj)
	{
		this.addToManyTarget("voucherDuedates1", obj, true);
	}

	public void removeFromVoucherDuedates1(final VoucherDuedate obj)
	{
		this.removeToManyTarget("voucherDuedates1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<VoucherDuedate> getVoucherDuedates1()
	{
		return (List<VoucherDuedate>) this.readProperty("voucherDuedates1");
	}

	public void addToVoucherPayApprovals(final VoucherPayApproval obj)
	{
		this.addToManyTarget("voucherPayApprovals", obj, true);
	}

	public void removeFromVoucherPayApprovals(final VoucherPayApproval obj)
	{
		this.removeToManyTarget("voucherPayApprovals", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<VoucherPayApproval> getVoucherPayApprovals()
	{
		return (List<VoucherPayApproval>) this.readProperty("voucherPayApprovals");
	}

	public void addToVoucherPayments(final VoucherPayment obj)
	{
		this.addToManyTarget("voucherPayments", obj, true);
	}

	public void removeFromVoucherPayments(final VoucherPayment obj)
	{
		this.removeToManyTarget("voucherPayments", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<VoucherPayment> getVoucherPayments()
	{
		return (List<VoucherPayment>) this.readProperty("voucherPayments");
	}

	public void addToVouchers(final Voucher obj)
	{
		this.addToManyTarget("vouchers", obj, true);
	}

	public void removeFromVouchers(final Voucher obj)
	{
		this.removeToManyTarget("vouchers", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<Voucher> getVouchers()
	{
		return (List<Voucher>) this.readProperty("vouchers");
	}

	public void addToVouchers1(final Voucher obj)
	{
		this.addToManyTarget("vouchers1", obj, true);
	}

	public void removeFromVouchers1(final Voucher obj)
	{
		this.removeToManyTarget("vouchers1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<Voucher> getVouchers1()
	{
		return (List<Voucher>) this.readProperty("vouchers1");
	}

	public void addToVouchers2(final Voucher obj)
	{
		this.addToManyTarget("vouchers2", obj, true);
	}

	public void removeFromVouchers2(final Voucher obj)
	{
		this.removeToManyTarget("vouchers2", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<Voucher> getVouchers2()
	{
		return (List<Voucher>) this.readProperty("vouchers2");
	}

	public void addToVouchers3(final Voucher obj)
	{
		this.addToManyTarget("vouchers3", obj, true);
	}

	public void removeFromVouchers3(final Voucher obj)
	{
		this.removeToManyTarget("vouchers3", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<Voucher> getVouchers3()
	{
		return (List<Voucher>) this.readProperty("vouchers3");
	}

	public void addToVouchers4(final Voucher obj)
	{
		this.addToManyTarget("vouchers4", obj, true);
	}

	public void removeFromVouchers4(final Voucher obj)
	{
		this.removeToManyTarget("vouchers4", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<Voucher> getVouchers4()
	{
		return (List<Voucher>) this.readProperty("vouchers4");
	}

	public void addToWorkAreaUserLinkss(final WorkAreaUserLinks obj)
	{
		this.addToManyTarget("workAreaUserLinkss", obj, true);
	}

	public void removeFromWorkAreaUserLinkss(final WorkAreaUserLinks obj)
	{
		this.removeToManyTarget("workAreaUserLinkss", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<WorkAreaUserLinks> getWorkAreaUserLinkss()
	{
		return (List<WorkAreaUserLinks>) this.readProperty("workAreaUserLinkss");
	}

}
