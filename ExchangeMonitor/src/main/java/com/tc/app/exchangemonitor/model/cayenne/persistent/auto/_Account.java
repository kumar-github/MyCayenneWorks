package com.tc.app.exchangemonitor.model.cayenne.persistent.auto;

import java.util.Date;
import java.util.List;

import org.apache.cayenne.CayenneDataObject;
import org.apache.cayenne.exp.Property;

import com.tc.app.exchangemonitor.model.cayenne.persistent.*;

/**
 * Class _Account was generated by Cayenne.
 * It is probably a good idea to avoid changing this class manually,
 * since it may be overwritten next time code is regenerated.
 * If you need to make any customizations, please use subclass.
 */
public abstract class _Account extends CayenneDataObject
{

	private static final long serialVersionUID = 1L;

	public static final String ACCT_NUM_PK_COLUMN = "acct_num";

	public static final Property<String> ACCT_FISCAL_CODE = new Property<>("acctFiscalCode");
	public static final Property<String> ACCT_FULL_NAME = new Property<>("acctFullName");
	public static final Property<String> ACCT_PARENT_IND = new Property<>("acctParentInd");
	public static final Property<String> ACCT_SHORT_NAME = new Property<>("acctShortName");
	public static final Property<String> ACCT_STATUS = new Property<>("acctStatus");
	public static final Property<String> ACCT_SUB_IND = new Property<>("acctSubInd");
	public static final Property<String> ACCT_SUB_TYPE_CODE = new Property<>("acctSubTypeCode");
	public static final Property<String> ACCT_VAT_CODE = new Property<>("acctVatCode");
	public static final Property<Boolean> ALLOWS_BOOKOUT = new Property<>("allowsBookout");
	public static final Property<Boolean> ALLOWS_NETOUT = new Property<>("allowsNetout");
	public static final Property<String> GOVT_CODE = new Property<>("govtCode");
	public static final Property<Integer> LEGAL_ENTITY_NUM = new Property<>("legalEntityNum");
	public static final Property<String> MAN_INPUT_SEC_QTY_REQUIRED = new Property<>("manInputSecQtyRequired");
	public static final Property<Date> MASTER_AGREEMENT_DATE = new Property<>("masterAgreementDate");
	public static final Property<Integer> TRANS_ID = new Property<>("transId");
	public static final Property<AccountCreditInfo> ACCOUNT = new Property<>("account");
	public static final Property<BookingCompanyInfo> ACCOUNT1 = new Property<>("account1");
	public static final Property<AccountExtInfo> ACCOUNT2 = new Property<>("account2");
	public static final Property<AccountExposure> ACCOUNT3 = new Property<>("account3");
	public static final Property<BookingFixture> ACCOUNT4 = new Property<>("account4");
	public static final Property<List<AccountAddress>> ACCOUNT_ADDRESSES = new Property<>("accountAddresses");
	public static final Property<List<AccountAffiliated>> ACCOUNT_AFFILIATEDS = new Property<>("accountAffiliateds");
	public static final Property<List<AccountAffiliated>> ACCOUNT_AFFILIATEDS1 = new Property<>("accountAffiliateds1");
	public static final Property<List<AccountAgreement>> ACCOUNT_AGREEMENTS = new Property<>("accountAgreements");
	public static final Property<List<AccountAgreement>> ACCOUNT_AGREEMENTS1 = new Property<>("accountAgreements1");
	public static final Property<List<AccountBankInfo>> ACCOUNT_BANK_INFOES = new Property<>("accountBankInfoes");
	public static final Property<List<AccountBankInfo>> ACCOUNT_BANK_INFOES1 = new Property<>("accountBankInfoes1");
	public static final Property<List<AccountCollateral>> ACCOUNT_COLLATERALS = new Property<>("accountCollaterals");
	public static final Property<List<AccountCommktGtc>> ACCOUNT_COMMKT_GTCS = new Property<>("accountCommktGtcs");
	public static final Property<List<AccountCommktGtc>> ACCOUNT_COMMKT_GTCS1 = new Property<>("accountCommktGtcs1");
	public static final Property<List<AccountContact>> ACCOUNT_CONTACTS = new Property<>("accountContacts");
	public static final Property<List<AccountCreditAlarmLog>> ACCOUNT_CREDIT_ALARM_LOGS = new Property<>("accountCreditAlarmLogs");
	public static final Property<List<AccountCreditInfo>> ACCOUNT_CREDIT_INFOES = new Property<>("accountCreditInfoes");
	public static final Property<List<AccountCreditLimit>> ACCOUNT_CREDIT_LIMITS = new Property<>("accountCreditLimits");
	public static final Property<List<AccountGroup>> ACCOUNT_GROUPS = new Property<>("accountGroups");
	public static final Property<List<AccountGroup>> ACCOUNT_GROUPS1 = new Property<>("accountGroups1");
	public static final Property<List<AccountInstruction>> ACCOUNT_INSTRUCTIONS = new Property<>("accountInstructions");
	public static final Property<List<AccountInstruction>> ACCOUNT_INSTRUCTIONS1 = new Property<>("accountInstructions1");
	public static final Property<List<AccountNetOut>> ACCOUNT_NET_OUTS = new Property<>("accountNetOuts");
	public static final Property<List<AccountPetroex>> ACCOUNT_PETROEXES = new Property<>("accountPetroexes");
	public static final Property<AccountType> ACCOUNT_TYPE = new Property<>("accountType");
	public static final Property<List<AcctBookcompGuarantee>> ACCT_BOOKCOMP_GUARANTEES = new Property<>("acctBookcompGuarantees");
	public static final Property<List<AcctBookcomp>> ACCT_BOOKCOMPS = new Property<>("acctBookcomps");
	public static final Property<List<AcctBookcomp>> ACCT_BOOKCOMPS1 = new Property<>("acctBookcomps1");
	public static final Property<List<AcctCrBusCategory>> ACCT_CR_BUS_CATEGORIES = new Property<>("acctCrBusCategories");
	public static final Property<List<AcctFiscalRep>> ACCT_FISCAL_REPS = new Property<>("acctFiscalReps");
	public static final Property<List<AcctFiscalRep>> ACCT_FISCAL_REPS1 = new Property<>("acctFiscalReps1");
	public static final Property<List<AcctVatNumber>> ACCT_VAT_NUMBERS = new Property<>("acctVatNumbers");
	public static final Property<List<AiEstActualVat>> AI_EST_ACTUAL_VATS = new Property<>("aiEstActualVats");
	public static final Property<List<AiEstActualVat>> AI_EST_ACTUAL_VATS1 = new Property<>("aiEstActualVats1");
	public static final Property<List<AiEstActualVat>> AI_EST_ACTUAL_VATS2 = new Property<>("aiEstActualVats2");
	public static final Property<List<AllocationChain>> ALLOCATION_CHAINS = new Property<>("allocationChains");
	public static final Property<List<AllocationInsp>> ALLOCATION_INSPS = new Property<>("allocationInsps");
	public static final Property<List<AllocationItemInsp>> ALLOCATION_ITEM_INSPS = new Property<>("allocationItemInsps");
	public static final Property<List<AllocationItemVat>> ALLOCATION_ITEM_VATS = new Property<>("allocationItemVats");
	public static final Property<List<AllocationItemVat>> ALLOCATION_ITEM_VATS1 = new Property<>("allocationItemVats1");
	public static final Property<List<AllocationItemVat>> ALLOCATION_ITEM_VATS2 = new Property<>("allocationItemVats2");
	public static final Property<List<AllocationItem>> ALLOCATION_ITEMS = new Property<>("allocationItems");
	public static final Property<List<AllocationItem>> ALLOCATION_ITEMS1 = new Property<>("allocationItems1");
	public static final Property<List<AllocationItem>> ALLOCATION_ITEMS2 = new Property<>("allocationItems2");
	public static final Property<List<AllocationWorldScale>> ALLOCATION_WORLD_SCALES = new Property<>("allocationWorldScales");
	public static final Property<List<AllocationWorldScale>> ALLOCATION_WORLD_SCALES1 = new Property<>("allocationWorldScales1");
	public static final Property<List<Allocation>> ALLOCATIONS = new Property<>("allocations");
	public static final Property<List<Allocation>> ALLOCATIONS1 = new Property<>("allocations1");
	public static final Property<List<AssignTrade>> ASSIGN_TRADES = new Property<>("assignTrades");
	public static final Property<List<AutopoolCriteria>> AUTOPOOL_CRITERIAS = new Property<>("autopoolCriterias");
	public static final Property<List<BankCreditAlarmLog>> BANK_CREDIT_ALARM_LOGS = new Property<>("bankCreditAlarmLogs");
	public static final Property<List<BankExposureSummary>> BANK_EXPOSURE_SUMMARIES = new Property<>("bankExposureSummaries");
	public static final Property<List<BankExposure>> BANK_EXPOSURES = new Property<>("bankExposures");
	public static final Property<List<BankExposure>> BANK_EXPOSURES1 = new Property<>("bankExposures1");
	public static final Property<List<BookingCompanyInfo>> BOOKING_COMPANY_INFOES = new Property<>("bookingCompanyInfoes");
	public static final Property<List<BookingCompanyInfo>> BOOKING_COMPANY_INFOES1 = new Property<>("bookingCompanyInfoes1");
	public static final Property<List<BookingPeriod>> BOOKING_PERIODS = new Property<>("bookingPeriods");
	public static final Property<List<BrokerCommissionDefault>> BROKER_COMMISSION_DEFAULTS = new Property<>("brokerCommissionDefaults");
	public static final Property<List<BrokerCommissionDefault>> BROKER_COMMISSION_DEFAULTS1 = new Property<>("brokerCommissionDefaults1");
	public static final Property<List<BrokerCostAutogen>> BROKER_COST_AUTOGENS = new Property<>("brokerCostAutogens");
	public static final Property<List<BrokerCostAutogen>> BROKER_COST_AUTOGENS1 = new Property<>("brokerCostAutogens1");
	public static final Property<List<BrokerCostAutogen>> BROKER_COST_AUTOGENS2 = new Property<>("brokerCostAutogens2");
	public static final Property<List<BrokerFifoRunRec>> BROKER_FIFO_RUN_RECS = new Property<>("brokerFifoRunRecs");
	public static final Property<List<CashCollateral>> CASH_COLLATERALS = new Property<>("cashCollaterals");
	public static final Property<List<CollateralParty>> COLLATERAL_PARTIES = new Property<>("collateralParties");
	public static final Property<Comment> COMMENT = new Property<>("comment");
	public static final Property<List<Contract>> CONTRACTS = new Property<>("contracts");
	public static final Property<List<CostApproval>> COST_APPROVALS = new Property<>("costApprovals");
	public static final Property<List<CostCreditExposure>> COST_CREDIT_EXPOSURES = new Property<>("costCreditExposures");
	public static final Property<List<CostCreditExposure>> COST_CREDIT_EXPOSURES1 = new Property<>("costCreditExposures1");
	public static final Property<List<CostReportSnapshot>> COST_REPORT_SNAPSHOTS = new Property<>("costReportSnapshots");
	public static final Property<List<CostTemplateCntparty>> COST_TEMPLATE_CNTPARTIES = new Property<>("costTemplateCntparties");
	public static final Property<List<Cost>> COSTS = new Property<>("costs");
	public static final Property<List<Cost>> COSTS1 = new Property<>("costs1");
	public static final Property<List<Cost>> COSTS2 = new Property<>("costs2");
	public static final Property<List<CreditGroup>> CREDIT_GROUPS = new Property<>("creditGroups");
	public static final Property<List<CreditLimit>> CREDIT_LIMITS = new Property<>("creditLimits");
	public static final Property<List<CreditLimit>> CREDIT_LIMITS1 = new Property<>("creditLimits1");
	public static final Property<List<CreditReserve>> CREDIT_RESERVES = new Property<>("creditReserves");
	public static final Property<List<DemurrageReport>> DEMURRAGE_REPORTS = new Property<>("demurrageReports");
	public static final Property<List<Department>> DEPARTMENTS = new Property<>("departments");
	public static final Property<List<Exposure>> EXPOSURES = new Property<>("exposures");
	public static final Property<List<Exposure>> EXPOSURES1 = new Property<>("exposures1");
	public static final Property<List<ExternalPosition>> EXTERNAL_POSITIONS = new Property<>("externalPositions");
	public static final Property<List<FifoGroup>> FIFO_GROUPS = new Property<>("fifoGroups");
	public static final Property<List<ForecastValue>> FORECAST_VALUES = new Property<>("forecastValues");
	public static final Property<List<ForecastValue>> FORECAST_VALUES1 = new Property<>("forecastValues1");
	public static final Property<List<FxHedgeRate>> FX_HEDGE_RATES = new Property<>("fxHedgeRates");
	public static final Property<List<InvCreditExposure>> INV_CREDIT_EXPOSURES = new Property<>("invCreditExposures");
	public static final Property<List<InvCreditExposure>> INV_CREDIT_EXPOSURES1 = new Property<>("invCreditExposures1");
	public static final Property<List<LcAccountUsage>> LC_ACCOUNT_USAGES = new Property<>("lcAccountUsages");
	public static final Property<List<LcBankfeeAutogen>> LC_BANKFEE_AUTOGENS = new Property<>("lcBankfeeAutogens");
	public static final Property<List<LcBankfeeAutogen>> LC_BANKFEE_AUTOGENS1 = new Property<>("lcBankfeeAutogens1");
	public static final Property<List<LcBankfeeRefdata>> LC_BANKFEE_REFDATAS = new Property<>("lcBankfeeRefdatas");
	public static final Property<List<LcBankfeeRefdata>> LC_BANKFEE_REFDATAS1 = new Property<>("lcBankfeeRefdatas1");
	public static final Property<List<LcDraw>> LC_DRAWS = new Property<>("lcDraws");
	public static final Property<List<Lc>> LCS = new Property<>("lcs");
	public static final Property<List<Lc>> LCS1 = new Property<>("lcs1");
	public static final Property<List<Lc>> LCS2 = new Property<>("lcs2");
	public static final Property<List<Lc>> LCS3 = new Property<>("lcs3");
	public static final Property<List<Lc>> LCS4 = new Property<>("lcs4");
	public static final Property<List<Lc>> LCS5 = new Property<>("lcs5");
	public static final Property<List<LicenseCovers>> LICENSE_COVERSS = new Property<>("licenseCoverss");
	public static final Property<List<License>> LICENSES = new Property<>("licenses");
	public static final Property<List<LmAcctdataMapping>> LM_ACCTDATA_MAPPINGS = new Property<>("lmAcctdataMappings");
	public static final Property<List<LmMarginHistory>> LM_MARGIN_HISTORIES = new Property<>("lmMarginHistories");
	public static final Property<List<LocationData>> LOCATION_DATAS = new Property<>("locationDatas");
	public static final Property<List<LocationExtInfo>> LOCATION_EXT_INFOES = new Property<>("locationExtInfoes");
	public static final Property<List<LocationTankInfo>> LOCATION_TANK_INFOES = new Property<>("locationTankInfoes");
	public static final Property<List<LocationTankInfo>> LOCATION_TANK_INFOES1 = new Property<>("locationTankInfoes1");
	public static final Property<List<MarketableSecurity>> MARKETABLE_SECURITIES = new Property<>("marketableSecurities");
	public static final Property<List<Mot>> MOTS = new Property<>("mots");
	public static final Property<List<ParentGuarSubsCovered>> PARENT_GUAR_SUBS_COVEREDS = new Property<>("parentGuarSubsCovereds");
	public static final Property<List<ParentGuarantee>> PARENT_GUARANTEES = new Property<>("parentGuarantees");
	public static final Property<List<ParentGuarantee>> PARENT_GUARANTEES1 = new Property<>("parentGuarantees1");
	public static final Property<List<PmTradeMatchCriteria>> PM_TRADE_MATCH_CRITERIAS = new Property<>("pmTradeMatchCriterias");
	public static final Property<List<PortfolioBookPl>> PORTFOLIO_BOOK_PLS = new Property<>("portfolioBookPls");
	public static final Property<List<PortfolioEod>> PORTFOLIO_EODS = new Property<>("portfolioEods");
	public static final Property<List<PortfolioJv>> PORTFOLIO_JVS = new Property<>("portfolioJvs");
	public static final Property<List<PortfolioJv>> PORTFOLIO_JVS1 = new Property<>("portfolioJvs1");
	public static final Property<List<Portfolio>> PORTFOLIOS = new Property<>("portfolios");
	public static final Property<List<PurchaseSaleGroup>> PURCHASE_SALE_GROUPS = new Property<>("purchaseSaleGroups");
	public static final Property<List<RiskCover>> RISK_COVERS = new Property<>("riskCovers");
	public static final Property<RiskTransferIndicator> RISK_TRANSFER_INDICATOR = new Property<>("riskTransferIndicator");
	public static final Property<List<ScenarioItem>> SCENARIO_ITEMS = new Property<>("scenarioItems");
	public static final Property<List<ScenarioItem>> SCENARIO_ITEMS1 = new Property<>("scenarioItems1");
	public static final Property<List<Scenario>> SCENARIOS = new Property<>("scenarios");
	public static final Property<List<SendToSap>> SEND_TO_SAPS = new Property<>("sendToSaps");
	public static final Property<List<Shipment>> SHIPMENTS = new Property<>("shipments");
	public static final Property<List<Shipment>> SHIPMENTS1 = new Property<>("shipments1");
	public static final Property<List<SymphonyOutboundData>> SYMPHONY_OUTBOUND_DATAS = new Property<>("symphonyOutboundDatas");
	public static final Property<List<TaxLocation>> TAX_LOCATIONS = new Property<>("taxLocations");
	public static final Property<List<TempValueAdjust>> TEMP_VALUE_ADJUSTS = new Property<>("tempValueAdjusts");
	public static final Property<List<TiMarkToMarket>> TI_MARK_TO_MARKETS = new Property<>("tiMarkToMarkets");
	public static final Property<List<TradeItemBunker>> TRADE_ITEM_BUNKERS = new Property<>("tradeItemBunkers");
	public static final Property<List<TradeItemBunker>> TRADE_ITEM_BUNKERS1 = new Property<>("tradeItemBunkers1");
	public static final Property<List<TradeItemCleared>> TRADE_ITEM_CLEAREDS = new Property<>("tradeItemCleareds");
	public static final Property<List<TradeItemExchOpt>> TRADE_ITEM_EXCH_OPTS = new Property<>("tradeItemExchOpts");
	public static final Property<List<TradeItemFut>> TRADE_ITEM_FUTS = new Property<>("tradeItemFuts");
	public static final Property<List<TradeItem>> TRADE_ITEMS = new Property<>("tradeItems");
	public static final Property<List<TradeItem>> TRADE_ITEMS1 = new Property<>("tradeItems1");
	public static final Property<List<TradeItem>> TRADE_ITEMS2 = new Property<>("tradeItems2");
	public static final Property<List<TradeItem>> TRADE_ITEMS3 = new Property<>("tradeItems3");
	public static final Property<List<TradeItem>> TRADE_ITEMS4 = new Property<>("tradeItems4");
	public static final Property<List<TradeOrderRailcar>> TRADE_ORDER_RAILCARS = new Property<>("tradeOrderRailcars");
	public static final Property<List<Trade>> TRADES = new Property<>("trades");
	public static final Property<List<VoucherApproval>> VOUCHER_APPROVALS = new Property<>("voucherApprovals");
	public static final Property<List<VoucherPayApproval>> VOUCHER_PAY_APPROVALS = new Property<>("voucherPayApprovals");
	public static final Property<List<Voucher>> VOUCHERS = new Property<>("vouchers");
	public static final Property<List<Voucher>> VOUCHERS1 = new Property<>("vouchers1");

	public void setAcctFiscalCode(final String acctFiscalCode)
	{
		this.writeProperty("acctFiscalCode", acctFiscalCode);
	}

	public String getAcctFiscalCode()
	{
		return (String) this.readProperty("acctFiscalCode");
	}

	public void setAcctFullName(final String acctFullName)
	{
		this.writeProperty("acctFullName", acctFullName);
	}

	public String getAcctFullName()
	{
		return (String) this.readProperty("acctFullName");
	}

	public void setAcctParentInd(final String acctParentInd)
	{
		this.writeProperty("acctParentInd", acctParentInd);
	}

	public String getAcctParentInd()
	{
		return (String) this.readProperty("acctParentInd");
	}

	public void setAcctShortName(final String acctShortName)
	{
		this.writeProperty("acctShortName", acctShortName);
	}

	public String getAcctShortName()
	{
		return (String) this.readProperty("acctShortName");
	}

	public void setAcctStatus(final String acctStatus)
	{
		this.writeProperty("acctStatus", acctStatus);
	}

	public String getAcctStatus()
	{
		return (String) this.readProperty("acctStatus");
	}

	public void setAcctSubInd(final String acctSubInd)
	{
		this.writeProperty("acctSubInd", acctSubInd);
	}

	public String getAcctSubInd()
	{
		return (String) this.readProperty("acctSubInd");
	}

	public void setAcctSubTypeCode(final String acctSubTypeCode)
	{
		this.writeProperty("acctSubTypeCode", acctSubTypeCode);
	}

	public String getAcctSubTypeCode()
	{
		return (String) this.readProperty("acctSubTypeCode");
	}

	public void setAcctVatCode(final String acctVatCode)
	{
		this.writeProperty("acctVatCode", acctVatCode);
	}

	public String getAcctVatCode()
	{
		return (String) this.readProperty("acctVatCode");
	}

	public void setAllowsBookout(final Boolean allowsBookout)
	{
		this.writeProperty("allowsBookout", allowsBookout);
	}

	public Boolean getAllowsBookout()
	{
		return (Boolean) this.readProperty("allowsBookout");
	}

	public void setAllowsNetout(final Boolean allowsNetout)
	{
		this.writeProperty("allowsNetout", allowsNetout);
	}

	public Boolean getAllowsNetout()
	{
		return (Boolean) this.readProperty("allowsNetout");
	}

	public void setGovtCode(final String govtCode)
	{
		this.writeProperty("govtCode", govtCode);
	}

	public String getGovtCode()
	{
		return (String) this.readProperty("govtCode");
	}

	public void setLegalEntityNum(final Integer legalEntityNum)
	{
		this.writeProperty("legalEntityNum", legalEntityNum);
	}

	public Integer getLegalEntityNum()
	{
		return (Integer) this.readProperty("legalEntityNum");
	}

	public void setManInputSecQtyRequired(final String manInputSecQtyRequired)
	{
		this.writeProperty("manInputSecQtyRequired", manInputSecQtyRequired);
	}

	public String getManInputSecQtyRequired()
	{
		return (String) this.readProperty("manInputSecQtyRequired");
	}

	public void setMasterAgreementDate(final Date masterAgreementDate)
	{
		this.writeProperty("masterAgreementDate", masterAgreementDate);
	}

	public Date getMasterAgreementDate()
	{
		return (Date) this.readProperty("masterAgreementDate");
	}

	public void setTransId(final Integer transId)
	{
		this.writeProperty("transId", transId);
	}

	public Integer getTransId()
	{
		return (Integer) this.readProperty("transId");
	}

	public void setAccount(final AccountCreditInfo account)
	{
		this.setToOneTarget("account", account, true);
	}

	public AccountCreditInfo getAccount()
	{
		return (AccountCreditInfo) this.readProperty("account");
	}

	public void setAccount1(final BookingCompanyInfo account1)
	{
		this.setToOneTarget("account1", account1, true);
	}

	public BookingCompanyInfo getAccount1()
	{
		return (BookingCompanyInfo) this.readProperty("account1");
	}

	public void setAccount2(final AccountExtInfo account2)
	{
		this.setToOneTarget("account2", account2, true);
	}

	public AccountExtInfo getAccount2()
	{
		return (AccountExtInfo) this.readProperty("account2");
	}

	public void setAccount3(final AccountExposure account3)
	{
		this.setToOneTarget("account3", account3, true);
	}

	public AccountExposure getAccount3()
	{
		return (AccountExposure) this.readProperty("account3");
	}

	public void setAccount4(final BookingFixture account4)
	{
		this.setToOneTarget("account4", account4, true);
	}

	public BookingFixture getAccount4()
	{
		return (BookingFixture) this.readProperty("account4");
	}

	public void addToAccountAddresses(final AccountAddress obj)
	{
		this.addToManyTarget("accountAddresses", obj, true);
	}

	public void removeFromAccountAddresses(final AccountAddress obj)
	{
		this.removeToManyTarget("accountAddresses", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<AccountAddress> getAccountAddresses()
	{
		return (List<AccountAddress>) this.readProperty("accountAddresses");
	}

	public void addToAccountAffiliateds(final AccountAffiliated obj)
	{
		this.addToManyTarget("accountAffiliateds", obj, true);
	}

	public void removeFromAccountAffiliateds(final AccountAffiliated obj)
	{
		this.removeToManyTarget("accountAffiliateds", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<AccountAffiliated> getAccountAffiliateds()
	{
		return (List<AccountAffiliated>) this.readProperty("accountAffiliateds");
	}

	public void addToAccountAffiliateds1(final AccountAffiliated obj)
	{
		this.addToManyTarget("accountAffiliateds1", obj, true);
	}

	public void removeFromAccountAffiliateds1(final AccountAffiliated obj)
	{
		this.removeToManyTarget("accountAffiliateds1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<AccountAffiliated> getAccountAffiliateds1()
	{
		return (List<AccountAffiliated>) this.readProperty("accountAffiliateds1");
	}

	public void addToAccountAgreements(final AccountAgreement obj)
	{
		this.addToManyTarget("accountAgreements", obj, true);
	}

	public void removeFromAccountAgreements(final AccountAgreement obj)
	{
		this.removeToManyTarget("accountAgreements", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<AccountAgreement> getAccountAgreements()
	{
		return (List<AccountAgreement>) this.readProperty("accountAgreements");
	}

	public void addToAccountAgreements1(final AccountAgreement obj)
	{
		this.addToManyTarget("accountAgreements1", obj, true);
	}

	public void removeFromAccountAgreements1(final AccountAgreement obj)
	{
		this.removeToManyTarget("accountAgreements1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<AccountAgreement> getAccountAgreements1()
	{
		return (List<AccountAgreement>) this.readProperty("accountAgreements1");
	}

	public void addToAccountBankInfoes(final AccountBankInfo obj)
	{
		this.addToManyTarget("accountBankInfoes", obj, true);
	}

	public void removeFromAccountBankInfoes(final AccountBankInfo obj)
	{
		this.removeToManyTarget("accountBankInfoes", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<AccountBankInfo> getAccountBankInfoes()
	{
		return (List<AccountBankInfo>) this.readProperty("accountBankInfoes");
	}

	public void addToAccountBankInfoes1(final AccountBankInfo obj)
	{
		this.addToManyTarget("accountBankInfoes1", obj, true);
	}

	public void removeFromAccountBankInfoes1(final AccountBankInfo obj)
	{
		this.removeToManyTarget("accountBankInfoes1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<AccountBankInfo> getAccountBankInfoes1()
	{
		return (List<AccountBankInfo>) this.readProperty("accountBankInfoes1");
	}

	public void addToAccountCollaterals(final AccountCollateral obj)
	{
		this.addToManyTarget("accountCollaterals", obj, true);
	}

	public void removeFromAccountCollaterals(final AccountCollateral obj)
	{
		this.removeToManyTarget("accountCollaterals", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<AccountCollateral> getAccountCollaterals()
	{
		return (List<AccountCollateral>) this.readProperty("accountCollaterals");
	}

	public void addToAccountCommktGtcs(final AccountCommktGtc obj)
	{
		this.addToManyTarget("accountCommktGtcs", obj, true);
	}

	public void removeFromAccountCommktGtcs(final AccountCommktGtc obj)
	{
		this.removeToManyTarget("accountCommktGtcs", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<AccountCommktGtc> getAccountCommktGtcs()
	{
		return (List<AccountCommktGtc>) this.readProperty("accountCommktGtcs");
	}

	public void addToAccountCommktGtcs1(final AccountCommktGtc obj)
	{
		this.addToManyTarget("accountCommktGtcs1", obj, true);
	}

	public void removeFromAccountCommktGtcs1(final AccountCommktGtc obj)
	{
		this.removeToManyTarget("accountCommktGtcs1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<AccountCommktGtc> getAccountCommktGtcs1()
	{
		return (List<AccountCommktGtc>) this.readProperty("accountCommktGtcs1");
	}

	public void addToAccountContacts(final AccountContact obj)
	{
		this.addToManyTarget("accountContacts", obj, true);
	}

	public void removeFromAccountContacts(final AccountContact obj)
	{
		this.removeToManyTarget("accountContacts", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<AccountContact> getAccountContacts()
	{
		return (List<AccountContact>) this.readProperty("accountContacts");
	}

	public void addToAccountCreditAlarmLogs(final AccountCreditAlarmLog obj)
	{
		this.addToManyTarget("accountCreditAlarmLogs", obj, true);
	}

	public void removeFromAccountCreditAlarmLogs(final AccountCreditAlarmLog obj)
	{
		this.removeToManyTarget("accountCreditAlarmLogs", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<AccountCreditAlarmLog> getAccountCreditAlarmLogs()
	{
		return (List<AccountCreditAlarmLog>) this.readProperty("accountCreditAlarmLogs");
	}

	public void addToAccountCreditInfoes(final AccountCreditInfo obj)
	{
		this.addToManyTarget("accountCreditInfoes", obj, true);
	}

	public void removeFromAccountCreditInfoes(final AccountCreditInfo obj)
	{
		this.removeToManyTarget("accountCreditInfoes", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<AccountCreditInfo> getAccountCreditInfoes()
	{
		return (List<AccountCreditInfo>) this.readProperty("accountCreditInfoes");
	}

	public void addToAccountCreditLimits(final AccountCreditLimit obj)
	{
		this.addToManyTarget("accountCreditLimits", obj, true);
	}

	public void removeFromAccountCreditLimits(final AccountCreditLimit obj)
	{
		this.removeToManyTarget("accountCreditLimits", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<AccountCreditLimit> getAccountCreditLimits()
	{
		return (List<AccountCreditLimit>) this.readProperty("accountCreditLimits");
	}

	public void addToAccountGroups(final AccountGroup obj)
	{
		this.addToManyTarget("accountGroups", obj, true);
	}

	public void removeFromAccountGroups(final AccountGroup obj)
	{
		this.removeToManyTarget("accountGroups", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<AccountGroup> getAccountGroups()
	{
		return (List<AccountGroup>) this.readProperty("accountGroups");
	}

	public void addToAccountGroups1(final AccountGroup obj)
	{
		this.addToManyTarget("accountGroups1", obj, true);
	}

	public void removeFromAccountGroups1(final AccountGroup obj)
	{
		this.removeToManyTarget("accountGroups1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<AccountGroup> getAccountGroups1()
	{
		return (List<AccountGroup>) this.readProperty("accountGroups1");
	}

	public void addToAccountInstructions(final AccountInstruction obj)
	{
		this.addToManyTarget("accountInstructions", obj, true);
	}

	public void removeFromAccountInstructions(final AccountInstruction obj)
	{
		this.removeToManyTarget("accountInstructions", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<AccountInstruction> getAccountInstructions()
	{
		return (List<AccountInstruction>) this.readProperty("accountInstructions");
	}

	public void addToAccountInstructions1(final AccountInstruction obj)
	{
		this.addToManyTarget("accountInstructions1", obj, true);
	}

	public void removeFromAccountInstructions1(final AccountInstruction obj)
	{
		this.removeToManyTarget("accountInstructions1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<AccountInstruction> getAccountInstructions1()
	{
		return (List<AccountInstruction>) this.readProperty("accountInstructions1");
	}

	public void addToAccountNetOuts(final AccountNetOut obj)
	{
		this.addToManyTarget("accountNetOuts", obj, true);
	}

	public void removeFromAccountNetOuts(final AccountNetOut obj)
	{
		this.removeToManyTarget("accountNetOuts", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<AccountNetOut> getAccountNetOuts()
	{
		return (List<AccountNetOut>) this.readProperty("accountNetOuts");
	}

	public void addToAccountPetroexes(final AccountPetroex obj)
	{
		this.addToManyTarget("accountPetroexes", obj, true);
	}

	public void removeFromAccountPetroexes(final AccountPetroex obj)
	{
		this.removeToManyTarget("accountPetroexes", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<AccountPetroex> getAccountPetroexes()
	{
		return (List<AccountPetroex>) this.readProperty("accountPetroexes");
	}

	public void setAccountType(final AccountType accountType)
	{
		this.setToOneTarget("accountType", accountType, true);
	}

	public AccountType getAccountType()
	{
		return (AccountType) this.readProperty("accountType");
	}

	public void addToAcctBookcompGuarantees(final AcctBookcompGuarantee obj)
	{
		this.addToManyTarget("acctBookcompGuarantees", obj, true);
	}

	public void removeFromAcctBookcompGuarantees(final AcctBookcompGuarantee obj)
	{
		this.removeToManyTarget("acctBookcompGuarantees", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<AcctBookcompGuarantee> getAcctBookcompGuarantees()
	{
		return (List<AcctBookcompGuarantee>) this.readProperty("acctBookcompGuarantees");
	}

	public void addToAcctBookcomps(final AcctBookcomp obj)
	{
		this.addToManyTarget("acctBookcomps", obj, true);
	}

	public void removeFromAcctBookcomps(final AcctBookcomp obj)
	{
		this.removeToManyTarget("acctBookcomps", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<AcctBookcomp> getAcctBookcomps()
	{
		return (List<AcctBookcomp>) this.readProperty("acctBookcomps");
	}

	public void addToAcctBookcomps1(final AcctBookcomp obj)
	{
		this.addToManyTarget("acctBookcomps1", obj, true);
	}

	public void removeFromAcctBookcomps1(final AcctBookcomp obj)
	{
		this.removeToManyTarget("acctBookcomps1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<AcctBookcomp> getAcctBookcomps1()
	{
		return (List<AcctBookcomp>) this.readProperty("acctBookcomps1");
	}

	public void addToAcctCrBusCategories(final AcctCrBusCategory obj)
	{
		this.addToManyTarget("acctCrBusCategories", obj, true);
	}

	public void removeFromAcctCrBusCategories(final AcctCrBusCategory obj)
	{
		this.removeToManyTarget("acctCrBusCategories", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<AcctCrBusCategory> getAcctCrBusCategories()
	{
		return (List<AcctCrBusCategory>) this.readProperty("acctCrBusCategories");
	}

	public void addToAcctFiscalReps(final AcctFiscalRep obj)
	{
		this.addToManyTarget("acctFiscalReps", obj, true);
	}

	public void removeFromAcctFiscalReps(final AcctFiscalRep obj)
	{
		this.removeToManyTarget("acctFiscalReps", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<AcctFiscalRep> getAcctFiscalReps()
	{
		return (List<AcctFiscalRep>) this.readProperty("acctFiscalReps");
	}

	public void addToAcctFiscalReps1(final AcctFiscalRep obj)
	{
		this.addToManyTarget("acctFiscalReps1", obj, true);
	}

	public void removeFromAcctFiscalReps1(final AcctFiscalRep obj)
	{
		this.removeToManyTarget("acctFiscalReps1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<AcctFiscalRep> getAcctFiscalReps1()
	{
		return (List<AcctFiscalRep>) this.readProperty("acctFiscalReps1");
	}

	public void addToAcctVatNumbers(final AcctVatNumber obj)
	{
		this.addToManyTarget("acctVatNumbers", obj, true);
	}

	public void removeFromAcctVatNumbers(final AcctVatNumber obj)
	{
		this.removeToManyTarget("acctVatNumbers", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<AcctVatNumber> getAcctVatNumbers()
	{
		return (List<AcctVatNumber>) this.readProperty("acctVatNumbers");
	}

	public void addToAiEstActualVats(final AiEstActualVat obj)
	{
		this.addToManyTarget("aiEstActualVats", obj, true);
	}

	public void removeFromAiEstActualVats(final AiEstActualVat obj)
	{
		this.removeToManyTarget("aiEstActualVats", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<AiEstActualVat> getAiEstActualVats()
	{
		return (List<AiEstActualVat>) this.readProperty("aiEstActualVats");
	}

	public void addToAiEstActualVats1(final AiEstActualVat obj)
	{
		this.addToManyTarget("aiEstActualVats1", obj, true);
	}

	public void removeFromAiEstActualVats1(final AiEstActualVat obj)
	{
		this.removeToManyTarget("aiEstActualVats1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<AiEstActualVat> getAiEstActualVats1()
	{
		return (List<AiEstActualVat>) this.readProperty("aiEstActualVats1");
	}

	public void addToAiEstActualVats2(final AiEstActualVat obj)
	{
		this.addToManyTarget("aiEstActualVats2", obj, true);
	}

	public void removeFromAiEstActualVats2(final AiEstActualVat obj)
	{
		this.removeToManyTarget("aiEstActualVats2", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<AiEstActualVat> getAiEstActualVats2()
	{
		return (List<AiEstActualVat>) this.readProperty("aiEstActualVats2");
	}

	public void addToAllocationChains(final AllocationChain obj)
	{
		this.addToManyTarget("allocationChains", obj, true);
	}

	public void removeFromAllocationChains(final AllocationChain obj)
	{
		this.removeToManyTarget("allocationChains", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<AllocationChain> getAllocationChains()
	{
		return (List<AllocationChain>) this.readProperty("allocationChains");
	}

	public void addToAllocationInsps(final AllocationInsp obj)
	{
		this.addToManyTarget("allocationInsps", obj, true);
	}

	public void removeFromAllocationInsps(final AllocationInsp obj)
	{
		this.removeToManyTarget("allocationInsps", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<AllocationInsp> getAllocationInsps()
	{
		return (List<AllocationInsp>) this.readProperty("allocationInsps");
	}

	public void addToAllocationItemInsps(final AllocationItemInsp obj)
	{
		this.addToManyTarget("allocationItemInsps", obj, true);
	}

	public void removeFromAllocationItemInsps(final AllocationItemInsp obj)
	{
		this.removeToManyTarget("allocationItemInsps", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<AllocationItemInsp> getAllocationItemInsps()
	{
		return (List<AllocationItemInsp>) this.readProperty("allocationItemInsps");
	}

	public void addToAllocationItemVats(final AllocationItemVat obj)
	{
		this.addToManyTarget("allocationItemVats", obj, true);
	}

	public void removeFromAllocationItemVats(final AllocationItemVat obj)
	{
		this.removeToManyTarget("allocationItemVats", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<AllocationItemVat> getAllocationItemVats()
	{
		return (List<AllocationItemVat>) this.readProperty("allocationItemVats");
	}

	public void addToAllocationItemVats1(final AllocationItemVat obj)
	{
		this.addToManyTarget("allocationItemVats1", obj, true);
	}

	public void removeFromAllocationItemVats1(final AllocationItemVat obj)
	{
		this.removeToManyTarget("allocationItemVats1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<AllocationItemVat> getAllocationItemVats1()
	{
		return (List<AllocationItemVat>) this.readProperty("allocationItemVats1");
	}

	public void addToAllocationItemVats2(final AllocationItemVat obj)
	{
		this.addToManyTarget("allocationItemVats2", obj, true);
	}

	public void removeFromAllocationItemVats2(final AllocationItemVat obj)
	{
		this.removeToManyTarget("allocationItemVats2", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<AllocationItemVat> getAllocationItemVats2()
	{
		return (List<AllocationItemVat>) this.readProperty("allocationItemVats2");
	}

	public void addToAllocationItems(final AllocationItem obj)
	{
		this.addToManyTarget("allocationItems", obj, true);
	}

	public void removeFromAllocationItems(final AllocationItem obj)
	{
		this.removeToManyTarget("allocationItems", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<AllocationItem> getAllocationItems()
	{
		return (List<AllocationItem>) this.readProperty("allocationItems");
	}

	public void addToAllocationItems1(final AllocationItem obj)
	{
		this.addToManyTarget("allocationItems1", obj, true);
	}

	public void removeFromAllocationItems1(final AllocationItem obj)
	{
		this.removeToManyTarget("allocationItems1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<AllocationItem> getAllocationItems1()
	{
		return (List<AllocationItem>) this.readProperty("allocationItems1");
	}

	public void addToAllocationItems2(final AllocationItem obj)
	{
		this.addToManyTarget("allocationItems2", obj, true);
	}

	public void removeFromAllocationItems2(final AllocationItem obj)
	{
		this.removeToManyTarget("allocationItems2", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<AllocationItem> getAllocationItems2()
	{
		return (List<AllocationItem>) this.readProperty("allocationItems2");
	}

	public void addToAllocationWorldScales(final AllocationWorldScale obj)
	{
		this.addToManyTarget("allocationWorldScales", obj, true);
	}

	public void removeFromAllocationWorldScales(final AllocationWorldScale obj)
	{
		this.removeToManyTarget("allocationWorldScales", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<AllocationWorldScale> getAllocationWorldScales()
	{
		return (List<AllocationWorldScale>) this.readProperty("allocationWorldScales");
	}

	public void addToAllocationWorldScales1(final AllocationWorldScale obj)
	{
		this.addToManyTarget("allocationWorldScales1", obj, true);
	}

	public void removeFromAllocationWorldScales1(final AllocationWorldScale obj)
	{
		this.removeToManyTarget("allocationWorldScales1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<AllocationWorldScale> getAllocationWorldScales1()
	{
		return (List<AllocationWorldScale>) this.readProperty("allocationWorldScales1");
	}

	public void addToAllocations(final Allocation obj)
	{
		this.addToManyTarget("allocations", obj, true);
	}

	public void removeFromAllocations(final Allocation obj)
	{
		this.removeToManyTarget("allocations", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<Allocation> getAllocations()
	{
		return (List<Allocation>) this.readProperty("allocations");
	}

	public void addToAllocations1(final Allocation obj)
	{
		this.addToManyTarget("allocations1", obj, true);
	}

	public void removeFromAllocations1(final Allocation obj)
	{
		this.removeToManyTarget("allocations1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<Allocation> getAllocations1()
	{
		return (List<Allocation>) this.readProperty("allocations1");
	}

	public void addToAssignTrades(final AssignTrade obj)
	{
		this.addToManyTarget("assignTrades", obj, true);
	}

	public void removeFromAssignTrades(final AssignTrade obj)
	{
		this.removeToManyTarget("assignTrades", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<AssignTrade> getAssignTrades()
	{
		return (List<AssignTrade>) this.readProperty("assignTrades");
	}

	public void addToAutopoolCriterias(final AutopoolCriteria obj)
	{
		this.addToManyTarget("autopoolCriterias", obj, true);
	}

	public void removeFromAutopoolCriterias(final AutopoolCriteria obj)
	{
		this.removeToManyTarget("autopoolCriterias", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<AutopoolCriteria> getAutopoolCriterias()
	{
		return (List<AutopoolCriteria>) this.readProperty("autopoolCriterias");
	}

	public void addToBankCreditAlarmLogs(final BankCreditAlarmLog obj)
	{
		this.addToManyTarget("bankCreditAlarmLogs", obj, true);
	}

	public void removeFromBankCreditAlarmLogs(final BankCreditAlarmLog obj)
	{
		this.removeToManyTarget("bankCreditAlarmLogs", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<BankCreditAlarmLog> getBankCreditAlarmLogs()
	{
		return (List<BankCreditAlarmLog>) this.readProperty("bankCreditAlarmLogs");
	}

	public void addToBankExposureSummaries(final BankExposureSummary obj)
	{
		this.addToManyTarget("bankExposureSummaries", obj, true);
	}

	public void removeFromBankExposureSummaries(final BankExposureSummary obj)
	{
		this.removeToManyTarget("bankExposureSummaries", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<BankExposureSummary> getBankExposureSummaries()
	{
		return (List<BankExposureSummary>) this.readProperty("bankExposureSummaries");
	}

	public void addToBankExposures(final BankExposure obj)
	{
		this.addToManyTarget("bankExposures", obj, true);
	}

	public void removeFromBankExposures(final BankExposure obj)
	{
		this.removeToManyTarget("bankExposures", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<BankExposure> getBankExposures()
	{
		return (List<BankExposure>) this.readProperty("bankExposures");
	}

	public void addToBankExposures1(final BankExposure obj)
	{
		this.addToManyTarget("bankExposures1", obj, true);
	}

	public void removeFromBankExposures1(final BankExposure obj)
	{
		this.removeToManyTarget("bankExposures1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<BankExposure> getBankExposures1()
	{
		return (List<BankExposure>) this.readProperty("bankExposures1");
	}

	public void addToBookingCompanyInfoes(final BookingCompanyInfo obj)
	{
		this.addToManyTarget("bookingCompanyInfoes", obj, true);
	}

	public void removeFromBookingCompanyInfoes(final BookingCompanyInfo obj)
	{
		this.removeToManyTarget("bookingCompanyInfoes", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<BookingCompanyInfo> getBookingCompanyInfoes()
	{
		return (List<BookingCompanyInfo>) this.readProperty("bookingCompanyInfoes");
	}

	public void addToBookingCompanyInfoes1(final BookingCompanyInfo obj)
	{
		this.addToManyTarget("bookingCompanyInfoes1", obj, true);
	}

	public void removeFromBookingCompanyInfoes1(final BookingCompanyInfo obj)
	{
		this.removeToManyTarget("bookingCompanyInfoes1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<BookingCompanyInfo> getBookingCompanyInfoes1()
	{
		return (List<BookingCompanyInfo>) this.readProperty("bookingCompanyInfoes1");
	}

	public void addToBookingPeriods(final BookingPeriod obj)
	{
		this.addToManyTarget("bookingPeriods", obj, true);
	}

	public void removeFromBookingPeriods(final BookingPeriod obj)
	{
		this.removeToManyTarget("bookingPeriods", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<BookingPeriod> getBookingPeriods()
	{
		return (List<BookingPeriod>) this.readProperty("bookingPeriods");
	}

	public void addToBrokerCommissionDefaults(final BrokerCommissionDefault obj)
	{
		this.addToManyTarget("brokerCommissionDefaults", obj, true);
	}

	public void removeFromBrokerCommissionDefaults(final BrokerCommissionDefault obj)
	{
		this.removeToManyTarget("brokerCommissionDefaults", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<BrokerCommissionDefault> getBrokerCommissionDefaults()
	{
		return (List<BrokerCommissionDefault>) this.readProperty("brokerCommissionDefaults");
	}

	public void addToBrokerCommissionDefaults1(final BrokerCommissionDefault obj)
	{
		this.addToManyTarget("brokerCommissionDefaults1", obj, true);
	}

	public void removeFromBrokerCommissionDefaults1(final BrokerCommissionDefault obj)
	{
		this.removeToManyTarget("brokerCommissionDefaults1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<BrokerCommissionDefault> getBrokerCommissionDefaults1()
	{
		return (List<BrokerCommissionDefault>) this.readProperty("brokerCommissionDefaults1");
	}

	public void addToBrokerCostAutogens(final BrokerCostAutogen obj)
	{
		this.addToManyTarget("brokerCostAutogens", obj, true);
	}

	public void removeFromBrokerCostAutogens(final BrokerCostAutogen obj)
	{
		this.removeToManyTarget("brokerCostAutogens", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<BrokerCostAutogen> getBrokerCostAutogens()
	{
		return (List<BrokerCostAutogen>) this.readProperty("brokerCostAutogens");
	}

	public void addToBrokerCostAutogens1(final BrokerCostAutogen obj)
	{
		this.addToManyTarget("brokerCostAutogens1", obj, true);
	}

	public void removeFromBrokerCostAutogens1(final BrokerCostAutogen obj)
	{
		this.removeToManyTarget("brokerCostAutogens1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<BrokerCostAutogen> getBrokerCostAutogens1()
	{
		return (List<BrokerCostAutogen>) this.readProperty("brokerCostAutogens1");
	}

	public void addToBrokerCostAutogens2(final BrokerCostAutogen obj)
	{
		this.addToManyTarget("brokerCostAutogens2", obj, true);
	}

	public void removeFromBrokerCostAutogens2(final BrokerCostAutogen obj)
	{
		this.removeToManyTarget("brokerCostAutogens2", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<BrokerCostAutogen> getBrokerCostAutogens2()
	{
		return (List<BrokerCostAutogen>) this.readProperty("brokerCostAutogens2");
	}

	public void addToBrokerFifoRunRecs(final BrokerFifoRunRec obj)
	{
		this.addToManyTarget("brokerFifoRunRecs", obj, true);
	}

	public void removeFromBrokerFifoRunRecs(final BrokerFifoRunRec obj)
	{
		this.removeToManyTarget("brokerFifoRunRecs", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<BrokerFifoRunRec> getBrokerFifoRunRecs()
	{
		return (List<BrokerFifoRunRec>) this.readProperty("brokerFifoRunRecs");
	}

	public void addToCashCollaterals(final CashCollateral obj)
	{
		this.addToManyTarget("cashCollaterals", obj, true);
	}

	public void removeFromCashCollaterals(final CashCollateral obj)
	{
		this.removeToManyTarget("cashCollaterals", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<CashCollateral> getCashCollaterals()
	{
		return (List<CashCollateral>) this.readProperty("cashCollaterals");
	}

	public void addToCollateralParties(final CollateralParty obj)
	{
		this.addToManyTarget("collateralParties", obj, true);
	}

	public void removeFromCollateralParties(final CollateralParty obj)
	{
		this.removeToManyTarget("collateralParties", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<CollateralParty> getCollateralParties()
	{
		return (List<CollateralParty>) this.readProperty("collateralParties");
	}

	public void setComment(final Comment comment)
	{
		this.setToOneTarget("comment", comment, true);
	}

	public Comment getComment()
	{
		return (Comment) this.readProperty("comment");
	}

	public void addToContracts(final Contract obj)
	{
		this.addToManyTarget("contracts", obj, true);
	}

	public void removeFromContracts(final Contract obj)
	{
		this.removeToManyTarget("contracts", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<Contract> getContracts()
	{
		return (List<Contract>) this.readProperty("contracts");
	}

	public void addToCostApprovals(final CostApproval obj)
	{
		this.addToManyTarget("costApprovals", obj, true);
	}

	public void removeFromCostApprovals(final CostApproval obj)
	{
		this.removeToManyTarget("costApprovals", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<CostApproval> getCostApprovals()
	{
		return (List<CostApproval>) this.readProperty("costApprovals");
	}

	public void addToCostCreditExposures(final CostCreditExposure obj)
	{
		this.addToManyTarget("costCreditExposures", obj, true);
	}

	public void removeFromCostCreditExposures(final CostCreditExposure obj)
	{
		this.removeToManyTarget("costCreditExposures", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<CostCreditExposure> getCostCreditExposures()
	{
		return (List<CostCreditExposure>) this.readProperty("costCreditExposures");
	}

	public void addToCostCreditExposures1(final CostCreditExposure obj)
	{
		this.addToManyTarget("costCreditExposures1", obj, true);
	}

	public void removeFromCostCreditExposures1(final CostCreditExposure obj)
	{
		this.removeToManyTarget("costCreditExposures1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<CostCreditExposure> getCostCreditExposures1()
	{
		return (List<CostCreditExposure>) this.readProperty("costCreditExposures1");
	}

	public void addToCostReportSnapshots(final CostReportSnapshot obj)
	{
		this.addToManyTarget("costReportSnapshots", obj, true);
	}

	public void removeFromCostReportSnapshots(final CostReportSnapshot obj)
	{
		this.removeToManyTarget("costReportSnapshots", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<CostReportSnapshot> getCostReportSnapshots()
	{
		return (List<CostReportSnapshot>) this.readProperty("costReportSnapshots");
	}

	public void addToCostTemplateCntparties(final CostTemplateCntparty obj)
	{
		this.addToManyTarget("costTemplateCntparties", obj, true);
	}

	public void removeFromCostTemplateCntparties(final CostTemplateCntparty obj)
	{
		this.removeToManyTarget("costTemplateCntparties", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<CostTemplateCntparty> getCostTemplateCntparties()
	{
		return (List<CostTemplateCntparty>) this.readProperty("costTemplateCntparties");
	}

	public void addToCosts(final Cost obj)
	{
		this.addToManyTarget("costs", obj, true);
	}

	public void removeFromCosts(final Cost obj)
	{
		this.removeToManyTarget("costs", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<Cost> getCosts()
	{
		return (List<Cost>) this.readProperty("costs");
	}

	public void addToCosts1(final Cost obj)
	{
		this.addToManyTarget("costs1", obj, true);
	}

	public void removeFromCosts1(final Cost obj)
	{
		this.removeToManyTarget("costs1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<Cost> getCosts1()
	{
		return (List<Cost>) this.readProperty("costs1");
	}

	public void addToCosts2(final Cost obj)
	{
		this.addToManyTarget("costs2", obj, true);
	}

	public void removeFromCosts2(final Cost obj)
	{
		this.removeToManyTarget("costs2", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<Cost> getCosts2()
	{
		return (List<Cost>) this.readProperty("costs2");
	}

	public void addToCreditGroups(final CreditGroup obj)
	{
		this.addToManyTarget("creditGroups", obj, true);
	}

	public void removeFromCreditGroups(final CreditGroup obj)
	{
		this.removeToManyTarget("creditGroups", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<CreditGroup> getCreditGroups()
	{
		return (List<CreditGroup>) this.readProperty("creditGroups");
	}

	public void addToCreditLimits(final CreditLimit obj)
	{
		this.addToManyTarget("creditLimits", obj, true);
	}

	public void removeFromCreditLimits(final CreditLimit obj)
	{
		this.removeToManyTarget("creditLimits", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<CreditLimit> getCreditLimits()
	{
		return (List<CreditLimit>) this.readProperty("creditLimits");
	}

	public void addToCreditLimits1(final CreditLimit obj)
	{
		this.addToManyTarget("creditLimits1", obj, true);
	}

	public void removeFromCreditLimits1(final CreditLimit obj)
	{
		this.removeToManyTarget("creditLimits1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<CreditLimit> getCreditLimits1()
	{
		return (List<CreditLimit>) this.readProperty("creditLimits1");
	}

	public void addToCreditReserves(final CreditReserve obj)
	{
		this.addToManyTarget("creditReserves", obj, true);
	}

	public void removeFromCreditReserves(final CreditReserve obj)
	{
		this.removeToManyTarget("creditReserves", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<CreditReserve> getCreditReserves()
	{
		return (List<CreditReserve>) this.readProperty("creditReserves");
	}

	public void addToDemurrageReports(final DemurrageReport obj)
	{
		this.addToManyTarget("demurrageReports", obj, true);
	}

	public void removeFromDemurrageReports(final DemurrageReport obj)
	{
		this.removeToManyTarget("demurrageReports", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<DemurrageReport> getDemurrageReports()
	{
		return (List<DemurrageReport>) this.readProperty("demurrageReports");
	}

	public void addToDepartments(final Department obj)
	{
		this.addToManyTarget("departments", obj, true);
	}

	public void removeFromDepartments(final Department obj)
	{
		this.removeToManyTarget("departments", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<Department> getDepartments()
	{
		return (List<Department>) this.readProperty("departments");
	}

	public void addToExposures(final Exposure obj)
	{
		this.addToManyTarget("exposures", obj, true);
	}

	public void removeFromExposures(final Exposure obj)
	{
		this.removeToManyTarget("exposures", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<Exposure> getExposures()
	{
		return (List<Exposure>) this.readProperty("exposures");
	}

	public void addToExposures1(final Exposure obj)
	{
		this.addToManyTarget("exposures1", obj, true);
	}

	public void removeFromExposures1(final Exposure obj)
	{
		this.removeToManyTarget("exposures1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<Exposure> getExposures1()
	{
		return (List<Exposure>) this.readProperty("exposures1");
	}

	public void addToExternalPositions(final ExternalPosition obj)
	{
		this.addToManyTarget("externalPositions", obj, true);
	}

	public void removeFromExternalPositions(final ExternalPosition obj)
	{
		this.removeToManyTarget("externalPositions", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<ExternalPosition> getExternalPositions()
	{
		return (List<ExternalPosition>) this.readProperty("externalPositions");
	}

	public void addToFifoGroups(final FifoGroup obj)
	{
		this.addToManyTarget("fifoGroups", obj, true);
	}

	public void removeFromFifoGroups(final FifoGroup obj)
	{
		this.removeToManyTarget("fifoGroups", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<FifoGroup> getFifoGroups()
	{
		return (List<FifoGroup>) this.readProperty("fifoGroups");
	}

	public void addToForecastValues(final ForecastValue obj)
	{
		this.addToManyTarget("forecastValues", obj, true);
	}

	public void removeFromForecastValues(final ForecastValue obj)
	{
		this.removeToManyTarget("forecastValues", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<ForecastValue> getForecastValues()
	{
		return (List<ForecastValue>) this.readProperty("forecastValues");
	}

	public void addToForecastValues1(final ForecastValue obj)
	{
		this.addToManyTarget("forecastValues1", obj, true);
	}

	public void removeFromForecastValues1(final ForecastValue obj)
	{
		this.removeToManyTarget("forecastValues1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<ForecastValue> getForecastValues1()
	{
		return (List<ForecastValue>) this.readProperty("forecastValues1");
	}

	public void addToFxHedgeRates(final FxHedgeRate obj)
	{
		this.addToManyTarget("fxHedgeRates", obj, true);
	}

	public void removeFromFxHedgeRates(final FxHedgeRate obj)
	{
		this.removeToManyTarget("fxHedgeRates", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<FxHedgeRate> getFxHedgeRates()
	{
		return (List<FxHedgeRate>) this.readProperty("fxHedgeRates");
	}

	public void addToInvCreditExposures(final InvCreditExposure obj)
	{
		this.addToManyTarget("invCreditExposures", obj, true);
	}

	public void removeFromInvCreditExposures(final InvCreditExposure obj)
	{
		this.removeToManyTarget("invCreditExposures", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<InvCreditExposure> getInvCreditExposures()
	{
		return (List<InvCreditExposure>) this.readProperty("invCreditExposures");
	}

	public void addToInvCreditExposures1(final InvCreditExposure obj)
	{
		this.addToManyTarget("invCreditExposures1", obj, true);
	}

	public void removeFromInvCreditExposures1(final InvCreditExposure obj)
	{
		this.removeToManyTarget("invCreditExposures1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<InvCreditExposure> getInvCreditExposures1()
	{
		return (List<InvCreditExposure>) this.readProperty("invCreditExposures1");
	}

	public void addToLcAccountUsages(final LcAccountUsage obj)
	{
		this.addToManyTarget("lcAccountUsages", obj, true);
	}

	public void removeFromLcAccountUsages(final LcAccountUsage obj)
	{
		this.removeToManyTarget("lcAccountUsages", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<LcAccountUsage> getLcAccountUsages()
	{
		return (List<LcAccountUsage>) this.readProperty("lcAccountUsages");
	}

	public void addToLcBankfeeAutogens(final LcBankfeeAutogen obj)
	{
		this.addToManyTarget("lcBankfeeAutogens", obj, true);
	}

	public void removeFromLcBankfeeAutogens(final LcBankfeeAutogen obj)
	{
		this.removeToManyTarget("lcBankfeeAutogens", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<LcBankfeeAutogen> getLcBankfeeAutogens()
	{
		return (List<LcBankfeeAutogen>) this.readProperty("lcBankfeeAutogens");
	}

	public void addToLcBankfeeAutogens1(final LcBankfeeAutogen obj)
	{
		this.addToManyTarget("lcBankfeeAutogens1", obj, true);
	}

	public void removeFromLcBankfeeAutogens1(final LcBankfeeAutogen obj)
	{
		this.removeToManyTarget("lcBankfeeAutogens1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<LcBankfeeAutogen> getLcBankfeeAutogens1()
	{
		return (List<LcBankfeeAutogen>) this.readProperty("lcBankfeeAutogens1");
	}

	public void addToLcBankfeeRefdatas(final LcBankfeeRefdata obj)
	{
		this.addToManyTarget("lcBankfeeRefdatas", obj, true);
	}

	public void removeFromLcBankfeeRefdatas(final LcBankfeeRefdata obj)
	{
		this.removeToManyTarget("lcBankfeeRefdatas", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<LcBankfeeRefdata> getLcBankfeeRefdatas()
	{
		return (List<LcBankfeeRefdata>) this.readProperty("lcBankfeeRefdatas");
	}

	public void addToLcBankfeeRefdatas1(final LcBankfeeRefdata obj)
	{
		this.addToManyTarget("lcBankfeeRefdatas1", obj, true);
	}

	public void removeFromLcBankfeeRefdatas1(final LcBankfeeRefdata obj)
	{
		this.removeToManyTarget("lcBankfeeRefdatas1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<LcBankfeeRefdata> getLcBankfeeRefdatas1()
	{
		return (List<LcBankfeeRefdata>) this.readProperty("lcBankfeeRefdatas1");
	}

	public void addToLcDraws(final LcDraw obj)
	{
		this.addToManyTarget("lcDraws", obj, true);
	}

	public void removeFromLcDraws(final LcDraw obj)
	{
		this.removeToManyTarget("lcDraws", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<LcDraw> getLcDraws()
	{
		return (List<LcDraw>) this.readProperty("lcDraws");
	}

	public void addToLcs(final Lc obj)
	{
		this.addToManyTarget("lcs", obj, true);
	}

	public void removeFromLcs(final Lc obj)
	{
		this.removeToManyTarget("lcs", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<Lc> getLcs()
	{
		return (List<Lc>) this.readProperty("lcs");
	}

	public void addToLcs1(final Lc obj)
	{
		this.addToManyTarget("lcs1", obj, true);
	}

	public void removeFromLcs1(final Lc obj)
	{
		this.removeToManyTarget("lcs1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<Lc> getLcs1()
	{
		return (List<Lc>) this.readProperty("lcs1");
	}

	public void addToLcs2(final Lc obj)
	{
		this.addToManyTarget("lcs2", obj, true);
	}

	public void removeFromLcs2(final Lc obj)
	{
		this.removeToManyTarget("lcs2", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<Lc> getLcs2()
	{
		return (List<Lc>) this.readProperty("lcs2");
	}

	public void addToLcs3(final Lc obj)
	{
		this.addToManyTarget("lcs3", obj, true);
	}

	public void removeFromLcs3(final Lc obj)
	{
		this.removeToManyTarget("lcs3", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<Lc> getLcs3()
	{
		return (List<Lc>) this.readProperty("lcs3");
	}

	public void addToLcs4(final Lc obj)
	{
		this.addToManyTarget("lcs4", obj, true);
	}

	public void removeFromLcs4(final Lc obj)
	{
		this.removeToManyTarget("lcs4", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<Lc> getLcs4()
	{
		return (List<Lc>) this.readProperty("lcs4");
	}

	public void addToLcs5(final Lc obj)
	{
		this.addToManyTarget("lcs5", obj, true);
	}

	public void removeFromLcs5(final Lc obj)
	{
		this.removeToManyTarget("lcs5", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<Lc> getLcs5()
	{
		return (List<Lc>) this.readProperty("lcs5");
	}

	public void addToLicenseCoverss(final LicenseCovers obj)
	{
		this.addToManyTarget("licenseCoverss", obj, true);
	}

	public void removeFromLicenseCoverss(final LicenseCovers obj)
	{
		this.removeToManyTarget("licenseCoverss", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<LicenseCovers> getLicenseCoverss()
	{
		return (List<LicenseCovers>) this.readProperty("licenseCoverss");
	}

	public void addToLicenses(final License obj)
	{
		this.addToManyTarget("licenses", obj, true);
	}

	public void removeFromLicenses(final License obj)
	{
		this.removeToManyTarget("licenses", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<License> getLicenses()
	{
		return (List<License>) this.readProperty("licenses");
	}

	public void addToLmAcctdataMappings(final LmAcctdataMapping obj)
	{
		this.addToManyTarget("lmAcctdataMappings", obj, true);
	}

	public void removeFromLmAcctdataMappings(final LmAcctdataMapping obj)
	{
		this.removeToManyTarget("lmAcctdataMappings", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<LmAcctdataMapping> getLmAcctdataMappings()
	{
		return (List<LmAcctdataMapping>) this.readProperty("lmAcctdataMappings");
	}

	public void addToLmMarginHistories(final LmMarginHistory obj)
	{
		this.addToManyTarget("lmMarginHistories", obj, true);
	}

	public void removeFromLmMarginHistories(final LmMarginHistory obj)
	{
		this.removeToManyTarget("lmMarginHistories", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<LmMarginHistory> getLmMarginHistories()
	{
		return (List<LmMarginHistory>) this.readProperty("lmMarginHistories");
	}

	public void addToLocationDatas(final LocationData obj)
	{
		this.addToManyTarget("locationDatas", obj, true);
	}

	public void removeFromLocationDatas(final LocationData obj)
	{
		this.removeToManyTarget("locationDatas", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<LocationData> getLocationDatas()
	{
		return (List<LocationData>) this.readProperty("locationDatas");
	}

	public void addToLocationExtInfoes(final LocationExtInfo obj)
	{
		this.addToManyTarget("locationExtInfoes", obj, true);
	}

	public void removeFromLocationExtInfoes(final LocationExtInfo obj)
	{
		this.removeToManyTarget("locationExtInfoes", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<LocationExtInfo> getLocationExtInfoes()
	{
		return (List<LocationExtInfo>) this.readProperty("locationExtInfoes");
	}

	public void addToLocationTankInfoes(final LocationTankInfo obj)
	{
		this.addToManyTarget("locationTankInfoes", obj, true);
	}

	public void removeFromLocationTankInfoes(final LocationTankInfo obj)
	{
		this.removeToManyTarget("locationTankInfoes", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<LocationTankInfo> getLocationTankInfoes()
	{
		return (List<LocationTankInfo>) this.readProperty("locationTankInfoes");
	}

	public void addToLocationTankInfoes1(final LocationTankInfo obj)
	{
		this.addToManyTarget("locationTankInfoes1", obj, true);
	}

	public void removeFromLocationTankInfoes1(final LocationTankInfo obj)
	{
		this.removeToManyTarget("locationTankInfoes1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<LocationTankInfo> getLocationTankInfoes1()
	{
		return (List<LocationTankInfo>) this.readProperty("locationTankInfoes1");
	}

	public void addToMarketableSecurities(final MarketableSecurity obj)
	{
		this.addToManyTarget("marketableSecurities", obj, true);
	}

	public void removeFromMarketableSecurities(final MarketableSecurity obj)
	{
		this.removeToManyTarget("marketableSecurities", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<MarketableSecurity> getMarketableSecurities()
	{
		return (List<MarketableSecurity>) this.readProperty("marketableSecurities");
	}

	public void addToMots(final Mot obj)
	{
		this.addToManyTarget("mots", obj, true);
	}

	public void removeFromMots(final Mot obj)
	{
		this.removeToManyTarget("mots", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<Mot> getMots()
	{
		return (List<Mot>) this.readProperty("mots");
	}

	public void addToParentGuarSubsCovereds(final ParentGuarSubsCovered obj)
	{
		this.addToManyTarget("parentGuarSubsCovereds", obj, true);
	}

	public void removeFromParentGuarSubsCovereds(final ParentGuarSubsCovered obj)
	{
		this.removeToManyTarget("parentGuarSubsCovereds", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<ParentGuarSubsCovered> getParentGuarSubsCovereds()
	{
		return (List<ParentGuarSubsCovered>) this.readProperty("parentGuarSubsCovereds");
	}

	public void addToParentGuarantees(final ParentGuarantee obj)
	{
		this.addToManyTarget("parentGuarantees", obj, true);
	}

	public void removeFromParentGuarantees(final ParentGuarantee obj)
	{
		this.removeToManyTarget("parentGuarantees", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<ParentGuarantee> getParentGuarantees()
	{
		return (List<ParentGuarantee>) this.readProperty("parentGuarantees");
	}

	public void addToParentGuarantees1(final ParentGuarantee obj)
	{
		this.addToManyTarget("parentGuarantees1", obj, true);
	}

	public void removeFromParentGuarantees1(final ParentGuarantee obj)
	{
		this.removeToManyTarget("parentGuarantees1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<ParentGuarantee> getParentGuarantees1()
	{
		return (List<ParentGuarantee>) this.readProperty("parentGuarantees1");
	}

	public void addToPmTradeMatchCriterias(final PmTradeMatchCriteria obj)
	{
		this.addToManyTarget("pmTradeMatchCriterias", obj, true);
	}

	public void removeFromPmTradeMatchCriterias(final PmTradeMatchCriteria obj)
	{
		this.removeToManyTarget("pmTradeMatchCriterias", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<PmTradeMatchCriteria> getPmTradeMatchCriterias()
	{
		return (List<PmTradeMatchCriteria>) this.readProperty("pmTradeMatchCriterias");
	}

	public void addToPortfolioBookPls(final PortfolioBookPl obj)
	{
		this.addToManyTarget("portfolioBookPls", obj, true);
	}

	public void removeFromPortfolioBookPls(final PortfolioBookPl obj)
	{
		this.removeToManyTarget("portfolioBookPls", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<PortfolioBookPl> getPortfolioBookPls()
	{
		return (List<PortfolioBookPl>) this.readProperty("portfolioBookPls");
	}

	public void addToPortfolioEods(final PortfolioEod obj)
	{
		this.addToManyTarget("portfolioEods", obj, true);
	}

	public void removeFromPortfolioEods(final PortfolioEod obj)
	{
		this.removeToManyTarget("portfolioEods", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<PortfolioEod> getPortfolioEods()
	{
		return (List<PortfolioEod>) this.readProperty("portfolioEods");
	}

	public void addToPortfolioJvs(final PortfolioJv obj)
	{
		this.addToManyTarget("portfolioJvs", obj, true);
	}

	public void removeFromPortfolioJvs(final PortfolioJv obj)
	{
		this.removeToManyTarget("portfolioJvs", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<PortfolioJv> getPortfolioJvs()
	{
		return (List<PortfolioJv>) this.readProperty("portfolioJvs");
	}

	public void addToPortfolioJvs1(final PortfolioJv obj)
	{
		this.addToManyTarget("portfolioJvs1", obj, true);
	}

	public void removeFromPortfolioJvs1(final PortfolioJv obj)
	{
		this.removeToManyTarget("portfolioJvs1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<PortfolioJv> getPortfolioJvs1()
	{
		return (List<PortfolioJv>) this.readProperty("portfolioJvs1");
	}

	public void addToPortfolios(final Portfolio obj)
	{
		this.addToManyTarget("portfolios", obj, true);
	}

	public void removeFromPortfolios(final Portfolio obj)
	{
		this.removeToManyTarget("portfolios", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<Portfolio> getPortfolios()
	{
		return (List<Portfolio>) this.readProperty("portfolios");
	}

	public void addToPurchaseSaleGroups(final PurchaseSaleGroup obj)
	{
		this.addToManyTarget("purchaseSaleGroups", obj, true);
	}

	public void removeFromPurchaseSaleGroups(final PurchaseSaleGroup obj)
	{
		this.removeToManyTarget("purchaseSaleGroups", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<PurchaseSaleGroup> getPurchaseSaleGroups()
	{
		return (List<PurchaseSaleGroup>) this.readProperty("purchaseSaleGroups");
	}

	public void addToRiskCovers(final RiskCover obj)
	{
		this.addToManyTarget("riskCovers", obj, true);
	}

	public void removeFromRiskCovers(final RiskCover obj)
	{
		this.removeToManyTarget("riskCovers", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<RiskCover> getRiskCovers()
	{
		return (List<RiskCover>) this.readProperty("riskCovers");
	}

	public void setRiskTransferIndicator(final RiskTransferIndicator riskTransferIndicator)
	{
		this.setToOneTarget("riskTransferIndicator", riskTransferIndicator, true);
	}

	public RiskTransferIndicator getRiskTransferIndicator()
	{
		return (RiskTransferIndicator) this.readProperty("riskTransferIndicator");
	}

	public void addToScenarioItems(final ScenarioItem obj)
	{
		this.addToManyTarget("scenarioItems", obj, true);
	}

	public void removeFromScenarioItems(final ScenarioItem obj)
	{
		this.removeToManyTarget("scenarioItems", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<ScenarioItem> getScenarioItems()
	{
		return (List<ScenarioItem>) this.readProperty("scenarioItems");
	}

	public void addToScenarioItems1(final ScenarioItem obj)
	{
		this.addToManyTarget("scenarioItems1", obj, true);
	}

	public void removeFromScenarioItems1(final ScenarioItem obj)
	{
		this.removeToManyTarget("scenarioItems1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<ScenarioItem> getScenarioItems1()
	{
		return (List<ScenarioItem>) this.readProperty("scenarioItems1");
	}

	public void addToScenarios(final Scenario obj)
	{
		this.addToManyTarget("scenarios", obj, true);
	}

	public void removeFromScenarios(final Scenario obj)
	{
		this.removeToManyTarget("scenarios", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<Scenario> getScenarios()
	{
		return (List<Scenario>) this.readProperty("scenarios");
	}

	public void addToSendToSaps(final SendToSap obj)
	{
		this.addToManyTarget("sendToSaps", obj, true);
	}

	public void removeFromSendToSaps(final SendToSap obj)
	{
		this.removeToManyTarget("sendToSaps", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<SendToSap> getSendToSaps()
	{
		return (List<SendToSap>) this.readProperty("sendToSaps");
	}

	public void addToShipments(final Shipment obj)
	{
		this.addToManyTarget("shipments", obj, true);
	}

	public void removeFromShipments(final Shipment obj)
	{
		this.removeToManyTarget("shipments", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<Shipment> getShipments()
	{
		return (List<Shipment>) this.readProperty("shipments");
	}

	public void addToShipments1(final Shipment obj)
	{
		this.addToManyTarget("shipments1", obj, true);
	}

	public void removeFromShipments1(final Shipment obj)
	{
		this.removeToManyTarget("shipments1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<Shipment> getShipments1()
	{
		return (List<Shipment>) this.readProperty("shipments1");
	}

	public void addToSymphonyOutboundDatas(final SymphonyOutboundData obj)
	{
		this.addToManyTarget("symphonyOutboundDatas", obj, true);
	}

	public void removeFromSymphonyOutboundDatas(final SymphonyOutboundData obj)
	{
		this.removeToManyTarget("symphonyOutboundDatas", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<SymphonyOutboundData> getSymphonyOutboundDatas()
	{
		return (List<SymphonyOutboundData>) this.readProperty("symphonyOutboundDatas");
	}

	public void addToTaxLocations(final TaxLocation obj)
	{
		this.addToManyTarget("taxLocations", obj, true);
	}

	public void removeFromTaxLocations(final TaxLocation obj)
	{
		this.removeToManyTarget("taxLocations", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TaxLocation> getTaxLocations()
	{
		return (List<TaxLocation>) this.readProperty("taxLocations");
	}

	public void addToTempValueAdjusts(final TempValueAdjust obj)
	{
		this.addToManyTarget("tempValueAdjusts", obj, true);
	}

	public void removeFromTempValueAdjusts(final TempValueAdjust obj)
	{
		this.removeToManyTarget("tempValueAdjusts", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TempValueAdjust> getTempValueAdjusts()
	{
		return (List<TempValueAdjust>) this.readProperty("tempValueAdjusts");
	}

	public void addToTiMarkToMarkets(final TiMarkToMarket obj)
	{
		this.addToManyTarget("tiMarkToMarkets", obj, true);
	}

	public void removeFromTiMarkToMarkets(final TiMarkToMarket obj)
	{
		this.removeToManyTarget("tiMarkToMarkets", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TiMarkToMarket> getTiMarkToMarkets()
	{
		return (List<TiMarkToMarket>) this.readProperty("tiMarkToMarkets");
	}

	public void addToTradeItemBunkers(final TradeItemBunker obj)
	{
		this.addToManyTarget("tradeItemBunkers", obj, true);
	}

	public void removeFromTradeItemBunkers(final TradeItemBunker obj)
	{
		this.removeToManyTarget("tradeItemBunkers", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeItemBunker> getTradeItemBunkers()
	{
		return (List<TradeItemBunker>) this.readProperty("tradeItemBunkers");
	}

	public void addToTradeItemBunkers1(final TradeItemBunker obj)
	{
		this.addToManyTarget("tradeItemBunkers1", obj, true);
	}

	public void removeFromTradeItemBunkers1(final TradeItemBunker obj)
	{
		this.removeToManyTarget("tradeItemBunkers1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeItemBunker> getTradeItemBunkers1()
	{
		return (List<TradeItemBunker>) this.readProperty("tradeItemBunkers1");
	}

	public void addToTradeItemCleareds(final TradeItemCleared obj)
	{
		this.addToManyTarget("tradeItemCleareds", obj, true);
	}

	public void removeFromTradeItemCleareds(final TradeItemCleared obj)
	{
		this.removeToManyTarget("tradeItemCleareds", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeItemCleared> getTradeItemCleareds()
	{
		return (List<TradeItemCleared>) this.readProperty("tradeItemCleareds");
	}

	public void addToTradeItemExchOpts(final TradeItemExchOpt obj)
	{
		this.addToManyTarget("tradeItemExchOpts", obj, true);
	}

	public void removeFromTradeItemExchOpts(final TradeItemExchOpt obj)
	{
		this.removeToManyTarget("tradeItemExchOpts", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeItemExchOpt> getTradeItemExchOpts()
	{
		return (List<TradeItemExchOpt>) this.readProperty("tradeItemExchOpts");
	}

	public void addToTradeItemFuts(final TradeItemFut obj)
	{
		this.addToManyTarget("tradeItemFuts", obj, true);
	}

	public void removeFromTradeItemFuts(final TradeItemFut obj)
	{
		this.removeToManyTarget("tradeItemFuts", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeItemFut> getTradeItemFuts()
	{
		return (List<TradeItemFut>) this.readProperty("tradeItemFuts");
	}

	public void addToTradeItems(final TradeItem obj)
	{
		this.addToManyTarget("tradeItems", obj, true);
	}

	public void removeFromTradeItems(final TradeItem obj)
	{
		this.removeToManyTarget("tradeItems", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeItem> getTradeItems()
	{
		return (List<TradeItem>) this.readProperty("tradeItems");
	}

	public void addToTradeItems1(final TradeItem obj)
	{
		this.addToManyTarget("tradeItems1", obj, true);
	}

	public void removeFromTradeItems1(final TradeItem obj)
	{
		this.removeToManyTarget("tradeItems1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeItem> getTradeItems1()
	{
		return (List<TradeItem>) this.readProperty("tradeItems1");
	}

	public void addToTradeItems2(final TradeItem obj)
	{
		this.addToManyTarget("tradeItems2", obj, true);
	}

	public void removeFromTradeItems2(final TradeItem obj)
	{
		this.removeToManyTarget("tradeItems2", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeItem> getTradeItems2()
	{
		return (List<TradeItem>) this.readProperty("tradeItems2");
	}

	public void addToTradeItems3(final TradeItem obj)
	{
		this.addToManyTarget("tradeItems3", obj, true);
	}

	public void removeFromTradeItems3(final TradeItem obj)
	{
		this.removeToManyTarget("tradeItems3", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeItem> getTradeItems3()
	{
		return (List<TradeItem>) this.readProperty("tradeItems3");
	}

	public void addToTradeItems4(final TradeItem obj)
	{
		this.addToManyTarget("tradeItems4", obj, true);
	}

	public void removeFromTradeItems4(final TradeItem obj)
	{
		this.removeToManyTarget("tradeItems4", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeItem> getTradeItems4()
	{
		return (List<TradeItem>) this.readProperty("tradeItems4");
	}

	public void addToTradeOrderRailcars(final TradeOrderRailcar obj)
	{
		this.addToManyTarget("tradeOrderRailcars", obj, true);
	}

	public void removeFromTradeOrderRailcars(final TradeOrderRailcar obj)
	{
		this.removeToManyTarget("tradeOrderRailcars", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeOrderRailcar> getTradeOrderRailcars()
	{
		return (List<TradeOrderRailcar>) this.readProperty("tradeOrderRailcars");
	}

	public void addToTrades(final Trade obj)
	{
		this.addToManyTarget("trades", obj, true);
	}

	public void removeFromTrades(final Trade obj)
	{
		this.removeToManyTarget("trades", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<Trade> getTrades()
	{
		return (List<Trade>) this.readProperty("trades");
	}

	public void addToVoucherApprovals(final VoucherApproval obj)
	{
		this.addToManyTarget("voucherApprovals", obj, true);
	}

	public void removeFromVoucherApprovals(final VoucherApproval obj)
	{
		this.removeToManyTarget("voucherApprovals", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<VoucherApproval> getVoucherApprovals()
	{
		return (List<VoucherApproval>) this.readProperty("voucherApprovals");
	}

	public void addToVoucherPayApprovals(final VoucherPayApproval obj)
	{
		this.addToManyTarget("voucherPayApprovals", obj, true);
	}

	public void removeFromVoucherPayApprovals(final VoucherPayApproval obj)
	{
		this.removeToManyTarget("voucherPayApprovals", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<VoucherPayApproval> getVoucherPayApprovals()
	{
		return (List<VoucherPayApproval>) this.readProperty("voucherPayApprovals");
	}

	public void addToVouchers(final Voucher obj)
	{
		this.addToManyTarget("vouchers", obj, true);
	}

	public void removeFromVouchers(final Voucher obj)
	{
		this.removeToManyTarget("vouchers", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<Voucher> getVouchers()
	{
		return (List<Voucher>) this.readProperty("vouchers");
	}

	public void addToVouchers1(final Voucher obj)
	{
		this.addToManyTarget("vouchers1", obj, true);
	}

	public void removeFromVouchers1(final Voucher obj)
	{
		this.removeToManyTarget("vouchers1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<Voucher> getVouchers1()
	{
		return (List<Voucher>) this.readProperty("vouchers1");
	}

}
