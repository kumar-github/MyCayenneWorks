package com.tc.app.exchangemonitor.model.cayenne.persistent.auto;

import org.apache.cayenne.CayenneDataObject;
import org.apache.cayenne.exp.Property;

import com.tc.app.exchangemonitor.model.cayenne.persistent.Commodity;
import com.tc.app.exchangemonitor.model.cayenne.persistent.IctsUser;
import com.tc.app.exchangemonitor.model.cayenne.persistent.Location;
import com.tc.app.exchangemonitor.model.cayenne.persistent.Mot;
import com.tc.app.exchangemonitor.model.cayenne.persistent.Uom;

/**
 * Class _RecapItem was generated by Cayenne.
 * It is probably a good idea to avoid changing this class manually,
 * since it may be overwritten next time code is regenerated.
 * If you need to make any customizations, please use subclass.
 */
public abstract class _RecapItem extends CayenneDataObject
{

	private static final long serialVersionUID = 1L;

	public static final String RECAP_ITEM_NUM_PK_COLUMN = "recap_item_num";

	public static final Property<Double> ACTUAL_QTY = new Property<>("actualQty");
	public static final Property<Double> ALLOC_QTY = new Property<>("allocQty");
	public static final Property<Double> CONTR_QTY = new Property<>("contrQty");
	public static final Property<String> IS_INV_IND = new Property<>("isInvInd");
	public static final Property<Integer> PORT_NUM = new Property<>("portNum");
	public static final Property<Double> RECAP_QTY = new Property<>("recapQty");
	public static final Property<String> TRADING_PRD = new Property<>("tradingPrd");
	public static final Property<Integer> TRANS_ID = new Property<>("transId");
	public static final Property<Commodity> COMMODITY = new Property<>("commodity");
	public static final Property<Location> LOCATION = new Property<>("location");
	public static final Property<Mot> MOT = new Property<>("mot");
	public static final Property<IctsUser> TRADER = new Property<>("trader");
	public static final Property<Uom> UOM = new Property<>("uom");

	public void setActualQty(final Double actualQty)
	{
		this.writeProperty("actualQty", actualQty);
	}

	public Double getActualQty()
	{
		return (Double) this.readProperty("actualQty");
	}

	public void setAllocQty(final Double allocQty)
	{
		this.writeProperty("allocQty", allocQty);
	}

	public Double getAllocQty()
	{
		return (Double) this.readProperty("allocQty");
	}

	public void setContrQty(final Double contrQty)
	{
		this.writeProperty("contrQty", contrQty);
	}

	public Double getContrQty()
	{
		return (Double) this.readProperty("contrQty");
	}

	public void setIsInvInd(final String isInvInd)
	{
		this.writeProperty("isInvInd", isInvInd);
	}

	public String getIsInvInd()
	{
		return (String) this.readProperty("isInvInd");
	}

	public void setPortNum(final Integer portNum)
	{
		this.writeProperty("portNum", portNum);
	}

	public Integer getPortNum()
	{
		return (Integer) this.readProperty("portNum");
	}

	public void setRecapQty(final Double recapQty)
	{
		this.writeProperty("recapQty", recapQty);
	}

	public Double getRecapQty()
	{
		return (Double) this.readProperty("recapQty");
	}

	public void setTradingPrd(final String tradingPrd)
	{
		this.writeProperty("tradingPrd", tradingPrd);
	}

	public String getTradingPrd()
	{
		return (String) this.readProperty("tradingPrd");
	}

	public void setTransId(final Integer transId)
	{
		this.writeProperty("transId", transId);
	}

	public Integer getTransId()
	{
		return (Integer) this.readProperty("transId");
	}

	public void setCommodity(final Commodity commodity)
	{
		this.setToOneTarget("commodity", commodity, true);
	}

	public Commodity getCommodity()
	{
		return (Commodity) this.readProperty("commodity");
	}

	public void setLocation(final Location location)
	{
		this.setToOneTarget("location", location, true);
	}

	public Location getLocation()
	{
		return (Location) this.readProperty("location");
	}

	public void setMot(final Mot mot)
	{
		this.setToOneTarget("mot", mot, true);
	}

	public Mot getMot()
	{
		return (Mot) this.readProperty("mot");
	}

	public void setTrader(final IctsUser trader)
	{
		this.setToOneTarget("trader", trader, true);
	}

	public IctsUser getTrader()
	{
		return (IctsUser) this.readProperty("trader");
	}

	public void setUom(final Uom uom)
	{
		this.setToOneTarget("uom", uom, true);
	}

	public Uom getUom()
	{
		return (Uom) this.readProperty("uom");
	}

}
