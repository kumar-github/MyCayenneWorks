package com.tc.app.exchangemonitor.model.cayenne.persistent.auto;

import java.math.BigDecimal;
import java.util.List;

import org.apache.cayenne.CayenneDataObject;
import org.apache.cayenne.exp.Property;

import com.tc.app.exchangemonitor.model.cayenne.persistent.*;

/**
 * Class _Uom was generated by Cayenne.
 * It is probably a good idea to avoid changing this class manually,
 * since it may be overwritten next time code is regenerated.
 * If you need to make any customizations, please use subclass.
 */
public abstract class _Uom extends CayenneDataObject
{

	private static final long serialVersionUID = 1L;

	public static final String UOM_CODE_PK_COLUMN = "uom_code";

	public static final Property<String> ADJ1MULT_DIV_IND = new Property<>("adj1MultDivInd");
	public static final Property<String> ADJ2MULT_DIV_IND = new Property<>("adj2MultDivInd");
	public static final Property<BigDecimal> CONV_FACTOR = new Property<>("convFactor");
	public static final Property<Integer> TRANS_ID = new Property<>("transId");
	public static final Property<String> UOM_FULL_NAME = new Property<>("uomFullName");
	public static final Property<Short> UOM_NUM = new Property<>("uomNum");
	public static final Property<String> UOM_SHORT_NAME = new Property<>("uomShortName");
	public static final Property<String> UOM_STATUS = new Property<>("uomStatus");
	public static final Property<String> UOM_TYPE = new Property<>("uomType");
	public static final Property<List<AccountCreditLimit>> ACCOUNT_CREDIT_LIMITS = new Property<>("accountCreditLimits");
	public static final Property<List<Accumulation>> ACCUMULATIONS = new Property<>("accumulations");
	public static final Property<List<ActualLot>> ACTUAL_LOTS = new Property<>("actualLots");
	public static final Property<List<ActualLot>> ACTUAL_LOTS1 = new Property<>("actualLots1");
	public static final Property<List<AiEstActualInterface>> AI_EST_ACTUAL_INTERFACES = new Property<>("aiEstActualInterfaces");
	public static final Property<List<AiEstActual>> AI_EST_ACTUALS = new Property<>("aiEstActuals");
	public static final Property<List<AiEstActual>> AI_EST_ACTUALS1 = new Property<>("aiEstActuals1");
	public static final Property<List<AiEstActual>> AI_EST_ACTUALS2 = new Property<>("aiEstActuals2");
	public static final Property<List<AiEstActual>> AI_EST_ACTUALS3 = new Property<>("aiEstActuals3");
	public static final Property<List<AllocItemImpExp>> ALLOC_ITEM_IMP_EXPS = new Property<>("allocItemImpExps");
	public static final Property<List<AllocItemImpExp>> ALLOC_ITEM_IMP_EXPS1 = new Property<>("allocItemImpExps1");
	public static final Property<List<AllocationChain>> ALLOCATION_CHAINS = new Property<>("allocationChains");
	public static final Property<List<AllocationInsp>> ALLOCATION_INSPS = new Property<>("allocationInsps");
	public static final Property<List<AllocationItemInsp>> ALLOCATION_ITEM_INSPS = new Property<>("allocationItemInsps");
	public static final Property<List<AllocationItemTransport>> ALLOCATION_ITEM_TRANSPORTS = new Property<>("allocationItemTransports");
	public static final Property<List<AllocationItemTransport>> ALLOCATION_ITEM_TRANSPORTS1 = new Property<>("allocationItemTransports1");
	public static final Property<List<AllocationItemTransport>> ALLOCATION_ITEM_TRANSPORTS2 = new Property<>("allocationItemTransports2");
	public static final Property<List<AllocationItemTransport>> ALLOCATION_ITEM_TRANSPORTS3 = new Property<>("allocationItemTransports3");
	public static final Property<List<AllocationItemTransport>> ALLOCATION_ITEM_TRANSPORTS4 = new Property<>("allocationItemTransports4");
	public static final Property<List<AllocationItemTransport>> ALLOCATION_ITEM_TRANSPORTS5 = new Property<>("allocationItemTransports5");
	public static final Property<List<AllocationItem>> ALLOCATION_ITEMS = new Property<>("allocationItems");
	public static final Property<List<AllocationItem>> ALLOCATION_ITEMS1 = new Property<>("allocationItems1");
	public static final Property<List<AllocationItem>> ALLOCATION_ITEMS2 = new Property<>("allocationItems2");
	public static final Property<List<AllocationItem>> ALLOCATION_ITEMS3 = new Property<>("allocationItems3");
	public static final Property<List<AllocationItem>> ALLOCATION_ITEMS4 = new Property<>("allocationItems4");
	public static final Property<List<Allocation>> ALLOCATIONS = new Property<>("allocations");
	public static final Property<List<Allocation>> ALLOCATIONS1 = new Property<>("allocations1");
	public static final Property<List<BrokerCommissionDefault>> BROKER_COMMISSION_DEFAULTS = new Property<>("brokerCommissionDefaults");
	public static final Property<List<BrokerCostAutogen>> BROKER_COST_AUTOGENS = new Property<>("brokerCostAutogens");
	public static final Property<List<BrokerCostStepPrice>> BROKER_COST_STEP_PRICES = new Property<>("brokerCostStepPrices");
	public static final Property<List<BrokerCostStepPrice>> BROKER_COST_STEP_PRICES1 = new Property<>("brokerCostStepPrices1");
	public static final Property<List<BunkerPurPriceLookup>> BUNKER_PUR_PRICE_LOOKUPS = new Property<>("bunkerPurPriceLookups");
	public static final Property<List<CommktClrdSwapAttr>> COMMKT_CLRD_SWAP_ATTRS = new Property<>("commktClrdSwapAttrs");
	public static final Property<List<CommktClrdSwapAttr>> COMMKT_CLRD_SWAP_ATTRS1 = new Property<>("commktClrdSwapAttrs1");
	public static final Property<List<CommktFutureAttr>> COMMKT_FUTURE_ATTRS = new Property<>("commktFutureAttrs");
	public static final Property<List<CommktFutureAttr>> COMMKT_FUTURE_ATTRS1 = new Property<>("commktFutureAttrs1");
	public static final Property<List<CommktOptionAttr>> COMMKT_OPTION_ATTRS = new Property<>("commktOptionAttrs");
	public static final Property<List<CommktOptionAttr>> COMMKT_OPTION_ATTRS1 = new Property<>("commktOptionAttrs1");
	public static final Property<List<CommktPhysicalAttr>> COMMKT_PHYSICAL_ATTRS = new Property<>("commktPhysicalAttrs");
	public static final Property<List<CommktSrcAliasInfo>> COMMKT_SRC_ALIAS_INFOES = new Property<>("commktSrcAliasInfoes");
	public static final Property<List<Commodity>> COMMODITIES = new Property<>("commodities");
	public static final Property<List<Commodity>> COMMODITIES1 = new Property<>("commodities1");
	public static final Property<List<CommodityUom>> COMMODITY_UOMS = new Property<>("commodityUoms");
	public static final Property<List<CostPriceDetail>> COST_PRICE_DETAILS = new Property<>("costPriceDetails");
	public static final Property<List<CostReportSnapshot>> COST_REPORT_SNAPSHOTS = new Property<>("costReportSnapshots");
	public static final Property<List<CostReportSnapshot>> COST_REPORT_SNAPSHOTS1 = new Property<>("costReportSnapshots1");
	public static final Property<List<CostScheduledPrice>> COST_SCHEDULED_PRICES = new Property<>("costScheduledPrices");
	public static final Property<List<Cost>> COSTS = new Property<>("costs");
	public static final Property<List<Cost>> COSTS1 = new Property<>("costs1");
	public static final Property<List<CreditAlarmLog>> CREDIT_ALARM_LOGS = new Property<>("creditAlarmLogs");
	public static final Property<List<CreditLimit>> CREDIT_LIMITS = new Property<>("creditLimits");
	public static final Property<List<ExchFifoAllocItem>> EXCH_FIFO_ALLOC_ITEMS = new Property<>("exchFifoAllocItems");
	public static final Property<List<ExternalPosition>> EXTERNAL_POSITIONS = new Property<>("externalPositions");
	public static final Property<List<Facility>> FACILITIES = new Property<>("facilities");
	public static final Property<List<FacilityCommodity>> FACILITY_COMMODITIES = new Property<>("facilityCommodities");
	public static final Property<List<FlatRates>> FLAT_RATESES = new Property<>("flatRateses");
	public static final Property<List<ForecastValue>> FORECAST_VALUES = new Property<>("forecastValues");
	public static final Property<List<FormulaBody>> FORMULA_BODIES = new Property<>("formulaBodies");
	public static final Property<List<FormulaBodyTrigger>> FORMULA_BODY_TRIGGERS = new Property<>("formulaBodyTriggers");
	public static final Property<List<FormulaComponent>> FORMULA_COMPONENTS = new Property<>("formulaComponents");
	public static final Property<List<FormulaComponent>> FORMULA_COMPONENTS1 = new Property<>("formulaComponents1");
	public static final Property<List<Formula>> FORMULAS = new Property<>("formulas");
	public static final Property<List<FxExposureDist>> FX_EXPOSURE_DISTS = new Property<>("fxExposureDists");
	public static final Property<List<FxExposureDist>> FX_EXPOSURE_DISTS1 = new Property<>("fxExposureDists1");
	public static final Property<List<GradeCommodityMarket>> GRADE_COMMODITY_MARKETS = new Property<>("gradeCommodityMarkets");
	public static final Property<List<GravityTableName>> GRAVITY_TABLE_NAMES = new Property<>("gravityTableNames");
	public static final Property<List<InvActualFifo>> INV_ACTUAL_FIFOES = new Property<>("invActualFifoes");
	public static final Property<List<InvActual>> INV_ACTUALS = new Property<>("invActuals");
	public static final Property<List<InvActual>> INV_ACTUALS1 = new Property<>("invActuals1");
	public static final Property<List<InvActual>> INV_ACTUALS2 = new Property<>("invActuals2");
	public static final Property<List<Inventory>> INVENTORIES = new Property<>("inventories");
	public static final Property<List<Inventory>> INVENTORIES1 = new Property<>("inventories1");
	public static final Property<List<Inventory>> INVENTORIES2 = new Property<>("inventories2");
	public static final Property<List<InventoryBalance>> INVENTORY_BALANCES = new Property<>("inventoryBalances");
	public static final Property<List<InventoryBalance>> INVENTORY_BALANCES1 = new Property<>("inventoryBalances1");
	public static final Property<List<InventoryBuildDraw>> INVENTORY_BUILD_DRAWS = new Property<>("inventoryBuildDraws");
	public static final Property<List<InventoryBuildDraw>> INVENTORY_BUILD_DRAWS1 = new Property<>("inventoryBuildDraws1");
	public static final Property<List<LcAllocation>> LC_ALLOCATIONS = new Property<>("lcAllocations");
	public static final Property<List<LcAllocation>> LC_ALLOCATIONS1 = new Property<>("lcAllocations1");
	public static final Property<List<LimitType>> LIMIT_TYPES = new Property<>("limitTypes");
	public static final Property<List<LocationTankInfo>> LOCATION_TANK_INFOES = new Property<>("locationTankInfoes");
	public static final Property<List<MarketPricingCosts>> MARKET_PRICING_COSTSS = new Property<>("marketPricingCostss");
	public static final Property<List<MotLocationTariff>> MOT_LOCATION_TARIFFS = new Property<>("motLocationTariffs");
	public static final Property<List<MtmExposure>> MTM_EXPOSURES = new Property<>("mtmExposures");
	public static final Property<List<NewShipDataConsumptions>> NEW_SHIP_DATA_CONSUMPTIONSS = new Property<>("newShipDataConsumptionss");
	public static final Property<List<NoiseBandExposure>> NOISE_BAND_EXPOSURES = new Property<>("noiseBandExposures");
	public static final Property<List<OtcOption>> OTC_OPTIONS = new Property<>("otcOptions");
	public static final Property<List<PaperAllocationItem>> PAPER_ALLOCATION_ITEMS = new Property<>("paperAllocationItems");
	public static final Property<List<Parcel>> PARCELS = new Property<>("parcels");
	public static final Property<List<Parcel>> PARCELS1 = new Property<>("parcels1");
	public static final Property<List<ParentGuarantee>> PARENT_GUARANTEES = new Property<>("parentGuarantees");
	public static final Property<List<PlHistory>> PL_HISTORIES = new Property<>("plHistories");
	public static final Property<List<PlOffsetTransfer>> PL_OFFSET_TRANSFERS = new Property<>("plOffsetTransfers");
	public static final Property<List<PortfolioExtInfo>> PORTFOLIO_EXT_INFOES = new Property<>("portfolioExtInfoes");
	public static final Property<List<PortfolioExtInfo>> PORTFOLIO_EXT_INFOES1 = new Property<>("portfolioExtInfoes1");
	public static final Property<List<PortfolioExtInfo>> PORTFOLIO_EXT_INFOES2 = new Property<>("portfolioExtInfoes2");
	public static final Property<List<PortfolioPosLimit>> PORTFOLIO_POS_LIMITS = new Property<>("portfolioPosLimits");
	public static final Property<List<PositionHistory>> POSITION_HISTORIES = new Property<>("positionHistories");
	public static final Property<List<PositionHistory>> POSITION_HISTORIES1 = new Property<>("positionHistories1");
	public static final Property<List<PositionHistory>> POSITION_HISTORIES2 = new Property<>("positionHistories2");
	public static final Property<List<PositionHistory>> POSITION_HISTORIES3 = new Property<>("positionHistories3");
	public static final Property<List<PositionMarkToMarket>> POSITION_MARK_TO_MARKETS = new Property<>("positionMarkToMarkets");
	public static final Property<List<Position>> POSITIONS = new Property<>("positions");
	public static final Property<List<Position>> POSITIONS1 = new Property<>("positions1");
	public static final Property<List<Position>> POSITIONS2 = new Property<>("positions2");
	public static final Property<List<Position>> POSITIONS3 = new Property<>("positions3");
	public static final Property<List<QppMarkToMarket>> QPP_MARK_TO_MARKETS = new Property<>("qppMarkToMarkets");
	public static final Property<List<QuoteMarketdataSource>> QUOTE_MARKETDATA_SOURCES = new Property<>("quoteMarketdataSources");
	public static final Property<List<QuotePrice>> QUOTE_PRICES = new Property<>("quotePrices");
	public static final Property<List<QuotePricingPeriod>> QUOTE_PRICING_PERIODS = new Property<>("quotePricingPeriods");
	public static final Property<List<QuotePricingPeriod>> QUOTE_PRICING_PERIODS1 = new Property<>("quotePricingPeriods1");
	public static final Property<List<RailcarPtpRate>> RAILCAR_PTP_RATES = new Property<>("railcarPtpRates");
	public static final Property<List<RecapItem>> RECAP_ITEMS = new Property<>("recapItems");
	public static final Property<List<RinEquivalence>> RIN_EQUIVALENCES = new Property<>("rinEquivalences");
	public static final Property<List<RinEquivalence>> RIN_EQUIVALENCES1 = new Property<>("rinEquivalences1");
	public static final Property<List<RinObligation>> RIN_OBLIGATIONS = new Property<>("rinObligations");
	public static final Property<List<RinObligation>> RIN_OBLIGATIONS1 = new Property<>("rinObligations1");
	public static final Property<List<RiskmgrWinPivotDef>> RISKMGR_WIN_PIVOT_DEFS = new Property<>("riskmgrWinPivotDefs");
	public static final Property<List<ScenarioItem>> SCENARIO_ITEMS = new Property<>("scenarioItems");
	public static final Property<List<ScenarioItem>> SCENARIO_ITEMS1 = new Property<>("scenarioItems1");
	public static final Property<List<Scenario>> SCENARIOS = new Property<>("scenarios");
	public static final Property<List<ShipDataConsumptions>> SHIP_DATA_CONSUMPTIONSS = new Property<>("shipDataConsumptionss");
	public static final Property<List<Shipment>> SHIPMENTS = new Property<>("shipments");
	public static final Property<List<Shipment>> SHIPMENTS1 = new Property<>("shipments1");
	public static final Property<List<Shipment>> SHIPMENTS2 = new Property<>("shipments2");
	public static final Property<List<SimpleFormula>> SIMPLE_FORMULAS = new Property<>("simpleFormulas");
	public static final Property<Specification> SPECIFICATION = new Property<>("specification");
	public static final Property<Specification> SPECIFICATION1 = new Property<>("specification1");
	public static final Property<List<Specification>> SPECIFICATIONS = new Property<>("specifications");
	public static final Property<List<Tax>> TAXES = new Property<>("taxes");
	public static final Property<List<Tax>> TAXES1 = new Property<>("taxes1");
	public static final Property<List<TiMarkToMarket>> TI_MARK_TO_MARKETS = new Property<>("tiMarkToMarkets");
	public static final Property<List<TidMarkToMarket>> TID_MARK_TO_MARKETS = new Property<>("tidMarkToMarkets");
	public static final Property<List<TidMarkToMarket>> TID_MARK_TO_MARKETS1 = new Property<>("tidMarkToMarkets1");
	public static final Property<List<TidMarkToMarket>> TID_MARK_TO_MARKETS2 = new Property<>("tidMarkToMarkets2");
	public static final Property<List<TidMtmVolatility>> TID_MTM_VOLATILITIES = new Property<>("tidMtmVolatilities");
	public static final Property<List<TradeItemBunker>> TRADE_ITEM_BUNKERS = new Property<>("tradeItemBunkers");
	public static final Property<List<TradeItemCashPhy>> TRADE_ITEM_CASH_PHIES = new Property<>("tradeItemCashPhies");
	public static final Property<List<TradeItemCashPhy>> TRADE_ITEM_CASH_PHIES1 = new Property<>("tradeItemCashPhies1");
	public static final Property<List<TradeItemCashPhy>> TRADE_ITEM_CASH_PHIES2 = new Property<>("tradeItemCashPhies2");
	public static final Property<List<TradeItemComposite>> TRADE_ITEM_COMPOSITES = new Property<>("tradeItemComposites");
	public static final Property<List<TradeItemComposite>> TRADE_ITEM_COMPOSITES1 = new Property<>("tradeItemComposites1");
	public static final Property<List<TradeItemComposite>> TRADE_ITEM_COMPOSITES2 = new Property<>("tradeItemComposites2");
	public static final Property<List<TradeItemComposite>> TRADE_ITEM_COMPOSITES3 = new Property<>("tradeItemComposites3");
	public static final Property<List<TradeItemDist>> TRADE_ITEM_DISTS = new Property<>("tradeItemDists");
	public static final Property<List<TradeItemDist>> TRADE_ITEM_DISTS1 = new Property<>("tradeItemDists1");
	public static final Property<List<TradeItemDist>> TRADE_ITEM_DISTS2 = new Property<>("tradeItemDists2");
	public static final Property<List<TradeItemDist>> TRADE_ITEM_DISTS3 = new Property<>("tradeItemDists3");
	public static final Property<List<TradeItemDryPhy>> TRADE_ITEM_DRY_PHIES = new Property<>("tradeItemDryPhies");
	public static final Property<List<TradeItemDryPhy>> TRADE_ITEM_DRY_PHIES1 = new Property<>("tradeItemDryPhies1");
	public static final Property<List<TradeItemDryPhy>> TRADE_ITEM_DRY_PHIES2 = new Property<>("tradeItemDryPhies2");
	public static final Property<List<TradeItemDryPhy>> TRADE_ITEM_DRY_PHIES3 = new Property<>("tradeItemDryPhies3");
	public static final Property<List<TradeItemExchOpt>> TRADE_ITEM_EXCH_OPTS = new Property<>("tradeItemExchOpts");
	public static final Property<List<TradeItemExchOpt>> TRADE_ITEM_EXCH_OPTS1 = new Property<>("tradeItemExchOpts1");
	public static final Property<List<TradeItemExchOpt>> TRADE_ITEM_EXCH_OPTS2 = new Property<>("tradeItemExchOpts2");
	public static final Property<List<TradeItemExchOpt>> TRADE_ITEM_EXCH_OPTS3 = new Property<>("tradeItemExchOpts3");
	public static final Property<List<TradeItemFill>> TRADE_ITEM_FILLS = new Property<>("tradeItemFills");
	public static final Property<List<TradeItemFill>> TRADE_ITEM_FILLS1 = new Property<>("tradeItemFills1");
	public static final Property<List<TradeItemFut>> TRADE_ITEM_FUTS = new Property<>("tradeItemFuts");
	public static final Property<List<TradeItemFut>> TRADE_ITEM_FUTS1 = new Property<>("tradeItemFuts1");
	public static final Property<List<TradeItemOtcOpt>> TRADE_ITEM_OTC_OPTS = new Property<>("tradeItemOtcOpts");
	public static final Property<List<TradeItemOtcOpt>> TRADE_ITEM_OTC_OPTS1 = new Property<>("tradeItemOtcOpts1");
	public static final Property<List<TradeItemRin>> TRADE_ITEM_RINS = new Property<>("tradeItemRins");
	public static final Property<List<TradeItemStorage>> TRADE_ITEM_STORAGES = new Property<>("tradeItemStorages");
	public static final Property<List<TradeItemStorage>> TRADE_ITEM_STORAGES1 = new Property<>("tradeItemStorages1");
	public static final Property<List<TradeItemStorage>> TRADE_ITEM_STORAGES2 = new Property<>("tradeItemStorages2");
	public static final Property<List<TradeItemStorage>> TRADE_ITEM_STORAGES3 = new Property<>("tradeItemStorages3");
	public static final Property<List<TradeItemTransport>> TRADE_ITEM_TRANSPORTS = new Property<>("tradeItemTransports");
	public static final Property<List<TradeItemTransport>> TRADE_ITEM_TRANSPORTS1 = new Property<>("tradeItemTransports1");
	public static final Property<List<TradeItemTransport>> TRADE_ITEM_TRANSPORTS2 = new Property<>("tradeItemTransports2");
	public static final Property<List<TradeItemTransport>> TRADE_ITEM_TRANSPORTS3 = new Property<>("tradeItemTransports3");
	public static final Property<List<TradeItemTransport>> TRADE_ITEM_TRANSPORTS4 = new Property<>("tradeItemTransports4");
	public static final Property<List<TradeItemTransport>> TRADE_ITEM_TRANSPORTS5 = new Property<>("tradeItemTransports5");
	public static final Property<List<TradeItemTransport>> TRADE_ITEM_TRANSPORTS6 = new Property<>("tradeItemTransports6");
	public static final Property<List<TradeItemTransport>> TRADE_ITEM_TRANSPORTS7 = new Property<>("tradeItemTransports7");
	public static final Property<List<TradeItemWetPhy>> TRADE_ITEM_WET_PHIES = new Property<>("tradeItemWetPhies");
	public static final Property<List<TradeItemWetPhy>> TRADE_ITEM_WET_PHIES1 = new Property<>("tradeItemWetPhies1");
	public static final Property<List<TradeItemWetPhy>> TRADE_ITEM_WET_PHIES2 = new Property<>("tradeItemWetPhies2");
	public static final Property<List<TradeItemWetPhy>> TRADE_ITEM_WET_PHIES3 = new Property<>("tradeItemWetPhies3");
	public static final Property<List<TradeItem>> TRADE_ITEMS = new Property<>("tradeItems");
	public static final Property<List<TradeItem>> TRADE_ITEMS1 = new Property<>("tradeItems1");
	public static final Property<List<TradeItem>> TRADE_ITEMS2 = new Property<>("tradeItems2");
	public static final Property<List<TradeItem>> TRADE_ITEMS3 = new Property<>("tradeItems3");
	public static final Property<List<TradeItem>> TRADE_ITEMS4 = new Property<>("tradeItems4");
	public static final Property<List<TradeItem>> TRADE_ITEMS5 = new Property<>("tradeItems5");
	public static final Property<List<TradeOrderBal>> TRADE_ORDER_BALS = new Property<>("tradeOrderBals");
	public static final Property<List<TradeOrderBal>> TRADE_ORDER_BALS1 = new Property<>("tradeOrderBals1");
	public static final Property<List<TradeOrderBunker>> TRADE_ORDER_BUNKERS = new Property<>("tradeOrderBunkers");
	public static final Property<List<TransportCostSchedule>> TRANSPORT_COST_SCHEDULES = new Property<>("transportCostSchedules");
	public static final Property<List<TransportCostSchedule>> TRANSPORT_COST_SCHEDULES1 = new Property<>("transportCostSchedules1");
	public static final Property<Uom> UOM = new Property<>("uom");
	public static final Property<List<UomConversion>> UOM_CONVERSIONS = new Property<>("uomConversions");
	public static final Property<List<UomConversion>> UOM_CONVERSIONS1 = new Property<>("uomConversions1");
	public static final Property<List<Uom>> UOMS = new Property<>("uoms");
	public static final Property<List<VesselDistMtm>> VESSEL_DIST_MTMS = new Property<>("vesselDistMtms");
	public static final Property<List<VesselDist>> VESSEL_DISTS = new Property<>("vesselDists");
	public static final Property<List<VesselDist>> VESSEL_DISTS1 = new Property<>("vesselDists1");
	public static final Property<List<VoucherCost>> VOUCHER_COSTS = new Property<>("voucherCosts");
	public static final Property<List<WbContractVessels>> WB_CONTRACT_VESSELSS = new Property<>("wbContractVesselss");
	public static final Property<List<WbContractVessels>> WB_CONTRACT_VESSELSS1 = new Property<>("wbContractVesselss1");
	public static final Property<List<WbContractVessels>> WB_CONTRACT_VESSELSS2 = new Property<>("wbContractVesselss2");
	public static final Property<List<WbContractVessels>> WB_CONTRACT_VESSELSS3 = new Property<>("wbContractVesselss3");
	public static final Property<List<WbContractVessels>> WB_CONTRACT_VESSELSS4 = new Property<>("wbContractVesselss4");
	public static final Property<List<WbContractVessels>> WB_CONTRACT_VESSELSS5 = new Property<>("wbContractVesselss5");

	public void setAdj1MultDivInd(final String adj1MultDivInd)
	{
		this.writeProperty("adj1MultDivInd", adj1MultDivInd);
	}

	public String getAdj1MultDivInd()
	{
		return (String) this.readProperty("adj1MultDivInd");
	}

	public void setAdj2MultDivInd(final String adj2MultDivInd)
	{
		this.writeProperty("adj2MultDivInd", adj2MultDivInd);
	}

	public String getAdj2MultDivInd()
	{
		return (String) this.readProperty("adj2MultDivInd");
	}

	public void setConvFactor(final BigDecimal convFactor)
	{
		this.writeProperty("convFactor", convFactor);
	}

	public BigDecimal getConvFactor()
	{
		return (BigDecimal) this.readProperty("convFactor");
	}

	public void setTransId(final Integer transId)
	{
		this.writeProperty("transId", transId);
	}

	public Integer getTransId()
	{
		return (Integer) this.readProperty("transId");
	}

	public void setUomFullName(final String uomFullName)
	{
		this.writeProperty("uomFullName", uomFullName);
	}

	public String getUomFullName()
	{
		return (String) this.readProperty("uomFullName");
	}

	public void setUomNum(final Short uomNum)
	{
		this.writeProperty("uomNum", uomNum);
	}

	public Short getUomNum()
	{
		return (Short) this.readProperty("uomNum");
	}

	public void setUomShortName(final String uomShortName)
	{
		this.writeProperty("uomShortName", uomShortName);
	}

	public String getUomShortName()
	{
		return (String) this.readProperty("uomShortName");
	}

	public void setUomStatus(final String uomStatus)
	{
		this.writeProperty("uomStatus", uomStatus);
	}

	public String getUomStatus()
	{
		return (String) this.readProperty("uomStatus");
	}

	public void setUomType(final String uomType)
	{
		this.writeProperty("uomType", uomType);
	}

	public String getUomType()
	{
		return (String) this.readProperty("uomType");
	}

	public void addToAccountCreditLimits(final AccountCreditLimit obj)
	{
		this.addToManyTarget("accountCreditLimits", obj, true);
	}

	public void removeFromAccountCreditLimits(final AccountCreditLimit obj)
	{
		this.removeToManyTarget("accountCreditLimits", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<AccountCreditLimit> getAccountCreditLimits()
	{
		return (List<AccountCreditLimit>) this.readProperty("accountCreditLimits");
	}

	public void addToAccumulations(final Accumulation obj)
	{
		this.addToManyTarget("accumulations", obj, true);
	}

	public void removeFromAccumulations(final Accumulation obj)
	{
		this.removeToManyTarget("accumulations", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<Accumulation> getAccumulations()
	{
		return (List<Accumulation>) this.readProperty("accumulations");
	}

	public void addToActualLots(final ActualLot obj)
	{
		this.addToManyTarget("actualLots", obj, true);
	}

	public void removeFromActualLots(final ActualLot obj)
	{
		this.removeToManyTarget("actualLots", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<ActualLot> getActualLots()
	{
		return (List<ActualLot>) this.readProperty("actualLots");
	}

	public void addToActualLots1(final ActualLot obj)
	{
		this.addToManyTarget("actualLots1", obj, true);
	}

	public void removeFromActualLots1(final ActualLot obj)
	{
		this.removeToManyTarget("actualLots1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<ActualLot> getActualLots1()
	{
		return (List<ActualLot>) this.readProperty("actualLots1");
	}

	public void addToAiEstActualInterfaces(final AiEstActualInterface obj)
	{
		this.addToManyTarget("aiEstActualInterfaces", obj, true);
	}

	public void removeFromAiEstActualInterfaces(final AiEstActualInterface obj)
	{
		this.removeToManyTarget("aiEstActualInterfaces", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<AiEstActualInterface> getAiEstActualInterfaces()
	{
		return (List<AiEstActualInterface>) this.readProperty("aiEstActualInterfaces");
	}

	public void addToAiEstActuals(final AiEstActual obj)
	{
		this.addToManyTarget("aiEstActuals", obj, true);
	}

	public void removeFromAiEstActuals(final AiEstActual obj)
	{
		this.removeToManyTarget("aiEstActuals", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<AiEstActual> getAiEstActuals()
	{
		return (List<AiEstActual>) this.readProperty("aiEstActuals");
	}

	public void addToAiEstActuals1(final AiEstActual obj)
	{
		this.addToManyTarget("aiEstActuals1", obj, true);
	}

	public void removeFromAiEstActuals1(final AiEstActual obj)
	{
		this.removeToManyTarget("aiEstActuals1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<AiEstActual> getAiEstActuals1()
	{
		return (List<AiEstActual>) this.readProperty("aiEstActuals1");
	}

	public void addToAiEstActuals2(final AiEstActual obj)
	{
		this.addToManyTarget("aiEstActuals2", obj, true);
	}

	public void removeFromAiEstActuals2(final AiEstActual obj)
	{
		this.removeToManyTarget("aiEstActuals2", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<AiEstActual> getAiEstActuals2()
	{
		return (List<AiEstActual>) this.readProperty("aiEstActuals2");
	}

	public void addToAiEstActuals3(final AiEstActual obj)
	{
		this.addToManyTarget("aiEstActuals3", obj, true);
	}

	public void removeFromAiEstActuals3(final AiEstActual obj)
	{
		this.removeToManyTarget("aiEstActuals3", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<AiEstActual> getAiEstActuals3()
	{
		return (List<AiEstActual>) this.readProperty("aiEstActuals3");
	}

	public void addToAllocItemImpExps(final AllocItemImpExp obj)
	{
		this.addToManyTarget("allocItemImpExps", obj, true);
	}

	public void removeFromAllocItemImpExps(final AllocItemImpExp obj)
	{
		this.removeToManyTarget("allocItemImpExps", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<AllocItemImpExp> getAllocItemImpExps()
	{
		return (List<AllocItemImpExp>) this.readProperty("allocItemImpExps");
	}

	public void addToAllocItemImpExps1(final AllocItemImpExp obj)
	{
		this.addToManyTarget("allocItemImpExps1", obj, true);
	}

	public void removeFromAllocItemImpExps1(final AllocItemImpExp obj)
	{
		this.removeToManyTarget("allocItemImpExps1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<AllocItemImpExp> getAllocItemImpExps1()
	{
		return (List<AllocItemImpExp>) this.readProperty("allocItemImpExps1");
	}

	public void addToAllocationChains(final AllocationChain obj)
	{
		this.addToManyTarget("allocationChains", obj, true);
	}

	public void removeFromAllocationChains(final AllocationChain obj)
	{
		this.removeToManyTarget("allocationChains", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<AllocationChain> getAllocationChains()
	{
		return (List<AllocationChain>) this.readProperty("allocationChains");
	}

	public void addToAllocationInsps(final AllocationInsp obj)
	{
		this.addToManyTarget("allocationInsps", obj, true);
	}

	public void removeFromAllocationInsps(final AllocationInsp obj)
	{
		this.removeToManyTarget("allocationInsps", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<AllocationInsp> getAllocationInsps()
	{
		return (List<AllocationInsp>) this.readProperty("allocationInsps");
	}

	public void addToAllocationItemInsps(final AllocationItemInsp obj)
	{
		this.addToManyTarget("allocationItemInsps", obj, true);
	}

	public void removeFromAllocationItemInsps(final AllocationItemInsp obj)
	{
		this.removeToManyTarget("allocationItemInsps", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<AllocationItemInsp> getAllocationItemInsps()
	{
		return (List<AllocationItemInsp>) this.readProperty("allocationItemInsps");
	}

	public void addToAllocationItemTransports(final AllocationItemTransport obj)
	{
		this.addToManyTarget("allocationItemTransports", obj, true);
	}

	public void removeFromAllocationItemTransports(final AllocationItemTransport obj)
	{
		this.removeToManyTarget("allocationItemTransports", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<AllocationItemTransport> getAllocationItemTransports()
	{
		return (List<AllocationItemTransport>) this.readProperty("allocationItemTransports");
	}

	public void addToAllocationItemTransports1(final AllocationItemTransport obj)
	{
		this.addToManyTarget("allocationItemTransports1", obj, true);
	}

	public void removeFromAllocationItemTransports1(final AllocationItemTransport obj)
	{
		this.removeToManyTarget("allocationItemTransports1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<AllocationItemTransport> getAllocationItemTransports1()
	{
		return (List<AllocationItemTransport>) this.readProperty("allocationItemTransports1");
	}

	public void addToAllocationItemTransports2(final AllocationItemTransport obj)
	{
		this.addToManyTarget("allocationItemTransports2", obj, true);
	}

	public void removeFromAllocationItemTransports2(final AllocationItemTransport obj)
	{
		this.removeToManyTarget("allocationItemTransports2", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<AllocationItemTransport> getAllocationItemTransports2()
	{
		return (List<AllocationItemTransport>) this.readProperty("allocationItemTransports2");
	}

	public void addToAllocationItemTransports3(final AllocationItemTransport obj)
	{
		this.addToManyTarget("allocationItemTransports3", obj, true);
	}

	public void removeFromAllocationItemTransports3(final AllocationItemTransport obj)
	{
		this.removeToManyTarget("allocationItemTransports3", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<AllocationItemTransport> getAllocationItemTransports3()
	{
		return (List<AllocationItemTransport>) this.readProperty("allocationItemTransports3");
	}

	public void addToAllocationItemTransports4(final AllocationItemTransport obj)
	{
		this.addToManyTarget("allocationItemTransports4", obj, true);
	}

	public void removeFromAllocationItemTransports4(final AllocationItemTransport obj)
	{
		this.removeToManyTarget("allocationItemTransports4", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<AllocationItemTransport> getAllocationItemTransports4()
	{
		return (List<AllocationItemTransport>) this.readProperty("allocationItemTransports4");
	}

	public void addToAllocationItemTransports5(final AllocationItemTransport obj)
	{
		this.addToManyTarget("allocationItemTransports5", obj, true);
	}

	public void removeFromAllocationItemTransports5(final AllocationItemTransport obj)
	{
		this.removeToManyTarget("allocationItemTransports5", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<AllocationItemTransport> getAllocationItemTransports5()
	{
		return (List<AllocationItemTransport>) this.readProperty("allocationItemTransports5");
	}

	public void addToAllocationItems(final AllocationItem obj)
	{
		this.addToManyTarget("allocationItems", obj, true);
	}

	public void removeFromAllocationItems(final AllocationItem obj)
	{
		this.removeToManyTarget("allocationItems", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<AllocationItem> getAllocationItems()
	{
		return (List<AllocationItem>) this.readProperty("allocationItems");
	}

	public void addToAllocationItems1(final AllocationItem obj)
	{
		this.addToManyTarget("allocationItems1", obj, true);
	}

	public void removeFromAllocationItems1(final AllocationItem obj)
	{
		this.removeToManyTarget("allocationItems1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<AllocationItem> getAllocationItems1()
	{
		return (List<AllocationItem>) this.readProperty("allocationItems1");
	}

	public void addToAllocationItems2(final AllocationItem obj)
	{
		this.addToManyTarget("allocationItems2", obj, true);
	}

	public void removeFromAllocationItems2(final AllocationItem obj)
	{
		this.removeToManyTarget("allocationItems2", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<AllocationItem> getAllocationItems2()
	{
		return (List<AllocationItem>) this.readProperty("allocationItems2");
	}

	public void addToAllocationItems3(final AllocationItem obj)
	{
		this.addToManyTarget("allocationItems3", obj, true);
	}

	public void removeFromAllocationItems3(final AllocationItem obj)
	{
		this.removeToManyTarget("allocationItems3", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<AllocationItem> getAllocationItems3()
	{
		return (List<AllocationItem>) this.readProperty("allocationItems3");
	}

	public void addToAllocationItems4(final AllocationItem obj)
	{
		this.addToManyTarget("allocationItems4", obj, true);
	}

	public void removeFromAllocationItems4(final AllocationItem obj)
	{
		this.removeToManyTarget("allocationItems4", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<AllocationItem> getAllocationItems4()
	{
		return (List<AllocationItem>) this.readProperty("allocationItems4");
	}

	public void addToAllocations(final Allocation obj)
	{
		this.addToManyTarget("allocations", obj, true);
	}

	public void removeFromAllocations(final Allocation obj)
	{
		this.removeToManyTarget("allocations", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<Allocation> getAllocations()
	{
		return (List<Allocation>) this.readProperty("allocations");
	}

	public void addToAllocations1(final Allocation obj)
	{
		this.addToManyTarget("allocations1", obj, true);
	}

	public void removeFromAllocations1(final Allocation obj)
	{
		this.removeToManyTarget("allocations1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<Allocation> getAllocations1()
	{
		return (List<Allocation>) this.readProperty("allocations1");
	}

	public void addToBrokerCommissionDefaults(final BrokerCommissionDefault obj)
	{
		this.addToManyTarget("brokerCommissionDefaults", obj, true);
	}

	public void removeFromBrokerCommissionDefaults(final BrokerCommissionDefault obj)
	{
		this.removeToManyTarget("brokerCommissionDefaults", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<BrokerCommissionDefault> getBrokerCommissionDefaults()
	{
		return (List<BrokerCommissionDefault>) this.readProperty("brokerCommissionDefaults");
	}

	public void addToBrokerCostAutogens(final BrokerCostAutogen obj)
	{
		this.addToManyTarget("brokerCostAutogens", obj, true);
	}

	public void removeFromBrokerCostAutogens(final BrokerCostAutogen obj)
	{
		this.removeToManyTarget("brokerCostAutogens", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<BrokerCostAutogen> getBrokerCostAutogens()
	{
		return (List<BrokerCostAutogen>) this.readProperty("brokerCostAutogens");
	}

	public void addToBrokerCostStepPrices(final BrokerCostStepPrice obj)
	{
		this.addToManyTarget("brokerCostStepPrices", obj, true);
	}

	public void removeFromBrokerCostStepPrices(final BrokerCostStepPrice obj)
	{
		this.removeToManyTarget("brokerCostStepPrices", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<BrokerCostStepPrice> getBrokerCostStepPrices()
	{
		return (List<BrokerCostStepPrice>) this.readProperty("brokerCostStepPrices");
	}

	public void addToBrokerCostStepPrices1(final BrokerCostStepPrice obj)
	{
		this.addToManyTarget("brokerCostStepPrices1", obj, true);
	}

	public void removeFromBrokerCostStepPrices1(final BrokerCostStepPrice obj)
	{
		this.removeToManyTarget("brokerCostStepPrices1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<BrokerCostStepPrice> getBrokerCostStepPrices1()
	{
		return (List<BrokerCostStepPrice>) this.readProperty("brokerCostStepPrices1");
	}

	public void addToBunkerPurPriceLookups(final BunkerPurPriceLookup obj)
	{
		this.addToManyTarget("bunkerPurPriceLookups", obj, true);
	}

	public void removeFromBunkerPurPriceLookups(final BunkerPurPriceLookup obj)
	{
		this.removeToManyTarget("bunkerPurPriceLookups", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<BunkerPurPriceLookup> getBunkerPurPriceLookups()
	{
		return (List<BunkerPurPriceLookup>) this.readProperty("bunkerPurPriceLookups");
	}

	public void addToCommktClrdSwapAttrs(final CommktClrdSwapAttr obj)
	{
		this.addToManyTarget("commktClrdSwapAttrs", obj, true);
	}

	public void removeFromCommktClrdSwapAttrs(final CommktClrdSwapAttr obj)
	{
		this.removeToManyTarget("commktClrdSwapAttrs", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<CommktClrdSwapAttr> getCommktClrdSwapAttrs()
	{
		return (List<CommktClrdSwapAttr>) this.readProperty("commktClrdSwapAttrs");
	}

	public void addToCommktClrdSwapAttrs1(final CommktClrdSwapAttr obj)
	{
		this.addToManyTarget("commktClrdSwapAttrs1", obj, true);
	}

	public void removeFromCommktClrdSwapAttrs1(final CommktClrdSwapAttr obj)
	{
		this.removeToManyTarget("commktClrdSwapAttrs1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<CommktClrdSwapAttr> getCommktClrdSwapAttrs1()
	{
		return (List<CommktClrdSwapAttr>) this.readProperty("commktClrdSwapAttrs1");
	}

	public void addToCommktFutureAttrs(final CommktFutureAttr obj)
	{
		this.addToManyTarget("commktFutureAttrs", obj, true);
	}

	public void removeFromCommktFutureAttrs(final CommktFutureAttr obj)
	{
		this.removeToManyTarget("commktFutureAttrs", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<CommktFutureAttr> getCommktFutureAttrs()
	{
		return (List<CommktFutureAttr>) this.readProperty("commktFutureAttrs");
	}

	public void addToCommktFutureAttrs1(final CommktFutureAttr obj)
	{
		this.addToManyTarget("commktFutureAttrs1", obj, true);
	}

	public void removeFromCommktFutureAttrs1(final CommktFutureAttr obj)
	{
		this.removeToManyTarget("commktFutureAttrs1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<CommktFutureAttr> getCommktFutureAttrs1()
	{
		return (List<CommktFutureAttr>) this.readProperty("commktFutureAttrs1");
	}

	public void addToCommktOptionAttrs(final CommktOptionAttr obj)
	{
		this.addToManyTarget("commktOptionAttrs", obj, true);
	}

	public void removeFromCommktOptionAttrs(final CommktOptionAttr obj)
	{
		this.removeToManyTarget("commktOptionAttrs", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<CommktOptionAttr> getCommktOptionAttrs()
	{
		return (List<CommktOptionAttr>) this.readProperty("commktOptionAttrs");
	}

	public void addToCommktOptionAttrs1(final CommktOptionAttr obj)
	{
		this.addToManyTarget("commktOptionAttrs1", obj, true);
	}

	public void removeFromCommktOptionAttrs1(final CommktOptionAttr obj)
	{
		this.removeToManyTarget("commktOptionAttrs1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<CommktOptionAttr> getCommktOptionAttrs1()
	{
		return (List<CommktOptionAttr>) this.readProperty("commktOptionAttrs1");
	}

	public void addToCommktPhysicalAttrs(final CommktPhysicalAttr obj)
	{
		this.addToManyTarget("commktPhysicalAttrs", obj, true);
	}

	public void removeFromCommktPhysicalAttrs(final CommktPhysicalAttr obj)
	{
		this.removeToManyTarget("commktPhysicalAttrs", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<CommktPhysicalAttr> getCommktPhysicalAttrs()
	{
		return (List<CommktPhysicalAttr>) this.readProperty("commktPhysicalAttrs");
	}

	public void addToCommktSrcAliasInfoes(final CommktSrcAliasInfo obj)
	{
		this.addToManyTarget("commktSrcAliasInfoes", obj, true);
	}

	public void removeFromCommktSrcAliasInfoes(final CommktSrcAliasInfo obj)
	{
		this.removeToManyTarget("commktSrcAliasInfoes", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<CommktSrcAliasInfo> getCommktSrcAliasInfoes()
	{
		return (List<CommktSrcAliasInfo>) this.readProperty("commktSrcAliasInfoes");
	}

	public void addToCommodities(final Commodity obj)
	{
		this.addToManyTarget("commodities", obj, true);
	}

	public void removeFromCommodities(final Commodity obj)
	{
		this.removeToManyTarget("commodities", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<Commodity> getCommodities()
	{
		return (List<Commodity>) this.readProperty("commodities");
	}

	public void addToCommodities1(final Commodity obj)
	{
		this.addToManyTarget("commodities1", obj, true);
	}

	public void removeFromCommodities1(final Commodity obj)
	{
		this.removeToManyTarget("commodities1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<Commodity> getCommodities1()
	{
		return (List<Commodity>) this.readProperty("commodities1");
	}

	public void addToCommodityUoms(final CommodityUom obj)
	{
		this.addToManyTarget("commodityUoms", obj, true);
	}

	public void removeFromCommodityUoms(final CommodityUom obj)
	{
		this.removeToManyTarget("commodityUoms", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<CommodityUom> getCommodityUoms()
	{
		return (List<CommodityUom>) this.readProperty("commodityUoms");
	}

	public void addToCostPriceDetails(final CostPriceDetail obj)
	{
		this.addToManyTarget("costPriceDetails", obj, true);
	}

	public void removeFromCostPriceDetails(final CostPriceDetail obj)
	{
		this.removeToManyTarget("costPriceDetails", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<CostPriceDetail> getCostPriceDetails()
	{
		return (List<CostPriceDetail>) this.readProperty("costPriceDetails");
	}

	public void addToCostReportSnapshots(final CostReportSnapshot obj)
	{
		this.addToManyTarget("costReportSnapshots", obj, true);
	}

	public void removeFromCostReportSnapshots(final CostReportSnapshot obj)
	{
		this.removeToManyTarget("costReportSnapshots", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<CostReportSnapshot> getCostReportSnapshots()
	{
		return (List<CostReportSnapshot>) this.readProperty("costReportSnapshots");
	}

	public void addToCostReportSnapshots1(final CostReportSnapshot obj)
	{
		this.addToManyTarget("costReportSnapshots1", obj, true);
	}

	public void removeFromCostReportSnapshots1(final CostReportSnapshot obj)
	{
		this.removeToManyTarget("costReportSnapshots1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<CostReportSnapshot> getCostReportSnapshots1()
	{
		return (List<CostReportSnapshot>) this.readProperty("costReportSnapshots1");
	}

	public void addToCostScheduledPrices(final CostScheduledPrice obj)
	{
		this.addToManyTarget("costScheduledPrices", obj, true);
	}

	public void removeFromCostScheduledPrices(final CostScheduledPrice obj)
	{
		this.removeToManyTarget("costScheduledPrices", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<CostScheduledPrice> getCostScheduledPrices()
	{
		return (List<CostScheduledPrice>) this.readProperty("costScheduledPrices");
	}

	public void addToCosts(final Cost obj)
	{
		this.addToManyTarget("costs", obj, true);
	}

	public void removeFromCosts(final Cost obj)
	{
		this.removeToManyTarget("costs", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<Cost> getCosts()
	{
		return (List<Cost>) this.readProperty("costs");
	}

	public void addToCosts1(final Cost obj)
	{
		this.addToManyTarget("costs1", obj, true);
	}

	public void removeFromCosts1(final Cost obj)
	{
		this.removeToManyTarget("costs1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<Cost> getCosts1()
	{
		return (List<Cost>) this.readProperty("costs1");
	}

	public void addToCreditAlarmLogs(final CreditAlarmLog obj)
	{
		this.addToManyTarget("creditAlarmLogs", obj, true);
	}

	public void removeFromCreditAlarmLogs(final CreditAlarmLog obj)
	{
		this.removeToManyTarget("creditAlarmLogs", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<CreditAlarmLog> getCreditAlarmLogs()
	{
		return (List<CreditAlarmLog>) this.readProperty("creditAlarmLogs");
	}

	public void addToCreditLimits(final CreditLimit obj)
	{
		this.addToManyTarget("creditLimits", obj, true);
	}

	public void removeFromCreditLimits(final CreditLimit obj)
	{
		this.removeToManyTarget("creditLimits", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<CreditLimit> getCreditLimits()
	{
		return (List<CreditLimit>) this.readProperty("creditLimits");
	}

	public void addToExchFifoAllocItems(final ExchFifoAllocItem obj)
	{
		this.addToManyTarget("exchFifoAllocItems", obj, true);
	}

	public void removeFromExchFifoAllocItems(final ExchFifoAllocItem obj)
	{
		this.removeToManyTarget("exchFifoAllocItems", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<ExchFifoAllocItem> getExchFifoAllocItems()
	{
		return (List<ExchFifoAllocItem>) this.readProperty("exchFifoAllocItems");
	}

	public void addToExternalPositions(final ExternalPosition obj)
	{
		this.addToManyTarget("externalPositions", obj, true);
	}

	public void removeFromExternalPositions(final ExternalPosition obj)
	{
		this.removeToManyTarget("externalPositions", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<ExternalPosition> getExternalPositions()
	{
		return (List<ExternalPosition>) this.readProperty("externalPositions");
	}

	public void addToFacilities(final Facility obj)
	{
		this.addToManyTarget("facilities", obj, true);
	}

	public void removeFromFacilities(final Facility obj)
	{
		this.removeToManyTarget("facilities", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<Facility> getFacilities()
	{
		return (List<Facility>) this.readProperty("facilities");
	}

	public void addToFacilityCommodities(final FacilityCommodity obj)
	{
		this.addToManyTarget("facilityCommodities", obj, true);
	}

	public void removeFromFacilityCommodities(final FacilityCommodity obj)
	{
		this.removeToManyTarget("facilityCommodities", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<FacilityCommodity> getFacilityCommodities()
	{
		return (List<FacilityCommodity>) this.readProperty("facilityCommodities");
	}

	public void addToFlatRateses(final FlatRates obj)
	{
		this.addToManyTarget("flatRateses", obj, true);
	}

	public void removeFromFlatRateses(final FlatRates obj)
	{
		this.removeToManyTarget("flatRateses", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<FlatRates> getFlatRateses()
	{
		return (List<FlatRates>) this.readProperty("flatRateses");
	}

	public void addToForecastValues(final ForecastValue obj)
	{
		this.addToManyTarget("forecastValues", obj, true);
	}

	public void removeFromForecastValues(final ForecastValue obj)
	{
		this.removeToManyTarget("forecastValues", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<ForecastValue> getForecastValues()
	{
		return (List<ForecastValue>) this.readProperty("forecastValues");
	}

	public void addToFormulaBodies(final FormulaBody obj)
	{
		this.addToManyTarget("formulaBodies", obj, true);
	}

	public void removeFromFormulaBodies(final FormulaBody obj)
	{
		this.removeToManyTarget("formulaBodies", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<FormulaBody> getFormulaBodies()
	{
		return (List<FormulaBody>) this.readProperty("formulaBodies");
	}

	public void addToFormulaBodyTriggers(final FormulaBodyTrigger obj)
	{
		this.addToManyTarget("formulaBodyTriggers", obj, true);
	}

	public void removeFromFormulaBodyTriggers(final FormulaBodyTrigger obj)
	{
		this.removeToManyTarget("formulaBodyTriggers", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<FormulaBodyTrigger> getFormulaBodyTriggers()
	{
		return (List<FormulaBodyTrigger>) this.readProperty("formulaBodyTriggers");
	}

	public void addToFormulaComponents(final FormulaComponent obj)
	{
		this.addToManyTarget("formulaComponents", obj, true);
	}

	public void removeFromFormulaComponents(final FormulaComponent obj)
	{
		this.removeToManyTarget("formulaComponents", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<FormulaComponent> getFormulaComponents()
	{
		return (List<FormulaComponent>) this.readProperty("formulaComponents");
	}

	public void addToFormulaComponents1(final FormulaComponent obj)
	{
		this.addToManyTarget("formulaComponents1", obj, true);
	}

	public void removeFromFormulaComponents1(final FormulaComponent obj)
	{
		this.removeToManyTarget("formulaComponents1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<FormulaComponent> getFormulaComponents1()
	{
		return (List<FormulaComponent>) this.readProperty("formulaComponents1");
	}

	public void addToFormulas(final Formula obj)
	{
		this.addToManyTarget("formulas", obj, true);
	}

	public void removeFromFormulas(final Formula obj)
	{
		this.removeToManyTarget("formulas", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<Formula> getFormulas()
	{
		return (List<Formula>) this.readProperty("formulas");
	}

	public void addToFxExposureDists(final FxExposureDist obj)
	{
		this.addToManyTarget("fxExposureDists", obj, true);
	}

	public void removeFromFxExposureDists(final FxExposureDist obj)
	{
		this.removeToManyTarget("fxExposureDists", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<FxExposureDist> getFxExposureDists()
	{
		return (List<FxExposureDist>) this.readProperty("fxExposureDists");
	}

	public void addToFxExposureDists1(final FxExposureDist obj)
	{
		this.addToManyTarget("fxExposureDists1", obj, true);
	}

	public void removeFromFxExposureDists1(final FxExposureDist obj)
	{
		this.removeToManyTarget("fxExposureDists1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<FxExposureDist> getFxExposureDists1()
	{
		return (List<FxExposureDist>) this.readProperty("fxExposureDists1");
	}

	public void addToGradeCommodityMarkets(final GradeCommodityMarket obj)
	{
		this.addToManyTarget("gradeCommodityMarkets", obj, true);
	}

	public void removeFromGradeCommodityMarkets(final GradeCommodityMarket obj)
	{
		this.removeToManyTarget("gradeCommodityMarkets", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<GradeCommodityMarket> getGradeCommodityMarkets()
	{
		return (List<GradeCommodityMarket>) this.readProperty("gradeCommodityMarkets");
	}

	public void addToGravityTableNames(final GravityTableName obj)
	{
		this.addToManyTarget("gravityTableNames", obj, true);
	}

	public void removeFromGravityTableNames(final GravityTableName obj)
	{
		this.removeToManyTarget("gravityTableNames", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<GravityTableName> getGravityTableNames()
	{
		return (List<GravityTableName>) this.readProperty("gravityTableNames");
	}

	public void addToInvActualFifoes(final InvActualFifo obj)
	{
		this.addToManyTarget("invActualFifoes", obj, true);
	}

	public void removeFromInvActualFifoes(final InvActualFifo obj)
	{
		this.removeToManyTarget("invActualFifoes", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<InvActualFifo> getInvActualFifoes()
	{
		return (List<InvActualFifo>) this.readProperty("invActualFifoes");
	}

	public void addToInvActuals(final InvActual obj)
	{
		this.addToManyTarget("invActuals", obj, true);
	}

	public void removeFromInvActuals(final InvActual obj)
	{
		this.removeToManyTarget("invActuals", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<InvActual> getInvActuals()
	{
		return (List<InvActual>) this.readProperty("invActuals");
	}

	public void addToInvActuals1(final InvActual obj)
	{
		this.addToManyTarget("invActuals1", obj, true);
	}

	public void removeFromInvActuals1(final InvActual obj)
	{
		this.removeToManyTarget("invActuals1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<InvActual> getInvActuals1()
	{
		return (List<InvActual>) this.readProperty("invActuals1");
	}

	public void addToInvActuals2(final InvActual obj)
	{
		this.addToManyTarget("invActuals2", obj, true);
	}

	public void removeFromInvActuals2(final InvActual obj)
	{
		this.removeToManyTarget("invActuals2", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<InvActual> getInvActuals2()
	{
		return (List<InvActual>) this.readProperty("invActuals2");
	}

	public void addToInventories(final Inventory obj)
	{
		this.addToManyTarget("inventories", obj, true);
	}

	public void removeFromInventories(final Inventory obj)
	{
		this.removeToManyTarget("inventories", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<Inventory> getInventories()
	{
		return (List<Inventory>) this.readProperty("inventories");
	}

	public void addToInventories1(final Inventory obj)
	{
		this.addToManyTarget("inventories1", obj, true);
	}

	public void removeFromInventories1(final Inventory obj)
	{
		this.removeToManyTarget("inventories1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<Inventory> getInventories1()
	{
		return (List<Inventory>) this.readProperty("inventories1");
	}

	public void addToInventories2(final Inventory obj)
	{
		this.addToManyTarget("inventories2", obj, true);
	}

	public void removeFromInventories2(final Inventory obj)
	{
		this.removeToManyTarget("inventories2", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<Inventory> getInventories2()
	{
		return (List<Inventory>) this.readProperty("inventories2");
	}

	public void addToInventoryBalances(final InventoryBalance obj)
	{
		this.addToManyTarget("inventoryBalances", obj, true);
	}

	public void removeFromInventoryBalances(final InventoryBalance obj)
	{
		this.removeToManyTarget("inventoryBalances", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<InventoryBalance> getInventoryBalances()
	{
		return (List<InventoryBalance>) this.readProperty("inventoryBalances");
	}

	public void addToInventoryBalances1(final InventoryBalance obj)
	{
		this.addToManyTarget("inventoryBalances1", obj, true);
	}

	public void removeFromInventoryBalances1(final InventoryBalance obj)
	{
		this.removeToManyTarget("inventoryBalances1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<InventoryBalance> getInventoryBalances1()
	{
		return (List<InventoryBalance>) this.readProperty("inventoryBalances1");
	}

	public void addToInventoryBuildDraws(final InventoryBuildDraw obj)
	{
		this.addToManyTarget("inventoryBuildDraws", obj, true);
	}

	public void removeFromInventoryBuildDraws(final InventoryBuildDraw obj)
	{
		this.removeToManyTarget("inventoryBuildDraws", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<InventoryBuildDraw> getInventoryBuildDraws()
	{
		return (List<InventoryBuildDraw>) this.readProperty("inventoryBuildDraws");
	}

	public void addToInventoryBuildDraws1(final InventoryBuildDraw obj)
	{
		this.addToManyTarget("inventoryBuildDraws1", obj, true);
	}

	public void removeFromInventoryBuildDraws1(final InventoryBuildDraw obj)
	{
		this.removeToManyTarget("inventoryBuildDraws1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<InventoryBuildDraw> getInventoryBuildDraws1()
	{
		return (List<InventoryBuildDraw>) this.readProperty("inventoryBuildDraws1");
	}

	public void addToLcAllocations(final LcAllocation obj)
	{
		this.addToManyTarget("lcAllocations", obj, true);
	}

	public void removeFromLcAllocations(final LcAllocation obj)
	{
		this.removeToManyTarget("lcAllocations", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<LcAllocation> getLcAllocations()
	{
		return (List<LcAllocation>) this.readProperty("lcAllocations");
	}

	public void addToLcAllocations1(final LcAllocation obj)
	{
		this.addToManyTarget("lcAllocations1", obj, true);
	}

	public void removeFromLcAllocations1(final LcAllocation obj)
	{
		this.removeToManyTarget("lcAllocations1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<LcAllocation> getLcAllocations1()
	{
		return (List<LcAllocation>) this.readProperty("lcAllocations1");
	}

	public void addToLimitTypes(final LimitType obj)
	{
		this.addToManyTarget("limitTypes", obj, true);
	}

	public void removeFromLimitTypes(final LimitType obj)
	{
		this.removeToManyTarget("limitTypes", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<LimitType> getLimitTypes()
	{
		return (List<LimitType>) this.readProperty("limitTypes");
	}

	public void addToLocationTankInfoes(final LocationTankInfo obj)
	{
		this.addToManyTarget("locationTankInfoes", obj, true);
	}

	public void removeFromLocationTankInfoes(final LocationTankInfo obj)
	{
		this.removeToManyTarget("locationTankInfoes", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<LocationTankInfo> getLocationTankInfoes()
	{
		return (List<LocationTankInfo>) this.readProperty("locationTankInfoes");
	}

	public void addToMarketPricingCostss(final MarketPricingCosts obj)
	{
		this.addToManyTarget("marketPricingCostss", obj, true);
	}

	public void removeFromMarketPricingCostss(final MarketPricingCosts obj)
	{
		this.removeToManyTarget("marketPricingCostss", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<MarketPricingCosts> getMarketPricingCostss()
	{
		return (List<MarketPricingCosts>) this.readProperty("marketPricingCostss");
	}

	public void addToMotLocationTariffs(final MotLocationTariff obj)
	{
		this.addToManyTarget("motLocationTariffs", obj, true);
	}

	public void removeFromMotLocationTariffs(final MotLocationTariff obj)
	{
		this.removeToManyTarget("motLocationTariffs", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<MotLocationTariff> getMotLocationTariffs()
	{
		return (List<MotLocationTariff>) this.readProperty("motLocationTariffs");
	}

	public void addToMtmExposures(final MtmExposure obj)
	{
		this.addToManyTarget("mtmExposures", obj, true);
	}

	public void removeFromMtmExposures(final MtmExposure obj)
	{
		this.removeToManyTarget("mtmExposures", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<MtmExposure> getMtmExposures()
	{
		return (List<MtmExposure>) this.readProperty("mtmExposures");
	}

	public void addToNewShipDataConsumptionss(final NewShipDataConsumptions obj)
	{
		this.addToManyTarget("newShipDataConsumptionss", obj, true);
	}

	public void removeFromNewShipDataConsumptionss(final NewShipDataConsumptions obj)
	{
		this.removeToManyTarget("newShipDataConsumptionss", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<NewShipDataConsumptions> getNewShipDataConsumptionss()
	{
		return (List<NewShipDataConsumptions>) this.readProperty("newShipDataConsumptionss");
	}

	public void addToNoiseBandExposures(final NoiseBandExposure obj)
	{
		this.addToManyTarget("noiseBandExposures", obj, true);
	}

	public void removeFromNoiseBandExposures(final NoiseBandExposure obj)
	{
		this.removeToManyTarget("noiseBandExposures", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<NoiseBandExposure> getNoiseBandExposures()
	{
		return (List<NoiseBandExposure>) this.readProperty("noiseBandExposures");
	}

	public void addToOtcOptions(final OtcOption obj)
	{
		this.addToManyTarget("otcOptions", obj, true);
	}

	public void removeFromOtcOptions(final OtcOption obj)
	{
		this.removeToManyTarget("otcOptions", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<OtcOption> getOtcOptions()
	{
		return (List<OtcOption>) this.readProperty("otcOptions");
	}

	public void addToPaperAllocationItems(final PaperAllocationItem obj)
	{
		this.addToManyTarget("paperAllocationItems", obj, true);
	}

	public void removeFromPaperAllocationItems(final PaperAllocationItem obj)
	{
		this.removeToManyTarget("paperAllocationItems", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<PaperAllocationItem> getPaperAllocationItems()
	{
		return (List<PaperAllocationItem>) this.readProperty("paperAllocationItems");
	}

	public void addToParcels(final Parcel obj)
	{
		this.addToManyTarget("parcels", obj, true);
	}

	public void removeFromParcels(final Parcel obj)
	{
		this.removeToManyTarget("parcels", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<Parcel> getParcels()
	{
		return (List<Parcel>) this.readProperty("parcels");
	}

	public void addToParcels1(final Parcel obj)
	{
		this.addToManyTarget("parcels1", obj, true);
	}

	public void removeFromParcels1(final Parcel obj)
	{
		this.removeToManyTarget("parcels1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<Parcel> getParcels1()
	{
		return (List<Parcel>) this.readProperty("parcels1");
	}

	public void addToParentGuarantees(final ParentGuarantee obj)
	{
		this.addToManyTarget("parentGuarantees", obj, true);
	}

	public void removeFromParentGuarantees(final ParentGuarantee obj)
	{
		this.removeToManyTarget("parentGuarantees", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<ParentGuarantee> getParentGuarantees()
	{
		return (List<ParentGuarantee>) this.readProperty("parentGuarantees");
	}

	public void addToPlHistories(final PlHistory obj)
	{
		this.addToManyTarget("plHistories", obj, true);
	}

	public void removeFromPlHistories(final PlHistory obj)
	{
		this.removeToManyTarget("plHistories", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<PlHistory> getPlHistories()
	{
		return (List<PlHistory>) this.readProperty("plHistories");
	}

	public void addToPlOffsetTransfers(final PlOffsetTransfer obj)
	{
		this.addToManyTarget("plOffsetTransfers", obj, true);
	}

	public void removeFromPlOffsetTransfers(final PlOffsetTransfer obj)
	{
		this.removeToManyTarget("plOffsetTransfers", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<PlOffsetTransfer> getPlOffsetTransfers()
	{
		return (List<PlOffsetTransfer>) this.readProperty("plOffsetTransfers");
	}

	public void addToPortfolioExtInfoes(final PortfolioExtInfo obj)
	{
		this.addToManyTarget("portfolioExtInfoes", obj, true);
	}

	public void removeFromPortfolioExtInfoes(final PortfolioExtInfo obj)
	{
		this.removeToManyTarget("portfolioExtInfoes", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<PortfolioExtInfo> getPortfolioExtInfoes()
	{
		return (List<PortfolioExtInfo>) this.readProperty("portfolioExtInfoes");
	}

	public void addToPortfolioExtInfoes1(final PortfolioExtInfo obj)
	{
		this.addToManyTarget("portfolioExtInfoes1", obj, true);
	}

	public void removeFromPortfolioExtInfoes1(final PortfolioExtInfo obj)
	{
		this.removeToManyTarget("portfolioExtInfoes1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<PortfolioExtInfo> getPortfolioExtInfoes1()
	{
		return (List<PortfolioExtInfo>) this.readProperty("portfolioExtInfoes1");
	}

	public void addToPortfolioExtInfoes2(final PortfolioExtInfo obj)
	{
		this.addToManyTarget("portfolioExtInfoes2", obj, true);
	}

	public void removeFromPortfolioExtInfoes2(final PortfolioExtInfo obj)
	{
		this.removeToManyTarget("portfolioExtInfoes2", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<PortfolioExtInfo> getPortfolioExtInfoes2()
	{
		return (List<PortfolioExtInfo>) this.readProperty("portfolioExtInfoes2");
	}

	public void addToPortfolioPosLimits(final PortfolioPosLimit obj)
	{
		this.addToManyTarget("portfolioPosLimits", obj, true);
	}

	public void removeFromPortfolioPosLimits(final PortfolioPosLimit obj)
	{
		this.removeToManyTarget("portfolioPosLimits", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<PortfolioPosLimit> getPortfolioPosLimits()
	{
		return (List<PortfolioPosLimit>) this.readProperty("portfolioPosLimits");
	}

	public void addToPositionHistories(final PositionHistory obj)
	{
		this.addToManyTarget("positionHistories", obj, true);
	}

	public void removeFromPositionHistories(final PositionHistory obj)
	{
		this.removeToManyTarget("positionHistories", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<PositionHistory> getPositionHistories()
	{
		return (List<PositionHistory>) this.readProperty("positionHistories");
	}

	public void addToPositionHistories1(final PositionHistory obj)
	{
		this.addToManyTarget("positionHistories1", obj, true);
	}

	public void removeFromPositionHistories1(final PositionHistory obj)
	{
		this.removeToManyTarget("positionHistories1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<PositionHistory> getPositionHistories1()
	{
		return (List<PositionHistory>) this.readProperty("positionHistories1");
	}

	public void addToPositionHistories2(final PositionHistory obj)
	{
		this.addToManyTarget("positionHistories2", obj, true);
	}

	public void removeFromPositionHistories2(final PositionHistory obj)
	{
		this.removeToManyTarget("positionHistories2", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<PositionHistory> getPositionHistories2()
	{
		return (List<PositionHistory>) this.readProperty("positionHistories2");
	}

	public void addToPositionHistories3(final PositionHistory obj)
	{
		this.addToManyTarget("positionHistories3", obj, true);
	}

	public void removeFromPositionHistories3(final PositionHistory obj)
	{
		this.removeToManyTarget("positionHistories3", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<PositionHistory> getPositionHistories3()
	{
		return (List<PositionHistory>) this.readProperty("positionHistories3");
	}

	public void addToPositionMarkToMarkets(final PositionMarkToMarket obj)
	{
		this.addToManyTarget("positionMarkToMarkets", obj, true);
	}

	public void removeFromPositionMarkToMarkets(final PositionMarkToMarket obj)
	{
		this.removeToManyTarget("positionMarkToMarkets", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<PositionMarkToMarket> getPositionMarkToMarkets()
	{
		return (List<PositionMarkToMarket>) this.readProperty("positionMarkToMarkets");
	}

	public void addToPositions(final Position obj)
	{
		this.addToManyTarget("positions", obj, true);
	}

	public void removeFromPositions(final Position obj)
	{
		this.removeToManyTarget("positions", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<Position> getPositions()
	{
		return (List<Position>) this.readProperty("positions");
	}

	public void addToPositions1(final Position obj)
	{
		this.addToManyTarget("positions1", obj, true);
	}

	public void removeFromPositions1(final Position obj)
	{
		this.removeToManyTarget("positions1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<Position> getPositions1()
	{
		return (List<Position>) this.readProperty("positions1");
	}

	public void addToPositions2(final Position obj)
	{
		this.addToManyTarget("positions2", obj, true);
	}

	public void removeFromPositions2(final Position obj)
	{
		this.removeToManyTarget("positions2", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<Position> getPositions2()
	{
		return (List<Position>) this.readProperty("positions2");
	}

	public void addToPositions3(final Position obj)
	{
		this.addToManyTarget("positions3", obj, true);
	}

	public void removeFromPositions3(final Position obj)
	{
		this.removeToManyTarget("positions3", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<Position> getPositions3()
	{
		return (List<Position>) this.readProperty("positions3");
	}

	public void addToQppMarkToMarkets(final QppMarkToMarket obj)
	{
		this.addToManyTarget("qppMarkToMarkets", obj, true);
	}

	public void removeFromQppMarkToMarkets(final QppMarkToMarket obj)
	{
		this.removeToManyTarget("qppMarkToMarkets", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<QppMarkToMarket> getQppMarkToMarkets()
	{
		return (List<QppMarkToMarket>) this.readProperty("qppMarkToMarkets");
	}

	public void addToQuoteMarketdataSources(final QuoteMarketdataSource obj)
	{
		this.addToManyTarget("quoteMarketdataSources", obj, true);
	}

	public void removeFromQuoteMarketdataSources(final QuoteMarketdataSource obj)
	{
		this.removeToManyTarget("quoteMarketdataSources", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<QuoteMarketdataSource> getQuoteMarketdataSources()
	{
		return (List<QuoteMarketdataSource>) this.readProperty("quoteMarketdataSources");
	}

	public void addToQuotePrices(final QuotePrice obj)
	{
		this.addToManyTarget("quotePrices", obj, true);
	}

	public void removeFromQuotePrices(final QuotePrice obj)
	{
		this.removeToManyTarget("quotePrices", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<QuotePrice> getQuotePrices()
	{
		return (List<QuotePrice>) this.readProperty("quotePrices");
	}

	public void addToQuotePricingPeriods(final QuotePricingPeriod obj)
	{
		this.addToManyTarget("quotePricingPeriods", obj, true);
	}

	public void removeFromQuotePricingPeriods(final QuotePricingPeriod obj)
	{
		this.removeToManyTarget("quotePricingPeriods", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<QuotePricingPeriod> getQuotePricingPeriods()
	{
		return (List<QuotePricingPeriod>) this.readProperty("quotePricingPeriods");
	}

	public void addToQuotePricingPeriods1(final QuotePricingPeriod obj)
	{
		this.addToManyTarget("quotePricingPeriods1", obj, true);
	}

	public void removeFromQuotePricingPeriods1(final QuotePricingPeriod obj)
	{
		this.removeToManyTarget("quotePricingPeriods1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<QuotePricingPeriod> getQuotePricingPeriods1()
	{
		return (List<QuotePricingPeriod>) this.readProperty("quotePricingPeriods1");
	}

	public void addToRailcarPtpRates(final RailcarPtpRate obj)
	{
		this.addToManyTarget("railcarPtpRates", obj, true);
	}

	public void removeFromRailcarPtpRates(final RailcarPtpRate obj)
	{
		this.removeToManyTarget("railcarPtpRates", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<RailcarPtpRate> getRailcarPtpRates()
	{
		return (List<RailcarPtpRate>) this.readProperty("railcarPtpRates");
	}

	public void addToRecapItems(final RecapItem obj)
	{
		this.addToManyTarget("recapItems", obj, true);
	}

	public void removeFromRecapItems(final RecapItem obj)
	{
		this.removeToManyTarget("recapItems", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<RecapItem> getRecapItems()
	{
		return (List<RecapItem>) this.readProperty("recapItems");
	}

	public void addToRinEquivalences(final RinEquivalence obj)
	{
		this.addToManyTarget("rinEquivalences", obj, true);
	}

	public void removeFromRinEquivalences(final RinEquivalence obj)
	{
		this.removeToManyTarget("rinEquivalences", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<RinEquivalence> getRinEquivalences()
	{
		return (List<RinEquivalence>) this.readProperty("rinEquivalences");
	}

	public void addToRinEquivalences1(final RinEquivalence obj)
	{
		this.addToManyTarget("rinEquivalences1", obj, true);
	}

	public void removeFromRinEquivalences1(final RinEquivalence obj)
	{
		this.removeToManyTarget("rinEquivalences1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<RinEquivalence> getRinEquivalences1()
	{
		return (List<RinEquivalence>) this.readProperty("rinEquivalences1");
	}

	public void addToRinObligations(final RinObligation obj)
	{
		this.addToManyTarget("rinObligations", obj, true);
	}

	public void removeFromRinObligations(final RinObligation obj)
	{
		this.removeToManyTarget("rinObligations", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<RinObligation> getRinObligations()
	{
		return (List<RinObligation>) this.readProperty("rinObligations");
	}

	public void addToRinObligations1(final RinObligation obj)
	{
		this.addToManyTarget("rinObligations1", obj, true);
	}

	public void removeFromRinObligations1(final RinObligation obj)
	{
		this.removeToManyTarget("rinObligations1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<RinObligation> getRinObligations1()
	{
		return (List<RinObligation>) this.readProperty("rinObligations1");
	}

	public void addToRiskmgrWinPivotDefs(final RiskmgrWinPivotDef obj)
	{
		this.addToManyTarget("riskmgrWinPivotDefs", obj, true);
	}

	public void removeFromRiskmgrWinPivotDefs(final RiskmgrWinPivotDef obj)
	{
		this.removeToManyTarget("riskmgrWinPivotDefs", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<RiskmgrWinPivotDef> getRiskmgrWinPivotDefs()
	{
		return (List<RiskmgrWinPivotDef>) this.readProperty("riskmgrWinPivotDefs");
	}

	public void addToScenarioItems(final ScenarioItem obj)
	{
		this.addToManyTarget("scenarioItems", obj, true);
	}

	public void removeFromScenarioItems(final ScenarioItem obj)
	{
		this.removeToManyTarget("scenarioItems", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<ScenarioItem> getScenarioItems()
	{
		return (List<ScenarioItem>) this.readProperty("scenarioItems");
	}

	public void addToScenarioItems1(final ScenarioItem obj)
	{
		this.addToManyTarget("scenarioItems1", obj, true);
	}

	public void removeFromScenarioItems1(final ScenarioItem obj)
	{
		this.removeToManyTarget("scenarioItems1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<ScenarioItem> getScenarioItems1()
	{
		return (List<ScenarioItem>) this.readProperty("scenarioItems1");
	}

	public void addToScenarios(final Scenario obj)
	{
		this.addToManyTarget("scenarios", obj, true);
	}

	public void removeFromScenarios(final Scenario obj)
	{
		this.removeToManyTarget("scenarios", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<Scenario> getScenarios()
	{
		return (List<Scenario>) this.readProperty("scenarios");
	}

	public void addToShipDataConsumptionss(final ShipDataConsumptions obj)
	{
		this.addToManyTarget("shipDataConsumptionss", obj, true);
	}

	public void removeFromShipDataConsumptionss(final ShipDataConsumptions obj)
	{
		this.removeToManyTarget("shipDataConsumptionss", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<ShipDataConsumptions> getShipDataConsumptionss()
	{
		return (List<ShipDataConsumptions>) this.readProperty("shipDataConsumptionss");
	}

	public void addToShipments(final Shipment obj)
	{
		this.addToManyTarget("shipments", obj, true);
	}

	public void removeFromShipments(final Shipment obj)
	{
		this.removeToManyTarget("shipments", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<Shipment> getShipments()
	{
		return (List<Shipment>) this.readProperty("shipments");
	}

	public void addToShipments1(final Shipment obj)
	{
		this.addToManyTarget("shipments1", obj, true);
	}

	public void removeFromShipments1(final Shipment obj)
	{
		this.removeToManyTarget("shipments1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<Shipment> getShipments1()
	{
		return (List<Shipment>) this.readProperty("shipments1");
	}

	public void addToShipments2(final Shipment obj)
	{
		this.addToManyTarget("shipments2", obj, true);
	}

	public void removeFromShipments2(final Shipment obj)
	{
		this.removeToManyTarget("shipments2", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<Shipment> getShipments2()
	{
		return (List<Shipment>) this.readProperty("shipments2");
	}

	public void addToSimpleFormulas(final SimpleFormula obj)
	{
		this.addToManyTarget("simpleFormulas", obj, true);
	}

	public void removeFromSimpleFormulas(final SimpleFormula obj)
	{
		this.removeToManyTarget("simpleFormulas", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<SimpleFormula> getSimpleFormulas()
	{
		return (List<SimpleFormula>) this.readProperty("simpleFormulas");
	}

	public void setSpecification(final Specification specification)
	{
		this.setToOneTarget("specification", specification, true);
	}

	public Specification getSpecification()
	{
		return (Specification) this.readProperty("specification");
	}

	public void setSpecification1(final Specification specification1)
	{
		this.setToOneTarget("specification1", specification1, true);
	}

	public Specification getSpecification1()
	{
		return (Specification) this.readProperty("specification1");
	}

	public void addToSpecifications(final Specification obj)
	{
		this.addToManyTarget("specifications", obj, true);
	}

	public void removeFromSpecifications(final Specification obj)
	{
		this.removeToManyTarget("specifications", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<Specification> getSpecifications()
	{
		return (List<Specification>) this.readProperty("specifications");
	}

	public void addToTaxes(final Tax obj)
	{
		this.addToManyTarget("taxes", obj, true);
	}

	public void removeFromTaxes(final Tax obj)
	{
		this.removeToManyTarget("taxes", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<Tax> getTaxes()
	{
		return (List<Tax>) this.readProperty("taxes");
	}

	public void addToTaxes1(final Tax obj)
	{
		this.addToManyTarget("taxes1", obj, true);
	}

	public void removeFromTaxes1(final Tax obj)
	{
		this.removeToManyTarget("taxes1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<Tax> getTaxes1()
	{
		return (List<Tax>) this.readProperty("taxes1");
	}

	public void addToTiMarkToMarkets(final TiMarkToMarket obj)
	{
		this.addToManyTarget("tiMarkToMarkets", obj, true);
	}

	public void removeFromTiMarkToMarkets(final TiMarkToMarket obj)
	{
		this.removeToManyTarget("tiMarkToMarkets", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TiMarkToMarket> getTiMarkToMarkets()
	{
		return (List<TiMarkToMarket>) this.readProperty("tiMarkToMarkets");
	}

	public void addToTidMarkToMarkets(final TidMarkToMarket obj)
	{
		this.addToManyTarget("tidMarkToMarkets", obj, true);
	}

	public void removeFromTidMarkToMarkets(final TidMarkToMarket obj)
	{
		this.removeToManyTarget("tidMarkToMarkets", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TidMarkToMarket> getTidMarkToMarkets()
	{
		return (List<TidMarkToMarket>) this.readProperty("tidMarkToMarkets");
	}

	public void addToTidMarkToMarkets1(final TidMarkToMarket obj)
	{
		this.addToManyTarget("tidMarkToMarkets1", obj, true);
	}

	public void removeFromTidMarkToMarkets1(final TidMarkToMarket obj)
	{
		this.removeToManyTarget("tidMarkToMarkets1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TidMarkToMarket> getTidMarkToMarkets1()
	{
		return (List<TidMarkToMarket>) this.readProperty("tidMarkToMarkets1");
	}

	public void addToTidMarkToMarkets2(final TidMarkToMarket obj)
	{
		this.addToManyTarget("tidMarkToMarkets2", obj, true);
	}

	public void removeFromTidMarkToMarkets2(final TidMarkToMarket obj)
	{
		this.removeToManyTarget("tidMarkToMarkets2", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TidMarkToMarket> getTidMarkToMarkets2()
	{
		return (List<TidMarkToMarket>) this.readProperty("tidMarkToMarkets2");
	}

	public void addToTidMtmVolatilities(final TidMtmVolatility obj)
	{
		this.addToManyTarget("tidMtmVolatilities", obj, true);
	}

	public void removeFromTidMtmVolatilities(final TidMtmVolatility obj)
	{
		this.removeToManyTarget("tidMtmVolatilities", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TidMtmVolatility> getTidMtmVolatilities()
	{
		return (List<TidMtmVolatility>) this.readProperty("tidMtmVolatilities");
	}

	public void addToTradeItemBunkers(final TradeItemBunker obj)
	{
		this.addToManyTarget("tradeItemBunkers", obj, true);
	}

	public void removeFromTradeItemBunkers(final TradeItemBunker obj)
	{
		this.removeToManyTarget("tradeItemBunkers", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeItemBunker> getTradeItemBunkers()
	{
		return (List<TradeItemBunker>) this.readProperty("tradeItemBunkers");
	}

	public void addToTradeItemCashPhies(final TradeItemCashPhy obj)
	{
		this.addToManyTarget("tradeItemCashPhies", obj, true);
	}

	public void removeFromTradeItemCashPhies(final TradeItemCashPhy obj)
	{
		this.removeToManyTarget("tradeItemCashPhies", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeItemCashPhy> getTradeItemCashPhies()
	{
		return (List<TradeItemCashPhy>) this.readProperty("tradeItemCashPhies");
	}

	public void addToTradeItemCashPhies1(final TradeItemCashPhy obj)
	{
		this.addToManyTarget("tradeItemCashPhies1", obj, true);
	}

	public void removeFromTradeItemCashPhies1(final TradeItemCashPhy obj)
	{
		this.removeToManyTarget("tradeItemCashPhies1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeItemCashPhy> getTradeItemCashPhies1()
	{
		return (List<TradeItemCashPhy>) this.readProperty("tradeItemCashPhies1");
	}

	public void addToTradeItemCashPhies2(final TradeItemCashPhy obj)
	{
		this.addToManyTarget("tradeItemCashPhies2", obj, true);
	}

	public void removeFromTradeItemCashPhies2(final TradeItemCashPhy obj)
	{
		this.removeToManyTarget("tradeItemCashPhies2", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeItemCashPhy> getTradeItemCashPhies2()
	{
		return (List<TradeItemCashPhy>) this.readProperty("tradeItemCashPhies2");
	}

	public void addToTradeItemComposites(final TradeItemComposite obj)
	{
		this.addToManyTarget("tradeItemComposites", obj, true);
	}

	public void removeFromTradeItemComposites(final TradeItemComposite obj)
	{
		this.removeToManyTarget("tradeItemComposites", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeItemComposite> getTradeItemComposites()
	{
		return (List<TradeItemComposite>) this.readProperty("tradeItemComposites");
	}

	public void addToTradeItemComposites1(final TradeItemComposite obj)
	{
		this.addToManyTarget("tradeItemComposites1", obj, true);
	}

	public void removeFromTradeItemComposites1(final TradeItemComposite obj)
	{
		this.removeToManyTarget("tradeItemComposites1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeItemComposite> getTradeItemComposites1()
	{
		return (List<TradeItemComposite>) this.readProperty("tradeItemComposites1");
	}

	public void addToTradeItemComposites2(final TradeItemComposite obj)
	{
		this.addToManyTarget("tradeItemComposites2", obj, true);
	}

	public void removeFromTradeItemComposites2(final TradeItemComposite obj)
	{
		this.removeToManyTarget("tradeItemComposites2", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeItemComposite> getTradeItemComposites2()
	{
		return (List<TradeItemComposite>) this.readProperty("tradeItemComposites2");
	}

	public void addToTradeItemComposites3(final TradeItemComposite obj)
	{
		this.addToManyTarget("tradeItemComposites3", obj, true);
	}

	public void removeFromTradeItemComposites3(final TradeItemComposite obj)
	{
		this.removeToManyTarget("tradeItemComposites3", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeItemComposite> getTradeItemComposites3()
	{
		return (List<TradeItemComposite>) this.readProperty("tradeItemComposites3");
	}

	public void addToTradeItemDists(final TradeItemDist obj)
	{
		this.addToManyTarget("tradeItemDists", obj, true);
	}

	public void removeFromTradeItemDists(final TradeItemDist obj)
	{
		this.removeToManyTarget("tradeItemDists", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeItemDist> getTradeItemDists()
	{
		return (List<TradeItemDist>) this.readProperty("tradeItemDists");
	}

	public void addToTradeItemDists1(final TradeItemDist obj)
	{
		this.addToManyTarget("tradeItemDists1", obj, true);
	}

	public void removeFromTradeItemDists1(final TradeItemDist obj)
	{
		this.removeToManyTarget("tradeItemDists1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeItemDist> getTradeItemDists1()
	{
		return (List<TradeItemDist>) this.readProperty("tradeItemDists1");
	}

	public void addToTradeItemDists2(final TradeItemDist obj)
	{
		this.addToManyTarget("tradeItemDists2", obj, true);
	}

	public void removeFromTradeItemDists2(final TradeItemDist obj)
	{
		this.removeToManyTarget("tradeItemDists2", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeItemDist> getTradeItemDists2()
	{
		return (List<TradeItemDist>) this.readProperty("tradeItemDists2");
	}

	public void addToTradeItemDists3(final TradeItemDist obj)
	{
		this.addToManyTarget("tradeItemDists3", obj, true);
	}

	public void removeFromTradeItemDists3(final TradeItemDist obj)
	{
		this.removeToManyTarget("tradeItemDists3", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeItemDist> getTradeItemDists3()
	{
		return (List<TradeItemDist>) this.readProperty("tradeItemDists3");
	}

	public void addToTradeItemDryPhies(final TradeItemDryPhy obj)
	{
		this.addToManyTarget("tradeItemDryPhies", obj, true);
	}

	public void removeFromTradeItemDryPhies(final TradeItemDryPhy obj)
	{
		this.removeToManyTarget("tradeItemDryPhies", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeItemDryPhy> getTradeItemDryPhies()
	{
		return (List<TradeItemDryPhy>) this.readProperty("tradeItemDryPhies");
	}

	public void addToTradeItemDryPhies1(final TradeItemDryPhy obj)
	{
		this.addToManyTarget("tradeItemDryPhies1", obj, true);
	}

	public void removeFromTradeItemDryPhies1(final TradeItemDryPhy obj)
	{
		this.removeToManyTarget("tradeItemDryPhies1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeItemDryPhy> getTradeItemDryPhies1()
	{
		return (List<TradeItemDryPhy>) this.readProperty("tradeItemDryPhies1");
	}

	public void addToTradeItemDryPhies2(final TradeItemDryPhy obj)
	{
		this.addToManyTarget("tradeItemDryPhies2", obj, true);
	}

	public void removeFromTradeItemDryPhies2(final TradeItemDryPhy obj)
	{
		this.removeToManyTarget("tradeItemDryPhies2", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeItemDryPhy> getTradeItemDryPhies2()
	{
		return (List<TradeItemDryPhy>) this.readProperty("tradeItemDryPhies2");
	}

	public void addToTradeItemDryPhies3(final TradeItemDryPhy obj)
	{
		this.addToManyTarget("tradeItemDryPhies3", obj, true);
	}

	public void removeFromTradeItemDryPhies3(final TradeItemDryPhy obj)
	{
		this.removeToManyTarget("tradeItemDryPhies3", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeItemDryPhy> getTradeItemDryPhies3()
	{
		return (List<TradeItemDryPhy>) this.readProperty("tradeItemDryPhies3");
	}

	public void addToTradeItemExchOpts(final TradeItemExchOpt obj)
	{
		this.addToManyTarget("tradeItemExchOpts", obj, true);
	}

	public void removeFromTradeItemExchOpts(final TradeItemExchOpt obj)
	{
		this.removeToManyTarget("tradeItemExchOpts", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeItemExchOpt> getTradeItemExchOpts()
	{
		return (List<TradeItemExchOpt>) this.readProperty("tradeItemExchOpts");
	}

	public void addToTradeItemExchOpts1(final TradeItemExchOpt obj)
	{
		this.addToManyTarget("tradeItemExchOpts1", obj, true);
	}

	public void removeFromTradeItemExchOpts1(final TradeItemExchOpt obj)
	{
		this.removeToManyTarget("tradeItemExchOpts1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeItemExchOpt> getTradeItemExchOpts1()
	{
		return (List<TradeItemExchOpt>) this.readProperty("tradeItemExchOpts1");
	}

	public void addToTradeItemExchOpts2(final TradeItemExchOpt obj)
	{
		this.addToManyTarget("tradeItemExchOpts2", obj, true);
	}

	public void removeFromTradeItemExchOpts2(final TradeItemExchOpt obj)
	{
		this.removeToManyTarget("tradeItemExchOpts2", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeItemExchOpt> getTradeItemExchOpts2()
	{
		return (List<TradeItemExchOpt>) this.readProperty("tradeItemExchOpts2");
	}

	public void addToTradeItemExchOpts3(final TradeItemExchOpt obj)
	{
		this.addToManyTarget("tradeItemExchOpts3", obj, true);
	}

	public void removeFromTradeItemExchOpts3(final TradeItemExchOpt obj)
	{
		this.removeToManyTarget("tradeItemExchOpts3", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeItemExchOpt> getTradeItemExchOpts3()
	{
		return (List<TradeItemExchOpt>) this.readProperty("tradeItemExchOpts3");
	}

	public void addToTradeItemFills(final TradeItemFill obj)
	{
		this.addToManyTarget("tradeItemFills", obj, true);
	}

	public void removeFromTradeItemFills(final TradeItemFill obj)
	{
		this.removeToManyTarget("tradeItemFills", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeItemFill> getTradeItemFills()
	{
		return (List<TradeItemFill>) this.readProperty("tradeItemFills");
	}

	public void addToTradeItemFills1(final TradeItemFill obj)
	{
		this.addToManyTarget("tradeItemFills1", obj, true);
	}

	public void removeFromTradeItemFills1(final TradeItemFill obj)
	{
		this.removeToManyTarget("tradeItemFills1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeItemFill> getTradeItemFills1()
	{
		return (List<TradeItemFill>) this.readProperty("tradeItemFills1");
	}

	public void addToTradeItemFuts(final TradeItemFut obj)
	{
		this.addToManyTarget("tradeItemFuts", obj, true);
	}

	public void removeFromTradeItemFuts(final TradeItemFut obj)
	{
		this.removeToManyTarget("tradeItemFuts", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeItemFut> getTradeItemFuts()
	{
		return (List<TradeItemFut>) this.readProperty("tradeItemFuts");
	}

	public void addToTradeItemFuts1(final TradeItemFut obj)
	{
		this.addToManyTarget("tradeItemFuts1", obj, true);
	}

	public void removeFromTradeItemFuts1(final TradeItemFut obj)
	{
		this.removeToManyTarget("tradeItemFuts1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeItemFut> getTradeItemFuts1()
	{
		return (List<TradeItemFut>) this.readProperty("tradeItemFuts1");
	}

	public void addToTradeItemOtcOpts(final TradeItemOtcOpt obj)
	{
		this.addToManyTarget("tradeItemOtcOpts", obj, true);
	}

	public void removeFromTradeItemOtcOpts(final TradeItemOtcOpt obj)
	{
		this.removeToManyTarget("tradeItemOtcOpts", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeItemOtcOpt> getTradeItemOtcOpts()
	{
		return (List<TradeItemOtcOpt>) this.readProperty("tradeItemOtcOpts");
	}

	public void addToTradeItemOtcOpts1(final TradeItemOtcOpt obj)
	{
		this.addToManyTarget("tradeItemOtcOpts1", obj, true);
	}

	public void removeFromTradeItemOtcOpts1(final TradeItemOtcOpt obj)
	{
		this.removeToManyTarget("tradeItemOtcOpts1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeItemOtcOpt> getTradeItemOtcOpts1()
	{
		return (List<TradeItemOtcOpt>) this.readProperty("tradeItemOtcOpts1");
	}

	public void addToTradeItemRins(final TradeItemRin obj)
	{
		this.addToManyTarget("tradeItemRins", obj, true);
	}

	public void removeFromTradeItemRins(final TradeItemRin obj)
	{
		this.removeToManyTarget("tradeItemRins", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeItemRin> getTradeItemRins()
	{
		return (List<TradeItemRin>) this.readProperty("tradeItemRins");
	}

	public void addToTradeItemStorages(final TradeItemStorage obj)
	{
		this.addToManyTarget("tradeItemStorages", obj, true);
	}

	public void removeFromTradeItemStorages(final TradeItemStorage obj)
	{
		this.removeToManyTarget("tradeItemStorages", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeItemStorage> getTradeItemStorages()
	{
		return (List<TradeItemStorage>) this.readProperty("tradeItemStorages");
	}

	public void addToTradeItemStorages1(final TradeItemStorage obj)
	{
		this.addToManyTarget("tradeItemStorages1", obj, true);
	}

	public void removeFromTradeItemStorages1(final TradeItemStorage obj)
	{
		this.removeToManyTarget("tradeItemStorages1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeItemStorage> getTradeItemStorages1()
	{
		return (List<TradeItemStorage>) this.readProperty("tradeItemStorages1");
	}

	public void addToTradeItemStorages2(final TradeItemStorage obj)
	{
		this.addToManyTarget("tradeItemStorages2", obj, true);
	}

	public void removeFromTradeItemStorages2(final TradeItemStorage obj)
	{
		this.removeToManyTarget("tradeItemStorages2", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeItemStorage> getTradeItemStorages2()
	{
		return (List<TradeItemStorage>) this.readProperty("tradeItemStorages2");
	}

	public void addToTradeItemStorages3(final TradeItemStorage obj)
	{
		this.addToManyTarget("tradeItemStorages3", obj, true);
	}

	public void removeFromTradeItemStorages3(final TradeItemStorage obj)
	{
		this.removeToManyTarget("tradeItemStorages3", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeItemStorage> getTradeItemStorages3()
	{
		return (List<TradeItemStorage>) this.readProperty("tradeItemStorages3");
	}

	public void addToTradeItemTransports(final TradeItemTransport obj)
	{
		this.addToManyTarget("tradeItemTransports", obj, true);
	}

	public void removeFromTradeItemTransports(final TradeItemTransport obj)
	{
		this.removeToManyTarget("tradeItemTransports", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeItemTransport> getTradeItemTransports()
	{
		return (List<TradeItemTransport>) this.readProperty("tradeItemTransports");
	}

	public void addToTradeItemTransports1(final TradeItemTransport obj)
	{
		this.addToManyTarget("tradeItemTransports1", obj, true);
	}

	public void removeFromTradeItemTransports1(final TradeItemTransport obj)
	{
		this.removeToManyTarget("tradeItemTransports1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeItemTransport> getTradeItemTransports1()
	{
		return (List<TradeItemTransport>) this.readProperty("tradeItemTransports1");
	}

	public void addToTradeItemTransports2(final TradeItemTransport obj)
	{
		this.addToManyTarget("tradeItemTransports2", obj, true);
	}

	public void removeFromTradeItemTransports2(final TradeItemTransport obj)
	{
		this.removeToManyTarget("tradeItemTransports2", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeItemTransport> getTradeItemTransports2()
	{
		return (List<TradeItemTransport>) this.readProperty("tradeItemTransports2");
	}

	public void addToTradeItemTransports3(final TradeItemTransport obj)
	{
		this.addToManyTarget("tradeItemTransports3", obj, true);
	}

	public void removeFromTradeItemTransports3(final TradeItemTransport obj)
	{
		this.removeToManyTarget("tradeItemTransports3", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeItemTransport> getTradeItemTransports3()
	{
		return (List<TradeItemTransport>) this.readProperty("tradeItemTransports3");
	}

	public void addToTradeItemTransports4(final TradeItemTransport obj)
	{
		this.addToManyTarget("tradeItemTransports4", obj, true);
	}

	public void removeFromTradeItemTransports4(final TradeItemTransport obj)
	{
		this.removeToManyTarget("tradeItemTransports4", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeItemTransport> getTradeItemTransports4()
	{
		return (List<TradeItemTransport>) this.readProperty("tradeItemTransports4");
	}

	public void addToTradeItemTransports5(final TradeItemTransport obj)
	{
		this.addToManyTarget("tradeItemTransports5", obj, true);
	}

	public void removeFromTradeItemTransports5(final TradeItemTransport obj)
	{
		this.removeToManyTarget("tradeItemTransports5", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeItemTransport> getTradeItemTransports5()
	{
		return (List<TradeItemTransport>) this.readProperty("tradeItemTransports5");
	}

	public void addToTradeItemTransports6(final TradeItemTransport obj)
	{
		this.addToManyTarget("tradeItemTransports6", obj, true);
	}

	public void removeFromTradeItemTransports6(final TradeItemTransport obj)
	{
		this.removeToManyTarget("tradeItemTransports6", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeItemTransport> getTradeItemTransports6()
	{
		return (List<TradeItemTransport>) this.readProperty("tradeItemTransports6");
	}

	public void addToTradeItemTransports7(final TradeItemTransport obj)
	{
		this.addToManyTarget("tradeItemTransports7", obj, true);
	}

	public void removeFromTradeItemTransports7(final TradeItemTransport obj)
	{
		this.removeToManyTarget("tradeItemTransports7", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeItemTransport> getTradeItemTransports7()
	{
		return (List<TradeItemTransport>) this.readProperty("tradeItemTransports7");
	}

	public void addToTradeItemWetPhies(final TradeItemWetPhy obj)
	{
		this.addToManyTarget("tradeItemWetPhies", obj, true);
	}

	public void removeFromTradeItemWetPhies(final TradeItemWetPhy obj)
	{
		this.removeToManyTarget("tradeItemWetPhies", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeItemWetPhy> getTradeItemWetPhies()
	{
		return (List<TradeItemWetPhy>) this.readProperty("tradeItemWetPhies");
	}

	public void addToTradeItemWetPhies1(final TradeItemWetPhy obj)
	{
		this.addToManyTarget("tradeItemWetPhies1", obj, true);
	}

	public void removeFromTradeItemWetPhies1(final TradeItemWetPhy obj)
	{
		this.removeToManyTarget("tradeItemWetPhies1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeItemWetPhy> getTradeItemWetPhies1()
	{
		return (List<TradeItemWetPhy>) this.readProperty("tradeItemWetPhies1");
	}

	public void addToTradeItemWetPhies2(final TradeItemWetPhy obj)
	{
		this.addToManyTarget("tradeItemWetPhies2", obj, true);
	}

	public void removeFromTradeItemWetPhies2(final TradeItemWetPhy obj)
	{
		this.removeToManyTarget("tradeItemWetPhies2", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeItemWetPhy> getTradeItemWetPhies2()
	{
		return (List<TradeItemWetPhy>) this.readProperty("tradeItemWetPhies2");
	}

	public void addToTradeItemWetPhies3(final TradeItemWetPhy obj)
	{
		this.addToManyTarget("tradeItemWetPhies3", obj, true);
	}

	public void removeFromTradeItemWetPhies3(final TradeItemWetPhy obj)
	{
		this.removeToManyTarget("tradeItemWetPhies3", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeItemWetPhy> getTradeItemWetPhies3()
	{
		return (List<TradeItemWetPhy>) this.readProperty("tradeItemWetPhies3");
	}

	public void addToTradeItems(final TradeItem obj)
	{
		this.addToManyTarget("tradeItems", obj, true);
	}

	public void removeFromTradeItems(final TradeItem obj)
	{
		this.removeToManyTarget("tradeItems", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeItem> getTradeItems()
	{
		return (List<TradeItem>) this.readProperty("tradeItems");
	}

	public void addToTradeItems1(final TradeItem obj)
	{
		this.addToManyTarget("tradeItems1", obj, true);
	}

	public void removeFromTradeItems1(final TradeItem obj)
	{
		this.removeToManyTarget("tradeItems1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeItem> getTradeItems1()
	{
		return (List<TradeItem>) this.readProperty("tradeItems1");
	}

	public void addToTradeItems2(final TradeItem obj)
	{
		this.addToManyTarget("tradeItems2", obj, true);
	}

	public void removeFromTradeItems2(final TradeItem obj)
	{
		this.removeToManyTarget("tradeItems2", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeItem> getTradeItems2()
	{
		return (List<TradeItem>) this.readProperty("tradeItems2");
	}

	public void addToTradeItems3(final TradeItem obj)
	{
		this.addToManyTarget("tradeItems3", obj, true);
	}

	public void removeFromTradeItems3(final TradeItem obj)
	{
		this.removeToManyTarget("tradeItems3", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeItem> getTradeItems3()
	{
		return (List<TradeItem>) this.readProperty("tradeItems3");
	}

	public void addToTradeItems4(final TradeItem obj)
	{
		this.addToManyTarget("tradeItems4", obj, true);
	}

	public void removeFromTradeItems4(final TradeItem obj)
	{
		this.removeToManyTarget("tradeItems4", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeItem> getTradeItems4()
	{
		return (List<TradeItem>) this.readProperty("tradeItems4");
	}

	public void addToTradeItems5(final TradeItem obj)
	{
		this.addToManyTarget("tradeItems5", obj, true);
	}

	public void removeFromTradeItems5(final TradeItem obj)
	{
		this.removeToManyTarget("tradeItems5", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeItem> getTradeItems5()
	{
		return (List<TradeItem>) this.readProperty("tradeItems5");
	}

	public void addToTradeOrderBals(final TradeOrderBal obj)
	{
		this.addToManyTarget("tradeOrderBals", obj, true);
	}

	public void removeFromTradeOrderBals(final TradeOrderBal obj)
	{
		this.removeToManyTarget("tradeOrderBals", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeOrderBal> getTradeOrderBals()
	{
		return (List<TradeOrderBal>) this.readProperty("tradeOrderBals");
	}

	public void addToTradeOrderBals1(final TradeOrderBal obj)
	{
		this.addToManyTarget("tradeOrderBals1", obj, true);
	}

	public void removeFromTradeOrderBals1(final TradeOrderBal obj)
	{
		this.removeToManyTarget("tradeOrderBals1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeOrderBal> getTradeOrderBals1()
	{
		return (List<TradeOrderBal>) this.readProperty("tradeOrderBals1");
	}

	public void addToTradeOrderBunkers(final TradeOrderBunker obj)
	{
		this.addToManyTarget("tradeOrderBunkers", obj, true);
	}

	public void removeFromTradeOrderBunkers(final TradeOrderBunker obj)
	{
		this.removeToManyTarget("tradeOrderBunkers", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeOrderBunker> getTradeOrderBunkers()
	{
		return (List<TradeOrderBunker>) this.readProperty("tradeOrderBunkers");
	}

	public void addToTransportCostSchedules(final TransportCostSchedule obj)
	{
		this.addToManyTarget("transportCostSchedules", obj, true);
	}

	public void removeFromTransportCostSchedules(final TransportCostSchedule obj)
	{
		this.removeToManyTarget("transportCostSchedules", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TransportCostSchedule> getTransportCostSchedules()
	{
		return (List<TransportCostSchedule>) this.readProperty("transportCostSchedules");
	}

	public void addToTransportCostSchedules1(final TransportCostSchedule obj)
	{
		this.addToManyTarget("transportCostSchedules1", obj, true);
	}

	public void removeFromTransportCostSchedules1(final TransportCostSchedule obj)
	{
		this.removeToManyTarget("transportCostSchedules1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TransportCostSchedule> getTransportCostSchedules1()
	{
		return (List<TransportCostSchedule>) this.readProperty("transportCostSchedules1");
	}

	public void setUom(final Uom uom)
	{
		this.setToOneTarget("uom", uom, true);
	}

	public Uom getUom()
	{
		return (Uom) this.readProperty("uom");
	}

	public void addToUomConversions(final UomConversion obj)
	{
		this.addToManyTarget("uomConversions", obj, true);
	}

	public void removeFromUomConversions(final UomConversion obj)
	{
		this.removeToManyTarget("uomConversions", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<UomConversion> getUomConversions()
	{
		return (List<UomConversion>) this.readProperty("uomConversions");
	}

	public void addToUomConversions1(final UomConversion obj)
	{
		this.addToManyTarget("uomConversions1", obj, true);
	}

	public void removeFromUomConversions1(final UomConversion obj)
	{
		this.removeToManyTarget("uomConversions1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<UomConversion> getUomConversions1()
	{
		return (List<UomConversion>) this.readProperty("uomConversions1");
	}

	public void addToUoms(final Uom obj)
	{
		this.addToManyTarget("uoms", obj, true);
	}

	public void removeFromUoms(final Uom obj)
	{
		this.removeToManyTarget("uoms", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<Uom> getUoms()
	{
		return (List<Uom>) this.readProperty("uoms");
	}

	public void addToVesselDistMtms(final VesselDistMtm obj)
	{
		this.addToManyTarget("vesselDistMtms", obj, true);
	}

	public void removeFromVesselDistMtms(final VesselDistMtm obj)
	{
		this.removeToManyTarget("vesselDistMtms", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<VesselDistMtm> getVesselDistMtms()
	{
		return (List<VesselDistMtm>) this.readProperty("vesselDistMtms");
	}

	public void addToVesselDists(final VesselDist obj)
	{
		this.addToManyTarget("vesselDists", obj, true);
	}

	public void removeFromVesselDists(final VesselDist obj)
	{
		this.removeToManyTarget("vesselDists", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<VesselDist> getVesselDists()
	{
		return (List<VesselDist>) this.readProperty("vesselDists");
	}

	public void addToVesselDists1(final VesselDist obj)
	{
		this.addToManyTarget("vesselDists1", obj, true);
	}

	public void removeFromVesselDists1(final VesselDist obj)
	{
		this.removeToManyTarget("vesselDists1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<VesselDist> getVesselDists1()
	{
		return (List<VesselDist>) this.readProperty("vesselDists1");
	}

	public void addToVoucherCosts(final VoucherCost obj)
	{
		this.addToManyTarget("voucherCosts", obj, true);
	}

	public void removeFromVoucherCosts(final VoucherCost obj)
	{
		this.removeToManyTarget("voucherCosts", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<VoucherCost> getVoucherCosts()
	{
		return (List<VoucherCost>) this.readProperty("voucherCosts");
	}

	public void addToWbContractVesselss(final WbContractVessels obj)
	{
		this.addToManyTarget("wbContractVesselss", obj, true);
	}

	public void removeFromWbContractVesselss(final WbContractVessels obj)
	{
		this.removeToManyTarget("wbContractVesselss", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<WbContractVessels> getWbContractVesselss()
	{
		return (List<WbContractVessels>) this.readProperty("wbContractVesselss");
	}

	public void addToWbContractVesselss1(final WbContractVessels obj)
	{
		this.addToManyTarget("wbContractVesselss1", obj, true);
	}

	public void removeFromWbContractVesselss1(final WbContractVessels obj)
	{
		this.removeToManyTarget("wbContractVesselss1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<WbContractVessels> getWbContractVesselss1()
	{
		return (List<WbContractVessels>) this.readProperty("wbContractVesselss1");
	}

	public void addToWbContractVesselss2(final WbContractVessels obj)
	{
		this.addToManyTarget("wbContractVesselss2", obj, true);
	}

	public void removeFromWbContractVesselss2(final WbContractVessels obj)
	{
		this.removeToManyTarget("wbContractVesselss2", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<WbContractVessels> getWbContractVesselss2()
	{
		return (List<WbContractVessels>) this.readProperty("wbContractVesselss2");
	}

	public void addToWbContractVesselss3(final WbContractVessels obj)
	{
		this.addToManyTarget("wbContractVesselss3", obj, true);
	}

	public void removeFromWbContractVesselss3(final WbContractVessels obj)
	{
		this.removeToManyTarget("wbContractVesselss3", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<WbContractVessels> getWbContractVesselss3()
	{
		return (List<WbContractVessels>) this.readProperty("wbContractVesselss3");
	}

	public void addToWbContractVesselss4(final WbContractVessels obj)
	{
		this.addToManyTarget("wbContractVesselss4", obj, true);
	}

	public void removeFromWbContractVesselss4(final WbContractVessels obj)
	{
		this.removeToManyTarget("wbContractVesselss4", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<WbContractVessels> getWbContractVesselss4()
	{
		return (List<WbContractVessels>) this.readProperty("wbContractVesselss4");
	}

	public void addToWbContractVesselss5(final WbContractVessels obj)
	{
		this.addToManyTarget("wbContractVesselss5", obj, true);
	}

	public void removeFromWbContractVesselss5(final WbContractVessels obj)
	{
		this.removeToManyTarget("wbContractVesselss5", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<WbContractVessels> getWbContractVesselss5()
	{
		return (List<WbContractVessels>) this.readProperty("wbContractVesselss5");
	}

}
