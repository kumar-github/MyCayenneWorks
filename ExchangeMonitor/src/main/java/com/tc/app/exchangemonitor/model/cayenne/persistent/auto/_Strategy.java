package com.tc.app.exchangemonitor.model.cayenne.persistent.auto;

import org.apache.cayenne.CayenneDataObject;
import org.apache.cayenne.exp.Property;

import com.tc.app.exchangemonitor.model.cayenne.persistent.Commodity;
import com.tc.app.exchangemonitor.model.cayenne.persistent.IctsUser;
import com.tc.app.exchangemonitor.model.cayenne.persistent.Market;

/**
 * Class _Strategy was generated by Cayenne.
 * It is probably a good idea to avoid changing this class manually,
 * since it may be overwritten next time code is regenerated.
 * If you need to make any customizations, please use subclass.
 */
public abstract class _Strategy extends CayenneDataObject
{

	private static final long serialVersionUID = 1L;

	public static final String CMDTY_CODE_PK_COLUMN = "cmdty_code";
	public static final String MKT_CODE_PK_COLUMN = "mkt_code";
	public static final String PORT_NUM_PK_COLUMN = "port_num";
	public static final String STRATEGY_NAME_PK_COLUMN = "strategy_name";
	public static final String TRADING_PRD_PK_COLUMN = "trading_prd";
	public static final String USER_INIT_PK_COLUMN = "user_init";

	public static final Property<Integer> TRANS_ID = new Property<Integer>("transId");
	public static final Property<Commodity> COMMODITY = new Property<Commodity>("commodity");
	public static final Property<IctsUser> ICTS_USER = new Property<IctsUser>("ictsUser");
	public static final Property<Market> MARKET = new Property<Market>("market");

	public void setTransId(Integer transId)
	{
		writeProperty("transId", transId);
	}

	public Integer getTransId()
	{
		return (Integer) readProperty("transId");
	}

	public void setCommodity(Commodity commodity)
	{
		setToOneTarget("commodity", commodity, true);
	}

	public Commodity getCommodity()
	{
		return (Commodity) readProperty("commodity");
	}

	public void setIctsUser(IctsUser ictsUser)
	{
		setToOneTarget("ictsUser", ictsUser, true);
	}

	public IctsUser getIctsUser()
	{
		return (IctsUser) readProperty("ictsUser");
	}

	public void setMarket(Market market)
	{
		setToOneTarget("market", market, true);
	}

	public Market getMarket()
	{
		return (Market) readProperty("market");
	}

}
