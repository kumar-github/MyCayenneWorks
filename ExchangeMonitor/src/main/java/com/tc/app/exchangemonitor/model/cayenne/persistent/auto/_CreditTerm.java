package com.tc.app.exchangemonitor.model.cayenne.persistent.auto;

import java.util.List;

import org.apache.cayenne.CayenneDataObject;
import org.apache.cayenne.exp.Property;

import com.tc.app.exchangemonitor.model.cayenne.persistent.CreditTermGroup;
import com.tc.app.exchangemonitor.model.cayenne.persistent.AccountCreditInfo;
import com.tc.app.exchangemonitor.model.cayenne.persistent.AccountCreditLimit;
import com.tc.app.exchangemonitor.model.cayenne.persistent.AcctBcOtCrinfo;
import com.tc.app.exchangemonitor.model.cayenne.persistent.AcctBookcompCrinfo;
import com.tc.app.exchangemonitor.model.cayenne.persistent.AllocationItem;
import com.tc.app.exchangemonitor.model.cayenne.persistent.Cost;
import com.tc.app.exchangemonitor.model.cayenne.persistent.Trade;
import com.tc.app.exchangemonitor.model.cayenne.persistent.TradeItemBunker;
import com.tc.app.exchangemonitor.model.cayenne.persistent.TradeItemCashPhy;
import com.tc.app.exchangemonitor.model.cayenne.persistent.TradeItemComposite;
import com.tc.app.exchangemonitor.model.cayenne.persistent.TradeItemCurr;
import com.tc.app.exchangemonitor.model.cayenne.persistent.TradeItemDryPhy;
import com.tc.app.exchangemonitor.model.cayenne.persistent.TradeItemOtcOpt;
import com.tc.app.exchangemonitor.model.cayenne.persistent.TradeItemStorage;
import com.tc.app.exchangemonitor.model.cayenne.persistent.TradeItemTransport;
import com.tc.app.exchangemonitor.model.cayenne.persistent.TradeItemWetPhy;
import com.tc.app.exchangemonitor.model.cayenne.persistent.Voucher;

/**
 * Class _CreditTerm was generated by Cayenne.
 * It is probably a good idea to avoid changing this class manually,
 * since it may be overwritten next time code is regenerated.
 * If you need to make any customizations, please use subclass.
 */
public abstract class _CreditTerm extends CayenneDataObject
{

	private static final long serialVersionUID = 1L;

	public static final String CREDIT_TERM_CODE_PK_COLUMN = "credit_term_code";

	public static final Property<String> CREDIT_SECURE_IND = new Property<>("creditSecureInd");
	public static final Property<String> CREDIT_TERM_CONTR_DESC = new Property<>("creditTermContrDesc");
	public static final Property<String> CREDIT_TERM_DESC = new Property<>("creditTermDesc");
	public static final Property<String> DOC_TYPE_CODE = new Property<>("docTypeCode");
	public static final Property<Integer> TRANS_ID = new Property<>("transId");
	public static final Property<List<AccountCreditInfo>> ACCOUNT_CREDIT_INFOES = new Property<>("accountCreditInfoes");
	public static final Property<List<AccountCreditInfo>> ACCOUNT_CREDIT_INFOES1 = new Property<>("accountCreditInfoes1");
	public static final Property<List<AccountCreditInfo>> ACCOUNT_CREDIT_INFOES2 = new Property<>("accountCreditInfoes2");
	public static final Property<List<AccountCreditLimit>> ACCOUNT_CREDIT_LIMITS = new Property<>("accountCreditLimits");
	public static final Property<List<AccountCreditLimit>> ACCOUNT_CREDIT_LIMITS1 = new Property<>("accountCreditLimits1");
	public static final Property<List<AcctBcOtCrinfo>> ACCT_BC_OT_CRINFOES = new Property<>("acctBcOtCrinfoes");
	public static final Property<List<AcctBookcompCrinfo>> ACCT_BOOKCOMP_CRINFOES = new Property<>("acctBookcompCrinfoes");
	public static final Property<List<AllocationItem>> ALLOCATION_ITEMS = new Property<>("allocationItems");
	public static final Property<List<Cost>> COSTS = new Property<>("costs");
	public static final Property<List<CreditTermGroup>> CREDIT_TERM_GROUPS = new Property<>("creditTermGroups");
	public static final Property<List<TradeItemBunker>> TRADE_ITEM_BUNKERS = new Property<>("tradeItemBunkers");
	public static final Property<List<TradeItemCashPhy>> TRADE_ITEM_CASH_PHIES = new Property<>("tradeItemCashPhies");
	public static final Property<List<TradeItemComposite>> TRADE_ITEM_COMPOSITES = new Property<>("tradeItemComposites");
	public static final Property<List<TradeItemCurr>> TRADE_ITEM_CURRS = new Property<>("tradeItemCurrs");
	public static final Property<List<TradeItemDryPhy>> TRADE_ITEM_DRY_PHIES = new Property<>("tradeItemDryPhies");
	public static final Property<List<TradeItemOtcOpt>> TRADE_ITEM_OTC_OPTS = new Property<>("tradeItemOtcOpts");
	public static final Property<List<TradeItemStorage>> TRADE_ITEM_STORAGES = new Property<>("tradeItemStorages");
	public static final Property<List<TradeItemTransport>> TRADE_ITEM_TRANSPORTS = new Property<>("tradeItemTransports");
	public static final Property<List<TradeItemWetPhy>> TRADE_ITEM_WET_PHIES = new Property<>("tradeItemWetPhies");
	public static final Property<List<Trade>> TRADES = new Property<>("trades");
	public static final Property<List<Voucher>> VOUCHERS = new Property<>("vouchers");

	public void setCreditSecureInd(final String creditSecureInd)
	{
		this.writeProperty("creditSecureInd", creditSecureInd);
	}

	public String getCreditSecureInd()
	{
		return (String) this.readProperty("creditSecureInd");
	}

	public void setCreditTermContrDesc(final String creditTermContrDesc)
	{
		this.writeProperty("creditTermContrDesc", creditTermContrDesc);
	}

	public String getCreditTermContrDesc()
	{
		return (String) this.readProperty("creditTermContrDesc");
	}

	public void setCreditTermDesc(final String creditTermDesc)
	{
		this.writeProperty("creditTermDesc", creditTermDesc);
	}

	public String getCreditTermDesc()
	{
		return (String) this.readProperty("creditTermDesc");
	}

	public void setDocTypeCode(final String docTypeCode)
	{
		this.writeProperty("docTypeCode", docTypeCode);
	}

	public String getDocTypeCode()
	{
		return (String) this.readProperty("docTypeCode");
	}

	public void setTransId(final Integer transId)
	{
		this.writeProperty("transId", transId);
	}

	public Integer getTransId()
	{
		return (Integer) this.readProperty("transId");
	}

	public void addToAccountCreditInfoes(final AccountCreditInfo obj)
	{
		this.addToManyTarget("accountCreditInfoes", obj, true);
	}

	public void removeFromAccountCreditInfoes(final AccountCreditInfo obj)
	{
		this.removeToManyTarget("accountCreditInfoes", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<AccountCreditInfo> getAccountCreditInfoes()
	{
		return (List<AccountCreditInfo>) this.readProperty("accountCreditInfoes");
	}

	public void addToAccountCreditInfoes1(final AccountCreditInfo obj)
	{
		this.addToManyTarget("accountCreditInfoes1", obj, true);
	}

	public void removeFromAccountCreditInfoes1(final AccountCreditInfo obj)
	{
		this.removeToManyTarget("accountCreditInfoes1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<AccountCreditInfo> getAccountCreditInfoes1()
	{
		return (List<AccountCreditInfo>) this.readProperty("accountCreditInfoes1");
	}

	public void addToAccountCreditInfoes2(final AccountCreditInfo obj)
	{
		this.addToManyTarget("accountCreditInfoes2", obj, true);
	}

	public void removeFromAccountCreditInfoes2(final AccountCreditInfo obj)
	{
		this.removeToManyTarget("accountCreditInfoes2", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<AccountCreditInfo> getAccountCreditInfoes2()
	{
		return (List<AccountCreditInfo>) this.readProperty("accountCreditInfoes2");
	}

	public void addToAccountCreditLimits(final AccountCreditLimit obj)
	{
		this.addToManyTarget("accountCreditLimits", obj, true);
	}

	public void removeFromAccountCreditLimits(final AccountCreditLimit obj)
	{
		this.removeToManyTarget("accountCreditLimits", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<AccountCreditLimit> getAccountCreditLimits()
	{
		return (List<AccountCreditLimit>) this.readProperty("accountCreditLimits");
	}

	public void addToAccountCreditLimits1(final AccountCreditLimit obj)
	{
		this.addToManyTarget("accountCreditLimits1", obj, true);
	}

	public void removeFromAccountCreditLimits1(final AccountCreditLimit obj)
	{
		this.removeToManyTarget("accountCreditLimits1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<AccountCreditLimit> getAccountCreditLimits1()
	{
		return (List<AccountCreditLimit>) this.readProperty("accountCreditLimits1");
	}

	public void addToAcctBcOtCrinfoes(final AcctBcOtCrinfo obj)
	{
		this.addToManyTarget("acctBcOtCrinfoes", obj, true);
	}

	public void removeFromAcctBcOtCrinfoes(final AcctBcOtCrinfo obj)
	{
		this.removeToManyTarget("acctBcOtCrinfoes", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<AcctBcOtCrinfo> getAcctBcOtCrinfoes()
	{
		return (List<AcctBcOtCrinfo>) this.readProperty("acctBcOtCrinfoes");
	}

	public void addToAcctBookcompCrinfoes(final AcctBookcompCrinfo obj)
	{
		this.addToManyTarget("acctBookcompCrinfoes", obj, true);
	}

	public void removeFromAcctBookcompCrinfoes(final AcctBookcompCrinfo obj)
	{
		this.removeToManyTarget("acctBookcompCrinfoes", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<AcctBookcompCrinfo> getAcctBookcompCrinfoes()
	{
		return (List<AcctBookcompCrinfo>) this.readProperty("acctBookcompCrinfoes");
	}

	public void addToAllocationItems(final AllocationItem obj)
	{
		this.addToManyTarget("allocationItems", obj, true);
	}

	public void removeFromAllocationItems(final AllocationItem obj)
	{
		this.removeToManyTarget("allocationItems", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<AllocationItem> getAllocationItems()
	{
		return (List<AllocationItem>) this.readProperty("allocationItems");
	}

	public void addToCosts(final Cost obj)
	{
		this.addToManyTarget("costs", obj, true);
	}

	public void removeFromCosts(final Cost obj)
	{
		this.removeToManyTarget("costs", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<Cost> getCosts()
	{
		return (List<Cost>) this.readProperty("costs");
	}

	public void addToCreditTermGroups(final CreditTermGroup obj)
	{
		this.addToManyTarget("creditTermGroups", obj, true);
	}

	public void removeFromCreditTermGroups(final CreditTermGroup obj)
	{
		this.removeToManyTarget("creditTermGroups", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<CreditTermGroup> getCreditTermGroups()
	{
		return (List<CreditTermGroup>) this.readProperty("creditTermGroups");
	}

	public void addToTradeItemBunkers(final TradeItemBunker obj)
	{
		this.addToManyTarget("tradeItemBunkers", obj, true);
	}

	public void removeFromTradeItemBunkers(final TradeItemBunker obj)
	{
		this.removeToManyTarget("tradeItemBunkers", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeItemBunker> getTradeItemBunkers()
	{
		return (List<TradeItemBunker>) this.readProperty("tradeItemBunkers");
	}

	public void addToTradeItemCashPhies(final TradeItemCashPhy obj)
	{
		this.addToManyTarget("tradeItemCashPhies", obj, true);
	}

	public void removeFromTradeItemCashPhies(final TradeItemCashPhy obj)
	{
		this.removeToManyTarget("tradeItemCashPhies", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeItemCashPhy> getTradeItemCashPhies()
	{
		return (List<TradeItemCashPhy>) this.readProperty("tradeItemCashPhies");
	}

	public void addToTradeItemComposites(final TradeItemComposite obj)
	{
		this.addToManyTarget("tradeItemComposites", obj, true);
	}

	public void removeFromTradeItemComposites(final TradeItemComposite obj)
	{
		this.removeToManyTarget("tradeItemComposites", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeItemComposite> getTradeItemComposites()
	{
		return (List<TradeItemComposite>) this.readProperty("tradeItemComposites");
	}

	public void addToTradeItemCurrs(final TradeItemCurr obj)
	{
		this.addToManyTarget("tradeItemCurrs", obj, true);
	}

	public void removeFromTradeItemCurrs(final TradeItemCurr obj)
	{
		this.removeToManyTarget("tradeItemCurrs", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeItemCurr> getTradeItemCurrs()
	{
		return (List<TradeItemCurr>) this.readProperty("tradeItemCurrs");
	}

	public void addToTradeItemDryPhies(final TradeItemDryPhy obj)
	{
		this.addToManyTarget("tradeItemDryPhies", obj, true);
	}

	public void removeFromTradeItemDryPhies(final TradeItemDryPhy obj)
	{
		this.removeToManyTarget("tradeItemDryPhies", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeItemDryPhy> getTradeItemDryPhies()
	{
		return (List<TradeItemDryPhy>) this.readProperty("tradeItemDryPhies");
	}

	public void addToTradeItemOtcOpts(final TradeItemOtcOpt obj)
	{
		this.addToManyTarget("tradeItemOtcOpts", obj, true);
	}

	public void removeFromTradeItemOtcOpts(final TradeItemOtcOpt obj)
	{
		this.removeToManyTarget("tradeItemOtcOpts", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeItemOtcOpt> getTradeItemOtcOpts()
	{
		return (List<TradeItemOtcOpt>) this.readProperty("tradeItemOtcOpts");
	}

	public void addToTradeItemStorages(final TradeItemStorage obj)
	{
		this.addToManyTarget("tradeItemStorages", obj, true);
	}

	public void removeFromTradeItemStorages(final TradeItemStorage obj)
	{
		this.removeToManyTarget("tradeItemStorages", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeItemStorage> getTradeItemStorages()
	{
		return (List<TradeItemStorage>) this.readProperty("tradeItemStorages");
	}

	public void addToTradeItemTransports(final TradeItemTransport obj)
	{
		this.addToManyTarget("tradeItemTransports", obj, true);
	}

	public void removeFromTradeItemTransports(final TradeItemTransport obj)
	{
		this.removeToManyTarget("tradeItemTransports", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeItemTransport> getTradeItemTransports()
	{
		return (List<TradeItemTransport>) this.readProperty("tradeItemTransports");
	}

	public void addToTradeItemWetPhies(final TradeItemWetPhy obj)
	{
		this.addToManyTarget("tradeItemWetPhies", obj, true);
	}

	public void removeFromTradeItemWetPhies(final TradeItemWetPhy obj)
	{
		this.removeToManyTarget("tradeItemWetPhies", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeItemWetPhy> getTradeItemWetPhies()
	{
		return (List<TradeItemWetPhy>) this.readProperty("tradeItemWetPhies");
	}

	public void addToTrades(final Trade obj)
	{
		this.addToManyTarget("trades", obj, true);
	}

	public void removeFromTrades(final Trade obj)
	{
		this.removeToManyTarget("trades", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<Trade> getTrades()
	{
		return (List<Trade>) this.readProperty("trades");
	}

	public void addToVouchers(final Voucher obj)
	{
		this.addToManyTarget("vouchers", obj, true);
	}

	public void removeFromVouchers(final Voucher obj)
	{
		this.removeToManyTarget("vouchers", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<Voucher> getVouchers()
	{
		return (List<Voucher>) this.readProperty("vouchers");
	}

}
