package com.tc.app.exchangemonitor.model.cayenne.persistent.auto;

import java.util.Date;
import java.util.List;

import org.apache.cayenne.CayenneDataObject;
import org.apache.cayenne.exp.Property;

import com.tc.app.exchangemonitor.model.cayenne.persistent.TiFeedSchedule;
import com.tc.app.exchangemonitor.model.cayenne.persistent.TiInboundDataXml;

/**
 * Class _TiFeedDefinition was generated by Cayenne.
 * It is probably a good idea to avoid changing this class manually,
 * since it may be overwritten next time code is regenerated.
 * If you need to make any customizations, please use subclass.
 */
public abstract class _TiFeedDefinition extends CayenneDataObject
{

	private static final long serialVersionUID = 1L;

	public static final String OID_PK_COLUMN = "oid";

	public static final Property<Date> ETL_TIMESTAMP = new Property<Date>("etlTimestamp");
	public static final Property<String> FEED_NAME = new Property<String>("feedName");
	public static final Property<List<TiFeedSchedule>> TI_FEED_SCHEDULES = new Property<List<TiFeedSchedule>>("tiFeedSchedules");
	public static final Property<List<TiInboundDataXml>> TI_INBOUND_DATA_XMLS = new Property<List<TiInboundDataXml>>("tiInboundDataXmls");

	public void setEtlTimestamp(Date etlTimestamp)
	{
		writeProperty("etlTimestamp", etlTimestamp);
	}

	public Date getEtlTimestamp()
	{
		return (Date) readProperty("etlTimestamp");
	}

	public void setFeedName(String feedName)
	{
		writeProperty("feedName", feedName);
	}

	public String getFeedName()
	{
		return (String) readProperty("feedName");
	}

	public void addToTiFeedSchedules(TiFeedSchedule obj)
	{
		addToManyTarget("tiFeedSchedules", obj, true);
	}

	public void removeFromTiFeedSchedules(TiFeedSchedule obj)
	{
		removeToManyTarget("tiFeedSchedules", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TiFeedSchedule> getTiFeedSchedules()
	{
		return (List<TiFeedSchedule>) readProperty("tiFeedSchedules");
	}

	public void addToTiInboundDataXmls(TiInboundDataXml obj)
	{
		addToManyTarget("tiInboundDataXmls", obj, true);
	}

	public void removeFromTiInboundDataXmls(TiInboundDataXml obj)
	{
		removeToManyTarget("tiInboundDataXmls", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TiInboundDataXml> getTiInboundDataXmls()
	{
		return (List<TiInboundDataXml>) readProperty("tiInboundDataXmls");
	}

}
