package com.tc.app.exchangemonitor.model.cayenne.persistent.auto;

import org.apache.cayenne.CayenneDataObject;
import org.apache.cayenne.exp.Property;

import com.tc.app.exchangemonitor.model.cayenne.persistent.Commodity;

/**
 * Class _AllocationTransfer was generated by Cayenne.
 * It is probably a good idea to avoid changing this class manually,
 * since it may be overwritten next time code is regenerated.
 * If you need to make any customizations, please use subclass.
 */
public abstract class _AllocationTransfer extends CayenneDataObject
{

	private static final long serialVersionUID = 1L;

	public static final String SOURCE_ALLOC_ITEM_NUM_PK_COLUMN = "source_alloc_item_num";
	public static final String SOURCE_ALLOC_NUM_PK_COLUMN = "source_alloc_num";
	public static final String TARGET_ALLOC_ITEM_NUM_PK_COLUMN = "target_alloc_item_num";
	public static final String TARGET_ALLOC_NUM_PK_COLUMN = "target_alloc_num";

	public static final Property<Integer> SOURCE_INV_NUM = new Property<Integer>("sourceInvNum");
	public static final Property<Integer> SOURCE_INVBD_NUM = new Property<Integer>("sourceInvbdNum");
	public static final Property<Integer> TARGET_INV_NUM = new Property<Integer>("targetInvNum");
	public static final Property<Integer> TARGET_INVBD_NUM = new Property<Integer>("targetInvbdNum");
	public static final Property<Integer> TRANS_ID = new Property<Integer>("transId");
	public static final Property<Double> TRANSFER_PRICE = new Property<Double>("transferPrice");
	public static final Property<String> TRANSFER_PRICE_CURR_CODE = new Property<String>("transferPriceCurrCode");
	public static final Property<Double> TRANSFER_PRICE_CURRENCY_RATE = new Property<Double>("transferPriceCurrencyRate");
	public static final Property<String> TRANSFER_PRICE_UOM_CODE = new Property<String>("transferPriceUomCode");
	public static final Property<Double> TRANSFER_QTY = new Property<Double>("transferQty");
	public static final Property<String> TRANSFER_QTY_UOM_CODE = new Property<String>("transferQtyUomCode");
	public static final Property<Commodity> COMMODITY = new Property<Commodity>("commodity");

	public void setSourceInvNum(Integer sourceInvNum)
	{
		writeProperty("sourceInvNum", sourceInvNum);
	}

	public Integer getSourceInvNum()
	{
		return (Integer) readProperty("sourceInvNum");
	}

	public void setSourceInvbdNum(Integer sourceInvbdNum)
	{
		writeProperty("sourceInvbdNum", sourceInvbdNum);
	}

	public Integer getSourceInvbdNum()
	{
		return (Integer) readProperty("sourceInvbdNum");
	}

	public void setTargetInvNum(Integer targetInvNum)
	{
		writeProperty("targetInvNum", targetInvNum);
	}

	public Integer getTargetInvNum()
	{
		return (Integer) readProperty("targetInvNum");
	}

	public void setTargetInvbdNum(Integer targetInvbdNum)
	{
		writeProperty("targetInvbdNum", targetInvbdNum);
	}

	public Integer getTargetInvbdNum()
	{
		return (Integer) readProperty("targetInvbdNum");
	}

	public void setTransId(Integer transId)
	{
		writeProperty("transId", transId);
	}

	public Integer getTransId()
	{
		return (Integer) readProperty("transId");
	}

	public void setTransferPrice(Double transferPrice)
	{
		writeProperty("transferPrice", transferPrice);
	}

	public Double getTransferPrice()
	{
		return (Double) readProperty("transferPrice");
	}

	public void setTransferPriceCurrCode(String transferPriceCurrCode)
	{
		writeProperty("transferPriceCurrCode", transferPriceCurrCode);
	}

	public String getTransferPriceCurrCode()
	{
		return (String) readProperty("transferPriceCurrCode");
	}

	public void setTransferPriceCurrencyRate(Double transferPriceCurrencyRate)
	{
		writeProperty("transferPriceCurrencyRate", transferPriceCurrencyRate);
	}

	public Double getTransferPriceCurrencyRate()
	{
		return (Double) readProperty("transferPriceCurrencyRate");
	}

	public void setTransferPriceUomCode(String transferPriceUomCode)
	{
		writeProperty("transferPriceUomCode", transferPriceUomCode);
	}

	public String getTransferPriceUomCode()
	{
		return (String) readProperty("transferPriceUomCode");
	}

	public void setTransferQty(Double transferQty)
	{
		writeProperty("transferQty", transferQty);
	}

	public Double getTransferQty()
	{
		return (Double) readProperty("transferQty");
	}

	public void setTransferQtyUomCode(String transferQtyUomCode)
	{
		writeProperty("transferQtyUomCode", transferQtyUomCode);
	}

	public String getTransferQtyUomCode()
	{
		return (String) readProperty("transferQtyUomCode");
	}

	public void setCommodity(Commodity commodity)
	{
		setToOneTarget("commodity", commodity, true);
	}

	public Commodity getCommodity()
	{
		return (Commodity) readProperty("commodity");
	}

}
