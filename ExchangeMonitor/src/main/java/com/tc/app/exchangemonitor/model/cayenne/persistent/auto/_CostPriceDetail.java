package com.tc.app.exchangemonitor.model.cayenne.persistent.auto;

import java.math.BigDecimal;
import java.util.Date;

import org.apache.cayenne.CayenneDataObject;
import org.apache.cayenne.exp.Property;

import com.tc.app.exchangemonitor.model.cayenne.persistent.Commodity;
import com.tc.app.exchangemonitor.model.cayenne.persistent.Uom;

/**
 * Class _CostPriceDetail was generated by Cayenne.
 * It is probably a good idea to avoid changing this class manually,
 * since it may be overwritten next time code is regenerated.
 * If you need to make any customizations, please use subclass.
 */
public abstract class _CostPriceDetail extends CayenneDataObject
{

	private static final long serialVersionUID = 1L;

	public static final String COST_NUM_PK_COLUMN = "cost_num";
	public static final String FORMULA_BODY_NUM_PK_COLUMN = "formula_body_num";
	public static final String FORMULA_NUM_PK_COLUMN = "formula_num";

	public static final Property<Double> FB_VALUE = new Property<Double>("fbValue");
	public static final Property<Integer> FIELD1 = new Property<Integer>("field1");
	public static final Property<String> FIELD3 = new Property<String>("field3");
	public static final Property<Date> FIELD4 = new Property<Date>("field4");
	public static final Property<String> QTY_UOM_CODE_CONV_TO = new Property<String>("qtyUomCodeConvTo");
	public static final Property<BigDecimal> QTY_UOM_CONV_RATE = new Property<BigDecimal>("qtyUomConvRate");
	public static final Property<Integer> TRANS_ID = new Property<Integer>("transId");
	public static final Property<Double> UNIT_PRICE = new Property<Double>("unitPrice");
	public static final Property<Commodity> COMMODITY = new Property<Commodity>("commodity");
	public static final Property<Uom> UOM = new Property<Uom>("uom");

	public void setFbValue(Double fbValue)
	{
		writeProperty("fbValue", fbValue);
	}

	public Double getFbValue()
	{
		return (Double) readProperty("fbValue");
	}

	public void setField1(Integer field1)
	{
		writeProperty("field1", field1);
	}

	public Integer getField1()
	{
		return (Integer) readProperty("field1");
	}

	public void setField3(String field3)
	{
		writeProperty("field3", field3);
	}

	public String getField3()
	{
		return (String) readProperty("field3");
	}

	public void setField4(Date field4)
	{
		writeProperty("field4", field4);
	}

	public Date getField4()
	{
		return (Date) readProperty("field4");
	}

	public void setQtyUomCodeConvTo(String qtyUomCodeConvTo)
	{
		writeProperty("qtyUomCodeConvTo", qtyUomCodeConvTo);
	}

	public String getQtyUomCodeConvTo()
	{
		return (String) readProperty("qtyUomCodeConvTo");
	}

	public void setQtyUomConvRate(BigDecimal qtyUomConvRate)
	{
		writeProperty("qtyUomConvRate", qtyUomConvRate);
	}

	public BigDecimal getQtyUomConvRate()
	{
		return (BigDecimal) readProperty("qtyUomConvRate");
	}

	public void setTransId(Integer transId)
	{
		writeProperty("transId", transId);
	}

	public Integer getTransId()
	{
		return (Integer) readProperty("transId");
	}

	public void setUnitPrice(Double unitPrice)
	{
		writeProperty("unitPrice", unitPrice);
	}

	public Double getUnitPrice()
	{
		return (Double) readProperty("unitPrice");
	}

	public void setCommodity(Commodity commodity)
	{
		setToOneTarget("commodity", commodity, true);
	}

	public Commodity getCommodity()
	{
		return (Commodity) readProperty("commodity");
	}

	public void setUom(Uom uom)
	{
		setToOneTarget("uom", uom, true);
	}

	public Uom getUom()
	{
		return (Uom) readProperty("uom");
	}

}
