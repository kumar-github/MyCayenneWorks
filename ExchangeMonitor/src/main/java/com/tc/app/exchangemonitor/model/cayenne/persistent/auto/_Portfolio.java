package com.tc.app.exchangemonitor.model.cayenne.persistent.auto;

import java.util.List;

import org.apache.cayenne.CayenneDataObject;
import org.apache.cayenne.exp.Property;

import com.tc.app.exchangemonitor.model.cayenne.persistent.Account;
import com.tc.app.exchangemonitor.model.cayenne.persistent.Allocation;
import com.tc.app.exchangemonitor.model.cayenne.persistent.BrokerFifoRunRec;
import com.tc.app.exchangemonitor.model.cayenne.persistent.Commodity;
import com.tc.app.exchangemonitor.model.cayenne.persistent.CostExtInfo;
import com.tc.app.exchangemonitor.model.cayenne.persistent.FinancialReconcil;
import com.tc.app.exchangemonitor.model.cayenne.persistent.ForecastValue;
import com.tc.app.exchangemonitor.model.cayenne.persistent.FxRateHistory;
import com.tc.app.exchangemonitor.model.cayenne.persistent.IctsUser;
import com.tc.app.exchangemonitor.model.cayenne.persistent.NoiseBandExposure;
import com.tc.app.exchangemonitor.model.cayenne.persistent.PlOffsetTransfer;
import com.tc.app.exchangemonitor.model.cayenne.persistent.PmTradeMatchCriteria;
import com.tc.app.exchangemonitor.model.cayenne.persistent.PortfolioPosLimit;
import com.tc.app.exchangemonitor.model.cayenne.persistent.Scenario;
import com.tc.app.exchangemonitor.model.cayenne.persistent.ScenarioItem;
import com.tc.app.exchangemonitor.model.cayenne.persistent.TradeItemRin;
import com.tc.app.exchangemonitor.model.cayenne.persistent.VesselDist;

/**
 * Class _Portfolio was generated by Cayenne.
 * It is probably a good idea to avoid changing this class manually,
 * since it may be overwritten next time code is regenerated.
 * If you need to make any customizations, please use subclass.
 */
public abstract class _Portfolio extends CayenneDataObject
{

	private static final long serialVersionUID = 1L;

	public static final String PORT_NUM_PK_COLUMN = "port_num";

	public static final Property<Integer> CMNT_NUM = new Property<Integer>("cmntNum");
	public static final Property<Integer> NUM_HISTORY_DAYS = new Property<Integer>("numHistoryDays");
	public static final Property<String> PORT_CLASS = new Property<String>("portClass");
	public static final Property<String> PORT_FULL_NAME = new Property<String>("portFullName");
	public static final Property<Short> PORT_LOCKED = new Property<Short>("portLocked");
	public static final Property<String> PORT_REF_KEY = new Property<String>("portRefKey");
	public static final Property<String> PORT_SHORT_NAME = new Property<String>("portShortName");
	public static final Property<String> PORT_TYPE = new Property<String>("portType");
	public static final Property<Integer> TRANS_ID = new Property<Integer>("transId");
	public static final Property<Account> ACCOUNT = new Property<Account>("account");
	public static final Property<List<Allocation>> ALLOCATIONS = new Property<List<Allocation>>("allocations");
	public static final Property<List<BrokerFifoRunRec>> BROKER_FIFO_RUN_RECS = new Property<List<BrokerFifoRunRec>>("brokerFifoRunRecs");
	public static final Property<Commodity> COMMODITY = new Property<Commodity>("commodity");
	public static final Property<List<CostExtInfo>> COST_EXT_INFOES = new Property<List<CostExtInfo>>("costExtInfoes");
	public static final Property<List<FinancialReconcil>> FINANCIAL_RECONCILS = new Property<List<FinancialReconcil>>("financialReconcils");
	public static final Property<List<ForecastValue>> FORECAST_VALUES = new Property<List<ForecastValue>>("forecastValues");
	public static final Property<List<FxRateHistory>> FX_RATE_HISTORIES = new Property<List<FxRateHistory>>("fxRateHistories");
	public static final Property<IctsUser> ICTS_USER = new Property<IctsUser>("ictsUser");
	public static final Property<List<NoiseBandExposure>> NOISE_BAND_EXPOSURES = new Property<List<NoiseBandExposure>>("noiseBandExposures");
	public static final Property<List<PlOffsetTransfer>> PL_OFFSET_TRANSFERS = new Property<List<PlOffsetTransfer>>("plOffsetTransfers");
	public static final Property<List<PlOffsetTransfer>> PL_OFFSET_TRANSFERS1 = new Property<List<PlOffsetTransfer>>("plOffsetTransfers1");
	public static final Property<List<PmTradeMatchCriteria>> PM_TRADE_MATCH_CRITERIAS = new Property<List<PmTradeMatchCriteria>>("pmTradeMatchCriterias");
	public static final Property<List<PortfolioPosLimit>> PORTFOLIO_POS_LIMITS = new Property<List<PortfolioPosLimit>>("portfolioPosLimits");
	public static final Property<List<ScenarioItem>> SCENARIO_ITEMS = new Property<List<ScenarioItem>>("scenarioItems");
	public static final Property<List<Scenario>> SCENARIOS = new Property<List<Scenario>>("scenarios");
	public static final Property<List<TradeItemRin>> TRADE_ITEM_RINS = new Property<List<TradeItemRin>>("tradeItemRins");
	public static final Property<List<VesselDist>> VESSEL_DISTS = new Property<List<VesselDist>>("vesselDists");

	public void setCmntNum(Integer cmntNum)
	{
		writeProperty("cmntNum", cmntNum);
	}

	public Integer getCmntNum()
	{
		return (Integer) readProperty("cmntNum");
	}

	public void setNumHistoryDays(Integer numHistoryDays)
	{
		writeProperty("numHistoryDays", numHistoryDays);
	}

	public Integer getNumHistoryDays()
	{
		return (Integer) readProperty("numHistoryDays");
	}

	public void setPortClass(String portClass)
	{
		writeProperty("portClass", portClass);
	}

	public String getPortClass()
	{
		return (String) readProperty("portClass");
	}

	public void setPortFullName(String portFullName)
	{
		writeProperty("portFullName", portFullName);
	}

	public String getPortFullName()
	{
		return (String) readProperty("portFullName");
	}

	public void setPortLocked(Short portLocked)
	{
		writeProperty("portLocked", portLocked);
	}

	public Short getPortLocked()
	{
		return (Short) readProperty("portLocked");
	}

	public void setPortRefKey(String portRefKey)
	{
		writeProperty("portRefKey", portRefKey);
	}

	public String getPortRefKey()
	{
		return (String) readProperty("portRefKey");
	}

	public void setPortShortName(String portShortName)
	{
		writeProperty("portShortName", portShortName);
	}

	public String getPortShortName()
	{
		return (String) readProperty("portShortName");
	}

	public void setPortType(String portType)
	{
		writeProperty("portType", portType);
	}

	public String getPortType()
	{
		return (String) readProperty("portType");
	}

	public void setTransId(Integer transId)
	{
		writeProperty("transId", transId);
	}

	public Integer getTransId()
	{
		return (Integer) readProperty("transId");
	}

	public void setAccount(Account account)
	{
		setToOneTarget("account", account, true);
	}

	public Account getAccount()
	{
		return (Account) readProperty("account");
	}

	public void addToAllocations(Allocation obj)
	{
		addToManyTarget("allocations", obj, true);
	}

	public void removeFromAllocations(Allocation obj)
	{
		removeToManyTarget("allocations", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<Allocation> getAllocations()
	{
		return (List<Allocation>) readProperty("allocations");
	}

	public void addToBrokerFifoRunRecs(BrokerFifoRunRec obj)
	{
		addToManyTarget("brokerFifoRunRecs", obj, true);
	}

	public void removeFromBrokerFifoRunRecs(BrokerFifoRunRec obj)
	{
		removeToManyTarget("brokerFifoRunRecs", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<BrokerFifoRunRec> getBrokerFifoRunRecs()
	{
		return (List<BrokerFifoRunRec>) readProperty("brokerFifoRunRecs");
	}

	public void setCommodity(Commodity commodity)
	{
		setToOneTarget("commodity", commodity, true);
	}

	public Commodity getCommodity()
	{
		return (Commodity) readProperty("commodity");
	}

	public void addToCostExtInfoes(CostExtInfo obj)
	{
		addToManyTarget("costExtInfoes", obj, true);
	}

	public void removeFromCostExtInfoes(CostExtInfo obj)
	{
		removeToManyTarget("costExtInfoes", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<CostExtInfo> getCostExtInfoes()
	{
		return (List<CostExtInfo>) readProperty("costExtInfoes");
	}

	public void addToFinancialReconcils(FinancialReconcil obj)
	{
		addToManyTarget("financialReconcils", obj, true);
	}

	public void removeFromFinancialReconcils(FinancialReconcil obj)
	{
		removeToManyTarget("financialReconcils", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<FinancialReconcil> getFinancialReconcils()
	{
		return (List<FinancialReconcil>) readProperty("financialReconcils");
	}

	public void addToForecastValues(ForecastValue obj)
	{
		addToManyTarget("forecastValues", obj, true);
	}

	public void removeFromForecastValues(ForecastValue obj)
	{
		removeToManyTarget("forecastValues", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<ForecastValue> getForecastValues()
	{
		return (List<ForecastValue>) readProperty("forecastValues");
	}

	public void addToFxRateHistories(FxRateHistory obj)
	{
		addToManyTarget("fxRateHistories", obj, true);
	}

	public void removeFromFxRateHistories(FxRateHistory obj)
	{
		removeToManyTarget("fxRateHistories", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<FxRateHistory> getFxRateHistories()
	{
		return (List<FxRateHistory>) readProperty("fxRateHistories");
	}

	public void setIctsUser(IctsUser ictsUser)
	{
		setToOneTarget("ictsUser", ictsUser, true);
	}

	public IctsUser getIctsUser()
	{
		return (IctsUser) readProperty("ictsUser");
	}

	public void addToNoiseBandExposures(NoiseBandExposure obj)
	{
		addToManyTarget("noiseBandExposures", obj, true);
	}

	public void removeFromNoiseBandExposures(NoiseBandExposure obj)
	{
		removeToManyTarget("noiseBandExposures", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<NoiseBandExposure> getNoiseBandExposures()
	{
		return (List<NoiseBandExposure>) readProperty("noiseBandExposures");
	}

	public void addToPlOffsetTransfers(PlOffsetTransfer obj)
	{
		addToManyTarget("plOffsetTransfers", obj, true);
	}

	public void removeFromPlOffsetTransfers(PlOffsetTransfer obj)
	{
		removeToManyTarget("plOffsetTransfers", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<PlOffsetTransfer> getPlOffsetTransfers()
	{
		return (List<PlOffsetTransfer>) readProperty("plOffsetTransfers");
	}

	public void addToPlOffsetTransfers1(PlOffsetTransfer obj)
	{
		addToManyTarget("plOffsetTransfers1", obj, true);
	}

	public void removeFromPlOffsetTransfers1(PlOffsetTransfer obj)
	{
		removeToManyTarget("plOffsetTransfers1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<PlOffsetTransfer> getPlOffsetTransfers1()
	{
		return (List<PlOffsetTransfer>) readProperty("plOffsetTransfers1");
	}

	public void addToPmTradeMatchCriterias(PmTradeMatchCriteria obj)
	{
		addToManyTarget("pmTradeMatchCriterias", obj, true);
	}

	public void removeFromPmTradeMatchCriterias(PmTradeMatchCriteria obj)
	{
		removeToManyTarget("pmTradeMatchCriterias", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<PmTradeMatchCriteria> getPmTradeMatchCriterias()
	{
		return (List<PmTradeMatchCriteria>) readProperty("pmTradeMatchCriterias");
	}

	public void addToPortfolioPosLimits(PortfolioPosLimit obj)
	{
		addToManyTarget("portfolioPosLimits", obj, true);
	}

	public void removeFromPortfolioPosLimits(PortfolioPosLimit obj)
	{
		removeToManyTarget("portfolioPosLimits", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<PortfolioPosLimit> getPortfolioPosLimits()
	{
		return (List<PortfolioPosLimit>) readProperty("portfolioPosLimits");
	}

	public void addToScenarioItems(ScenarioItem obj)
	{
		addToManyTarget("scenarioItems", obj, true);
	}

	public void removeFromScenarioItems(ScenarioItem obj)
	{
		removeToManyTarget("scenarioItems", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<ScenarioItem> getScenarioItems()
	{
		return (List<ScenarioItem>) readProperty("scenarioItems");
	}

	public void addToScenarios(Scenario obj)
	{
		addToManyTarget("scenarios", obj, true);
	}

	public void removeFromScenarios(Scenario obj)
	{
		removeToManyTarget("scenarios", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<Scenario> getScenarios()
	{
		return (List<Scenario>) readProperty("scenarios");
	}

	public void addToTradeItemRins(TradeItemRin obj)
	{
		addToManyTarget("tradeItemRins", obj, true);
	}

	public void removeFromTradeItemRins(TradeItemRin obj)
	{
		removeToManyTarget("tradeItemRins", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeItemRin> getTradeItemRins()
	{
		return (List<TradeItemRin>) readProperty("tradeItemRins");
	}

	public void addToVesselDists(VesselDist obj)
	{
		addToManyTarget("vesselDists", obj, true);
	}

	public void removeFromVesselDists(VesselDist obj)
	{
		removeToManyTarget("vesselDists", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<VesselDist> getVesselDists()
	{
		return (List<VesselDist>) readProperty("vesselDists");
	}

}
