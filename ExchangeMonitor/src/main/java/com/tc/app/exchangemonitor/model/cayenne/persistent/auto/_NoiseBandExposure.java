package com.tc.app.exchangemonitor.model.cayenne.persistent.auto;

import java.math.BigDecimal;

import org.apache.cayenne.CayenneDataObject;
import org.apache.cayenne.exp.Property;

import com.tc.app.exchangemonitor.model.cayenne.persistent.Commodity;
import com.tc.app.exchangemonitor.model.cayenne.persistent.Portfolio;
import com.tc.app.exchangemonitor.model.cayenne.persistent.Uom;

/**
 * Class _NoiseBandExposure was generated by Cayenne.
 * It is probably a good idea to avoid changing this class manually,
 * since it may be overwritten next time code is regenerated.
 * If you need to make any customizations, please use subclass.
 */
public abstract class _NoiseBandExposure extends CayenneDataObject
{

	private static final long serialVersionUID = 1L;

	public static final String ASOF_DATE_PK_COLUMN = "asof_date";
	public static final String PORT_NUM_PK_COLUMN = "port_num";

	public static final Property<BigDecimal> MARKET_VALUE = new Property<BigDecimal>("marketValue");
	public static final Property<BigDecimal> NET_EXPOSURE_VOLUME = new Property<BigDecimal>("netExposureVolume");
	public static final Property<BigDecimal> RNSV_EXPOSURE = new Property<BigDecimal>("rnsvExposure");
	public static final Property<BigDecimal> RNSV_MTM_VALUE = new Property<BigDecimal>("rnsvMtmValue");
	public static final Property<Integer> TRANS_ID = new Property<Integer>("transId");
	public static final Property<BigDecimal> WEIGHTED_MARKET_PRICE = new Property<BigDecimal>("weightedMarketPrice");
	public static final Property<BigDecimal> WEIGHTED_TRADE_PRICE = new Property<BigDecimal>("weightedTradePrice");
	public static final Property<BigDecimal> WEIGHTED_TRADE_VALUE = new Property<BigDecimal>("weightedTradeValue");
	public static final Property<Commodity> COMMODITY = new Property<Commodity>("commodity");
	public static final Property<Portfolio> PORTFOLIO = new Property<Portfolio>("portfolio");
	public static final Property<Uom> UOM = new Property<Uom>("uom");

	public void setMarketValue(BigDecimal marketValue)
	{
		writeProperty("marketValue", marketValue);
	}

	public BigDecimal getMarketValue()
	{
		return (BigDecimal) readProperty("marketValue");
	}

	public void setNetExposureVolume(BigDecimal netExposureVolume)
	{
		writeProperty("netExposureVolume", netExposureVolume);
	}

	public BigDecimal getNetExposureVolume()
	{
		return (BigDecimal) readProperty("netExposureVolume");
	}

	public void setRnsvExposure(BigDecimal rnsvExposure)
	{
		writeProperty("rnsvExposure", rnsvExposure);
	}

	public BigDecimal getRnsvExposure()
	{
		return (BigDecimal) readProperty("rnsvExposure");
	}

	public void setRnsvMtmValue(BigDecimal rnsvMtmValue)
	{
		writeProperty("rnsvMtmValue", rnsvMtmValue);
	}

	public BigDecimal getRnsvMtmValue()
	{
		return (BigDecimal) readProperty("rnsvMtmValue");
	}

	public void setTransId(Integer transId)
	{
		writeProperty("transId", transId);
	}

	public Integer getTransId()
	{
		return (Integer) readProperty("transId");
	}

	public void setWeightedMarketPrice(BigDecimal weightedMarketPrice)
	{
		writeProperty("weightedMarketPrice", weightedMarketPrice);
	}

	public BigDecimal getWeightedMarketPrice()
	{
		return (BigDecimal) readProperty("weightedMarketPrice");
	}

	public void setWeightedTradePrice(BigDecimal weightedTradePrice)
	{
		writeProperty("weightedTradePrice", weightedTradePrice);
	}

	public BigDecimal getWeightedTradePrice()
	{
		return (BigDecimal) readProperty("weightedTradePrice");
	}

	public void setWeightedTradeValue(BigDecimal weightedTradeValue)
	{
		writeProperty("weightedTradeValue", weightedTradeValue);
	}

	public BigDecimal getWeightedTradeValue()
	{
		return (BigDecimal) readProperty("weightedTradeValue");
	}

	public void setCommodity(Commodity commodity)
	{
		setToOneTarget("commodity", commodity, true);
	}

	public Commodity getCommodity()
	{
		return (Commodity) readProperty("commodity");
	}

	public void setPortfolio(Portfolio portfolio)
	{
		setToOneTarget("portfolio", portfolio, true);
	}

	public Portfolio getPortfolio()
	{
		return (Portfolio) readProperty("portfolio");
	}

	public void setUom(Uom uom)
	{
		setToOneTarget("uom", uom, true);
	}

	public Uom getUom()
	{
		return (Uom) readProperty("uom");
	}

}
