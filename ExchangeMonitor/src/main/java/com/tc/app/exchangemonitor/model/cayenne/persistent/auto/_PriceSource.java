package com.tc.app.exchangemonitor.model.cayenne.persistent.auto;

import java.util.List;

import org.apache.cayenne.CayenneDataObject;
import org.apache.cayenne.exp.Property;

import com.tc.app.exchangemonitor.model.cayenne.persistent.CommktFutureAttr;
import com.tc.app.exchangemonitor.model.cayenne.persistent.CommktOptionAttr;
import com.tc.app.exchangemonitor.model.cayenne.persistent.CommktPhysicalAttr;
import com.tc.app.exchangemonitor.model.cayenne.persistent.CommodityMarket;
import com.tc.app.exchangemonitor.model.cayenne.persistent.CommodityMarketFormula;
import com.tc.app.exchangemonitor.model.cayenne.persistent.CommodityMarketSource;
import com.tc.app.exchangemonitor.model.cayenne.persistent.FormulaComponent;
import com.tc.app.exchangemonitor.model.cayenne.persistent.FormulaComponentExt;
import com.tc.app.exchangemonitor.model.cayenne.persistent.FormulaCondition;
import com.tc.app.exchangemonitor.model.cayenne.persistent.FxHedgeRate;
import com.tc.app.exchangemonitor.model.cayenne.persistent.ImpliedPrCurve;
import com.tc.app.exchangemonitor.model.cayenne.persistent.ImpliedPrDifferential;
import com.tc.app.exchangemonitor.model.cayenne.persistent.LiveOptionPr;
import com.tc.app.exchangemonitor.model.cayenne.persistent.OptionPrice;
import com.tc.app.exchangemonitor.model.cayenne.persistent.OptionSkew;
import com.tc.app.exchangemonitor.model.cayenne.persistent.OptionStrikeAlias;
import com.tc.app.exchangemonitor.model.cayenne.persistent.Position;
import com.tc.app.exchangemonitor.model.cayenne.persistent.PositionHistory;
import com.tc.app.exchangemonitor.model.cayenne.persistent.PositionMarkToMarket;
import com.tc.app.exchangemonitor.model.cayenne.persistent.PostingBulletin;
import com.tc.app.exchangemonitor.model.cayenne.persistent.Price;
import com.tc.app.exchangemonitor.model.cayenne.persistent.PriceGravityAdj;
import com.tc.app.exchangemonitor.model.cayenne.persistent.SimpleFormula;
import com.tc.app.exchangemonitor.model.cayenne.persistent.TradeItemExchOpt;
import com.tc.app.exchangemonitor.model.cayenne.persistent.TradeItemFut;
import com.tc.app.exchangemonitor.model.cayenne.persistent.TradingPeriodAlias;
import com.tc.app.exchangemonitor.model.cayenne.persistent.VarfeedBeta;

/**
 * Class _PriceSource was generated by Cayenne.
 * It is probably a good idea to avoid changing this class manually,
 * since it may be overwritten next time code is regenerated.
 * If you need to make any customizations, please use subclass.
 */
public abstract class _PriceSource extends CayenneDataObject
{

	private static final long serialVersionUID = 1L;

	public static final String PRICE_SOURCE_CODE_PK_COLUMN = "price_source_code";

	public static final Property<String> PRICE_SOURCE_NAME = new Property<>("priceSourceName");
	public static final Property<String> PRICE_SOURCE_TYPE = new Property<>("priceSourceType");
	public static final Property<Integer> TRANS_ID = new Property<>("transId");
	public static final Property<List<CommktFutureAttr>> COMMKT_FUTURE_ATTRS = new Property<>("commktFutureAttrs");
	public static final Property<List<CommktOptionAttr>> COMMKT_OPTION_ATTRS = new Property<>("commktOptionAttrs");
	public static final Property<List<CommktPhysicalAttr>> COMMKT_PHYSICAL_ATTRS = new Property<>("commktPhysicalAttrs");
	public static final Property<List<CommodityMarketFormula>> COMMODITY_MARKET_FORMULAS = new Property<>("commodityMarketFormulas");
	public static final Property<List<CommodityMarketSource>> COMMODITY_MARKET_SOURCES = new Property<>("commodityMarketSources");
	public static final Property<List<CommodityMarket>> COMMODITY_MARKETS = new Property<>("commodityMarkets");
	public static final Property<List<FormulaComponentExt>> FORMULA_COMPONENT_EXTS = new Property<>("formulaComponentExts");
	public static final Property<List<FormulaComponent>> FORMULA_COMPONENTS = new Property<>("formulaComponents");
	public static final Property<List<FormulaCondition>> FORMULA_CONDITIONS = new Property<>("formulaConditions");
	public static final Property<List<FormulaCondition>> FORMULA_CONDITIONS1 = new Property<>("formulaConditions1");
	public static final Property<List<FxHedgeRate>> FX_HEDGE_RATES = new Property<>("fxHedgeRates");
	public static final Property<List<ImpliedPrCurve>> IMPLIED_PR_CURVES = new Property<>("impliedPrCurves");
	public static final Property<List<ImpliedPrDifferential>> IMPLIED_PR_DIFFERENTIALS = new Property<>("impliedPrDifferentials");
	public static final Property<List<ImpliedPrDifferential>> IMPLIED_PR_DIFFERENTIALS1 = new Property<>("impliedPrDifferentials1");
	public static final Property<List<LiveOptionPr>> LIVE_OPTION_PRS = new Property<>("liveOptionPrs");
	public static final Property<List<OptionPrice>> OPTION_PRICES = new Property<>("optionPrices");
	public static final Property<List<OptionSkew>> OPTION_SKEWS = new Property<>("optionSkews");
	public static final Property<List<OptionStrikeAlias>> OPTION_STRIKE_ALIASS = new Property<>("optionStrikeAliass");
	public static final Property<List<PositionHistory>> POSITION_HISTORIES = new Property<>("positionHistories");
	public static final Property<List<PositionMarkToMarket>> POSITION_MARK_TO_MARKETS = new Property<>("positionMarkToMarkets");
	public static final Property<List<Position>> POSITIONS = new Property<>("positions");
	public static final Property<List<PostingBulletin>> POSTING_BULLETINS = new Property<>("postingBulletins");
	public static final Property<List<PriceGravityAdj>> PRICE_GRAVITY_ADJS = new Property<>("priceGravityAdjs");
	public static final Property<List<Price>> PRICES = new Property<>("prices");
	public static final Property<List<SimpleFormula>> SIMPLE_FORMULAS = new Property<>("simpleFormulas");
	public static final Property<List<TradeItemExchOpt>> TRADE_ITEM_EXCH_OPTS = new Property<>("tradeItemExchOpts");
	public static final Property<List<TradeItemFut>> TRADE_ITEM_FUTS = new Property<>("tradeItemFuts");
	public static final Property<List<TradingPeriodAlias>> TRADING_PERIOD_ALIASS = new Property<>("tradingPeriodAliass");
	public static final Property<List<VarfeedBeta>> VARFEED_BETAS = new Property<>("varfeedBetas");

	public void setPriceSourceName(final String priceSourceName)
	{
		this.writeProperty("priceSourceName", priceSourceName);
	}

	public String getPriceSourceName()
	{
		return (String) this.readProperty("priceSourceName");
	}

	public void setPriceSourceType(final String priceSourceType)
	{
		this.writeProperty("priceSourceType", priceSourceType);
	}

	public String getPriceSourceType()
	{
		return (String) this.readProperty("priceSourceType");
	}

	public void setTransId(final Integer transId)
	{
		this.writeProperty("transId", transId);
	}

	public Integer getTransId()
	{
		return (Integer) this.readProperty("transId");
	}

	public void addToCommktFutureAttrs(final CommktFutureAttr obj)
	{
		this.addToManyTarget("commktFutureAttrs", obj, true);
	}

	public void removeFromCommktFutureAttrs(final CommktFutureAttr obj)
	{
		this.removeToManyTarget("commktFutureAttrs", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<CommktFutureAttr> getCommktFutureAttrs()
	{
		return (List<CommktFutureAttr>) this.readProperty("commktFutureAttrs");
	}

	public void addToCommktOptionAttrs(final CommktOptionAttr obj)
	{
		this.addToManyTarget("commktOptionAttrs", obj, true);
	}

	public void removeFromCommktOptionAttrs(final CommktOptionAttr obj)
	{
		this.removeToManyTarget("commktOptionAttrs", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<CommktOptionAttr> getCommktOptionAttrs()
	{
		return (List<CommktOptionAttr>) this.readProperty("commktOptionAttrs");
	}

	public void addToCommktPhysicalAttrs(final CommktPhysicalAttr obj)
	{
		this.addToManyTarget("commktPhysicalAttrs", obj, true);
	}

	public void removeFromCommktPhysicalAttrs(final CommktPhysicalAttr obj)
	{
		this.removeToManyTarget("commktPhysicalAttrs", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<CommktPhysicalAttr> getCommktPhysicalAttrs()
	{
		return (List<CommktPhysicalAttr>) this.readProperty("commktPhysicalAttrs");
	}

	public void addToCommodityMarketFormulas(final CommodityMarketFormula obj)
	{
		this.addToManyTarget("commodityMarketFormulas", obj, true);
	}

	public void removeFromCommodityMarketFormulas(final CommodityMarketFormula obj)
	{
		this.removeToManyTarget("commodityMarketFormulas", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<CommodityMarketFormula> getCommodityMarketFormulas()
	{
		return (List<CommodityMarketFormula>) this.readProperty("commodityMarketFormulas");
	}

	public void addToCommodityMarketSources(final CommodityMarketSource obj)
	{
		this.addToManyTarget("commodityMarketSources", obj, true);
	}

	public void removeFromCommodityMarketSources(final CommodityMarketSource obj)
	{
		this.removeToManyTarget("commodityMarketSources", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<CommodityMarketSource> getCommodityMarketSources()
	{
		return (List<CommodityMarketSource>) this.readProperty("commodityMarketSources");
	}

	public void addToCommodityMarkets(final CommodityMarket obj)
	{
		this.addToManyTarget("commodityMarkets", obj, true);
	}

	public void removeFromCommodityMarkets(final CommodityMarket obj)
	{
		this.removeToManyTarget("commodityMarkets", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<CommodityMarket> getCommodityMarkets()
	{
		return (List<CommodityMarket>) this.readProperty("commodityMarkets");
	}

	public void addToFormulaComponentExts(final FormulaComponentExt obj)
	{
		this.addToManyTarget("formulaComponentExts", obj, true);
	}

	public void removeFromFormulaComponentExts(final FormulaComponentExt obj)
	{
		this.removeToManyTarget("formulaComponentExts", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<FormulaComponentExt> getFormulaComponentExts()
	{
		return (List<FormulaComponentExt>) this.readProperty("formulaComponentExts");
	}

	public void addToFormulaComponents(final FormulaComponent obj)
	{
		this.addToManyTarget("formulaComponents", obj, true);
	}

	public void removeFromFormulaComponents(final FormulaComponent obj)
	{
		this.removeToManyTarget("formulaComponents", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<FormulaComponent> getFormulaComponents()
	{
		return (List<FormulaComponent>) this.readProperty("formulaComponents");
	}

	public void addToFormulaConditions(final FormulaCondition obj)
	{
		this.addToManyTarget("formulaConditions", obj, true);
	}

	public void removeFromFormulaConditions(final FormulaCondition obj)
	{
		this.removeToManyTarget("formulaConditions", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<FormulaCondition> getFormulaConditions()
	{
		return (List<FormulaCondition>) this.readProperty("formulaConditions");
	}

	public void addToFormulaConditions1(final FormulaCondition obj)
	{
		this.addToManyTarget("formulaConditions1", obj, true);
	}

	public void removeFromFormulaConditions1(final FormulaCondition obj)
	{
		this.removeToManyTarget("formulaConditions1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<FormulaCondition> getFormulaConditions1()
	{
		return (List<FormulaCondition>) this.readProperty("formulaConditions1");
	}

	public void addToFxHedgeRates(final FxHedgeRate obj)
	{
		this.addToManyTarget("fxHedgeRates", obj, true);
	}

	public void removeFromFxHedgeRates(final FxHedgeRate obj)
	{
		this.removeToManyTarget("fxHedgeRates", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<FxHedgeRate> getFxHedgeRates()
	{
		return (List<FxHedgeRate>) this.readProperty("fxHedgeRates");
	}

	public void addToImpliedPrCurves(final ImpliedPrCurve obj)
	{
		this.addToManyTarget("impliedPrCurves", obj, true);
	}

	public void removeFromImpliedPrCurves(final ImpliedPrCurve obj)
	{
		this.removeToManyTarget("impliedPrCurves", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<ImpliedPrCurve> getImpliedPrCurves()
	{
		return (List<ImpliedPrCurve>) this.readProperty("impliedPrCurves");
	}

	public void addToImpliedPrDifferentials(final ImpliedPrDifferential obj)
	{
		this.addToManyTarget("impliedPrDifferentials", obj, true);
	}

	public void removeFromImpliedPrDifferentials(final ImpliedPrDifferential obj)
	{
		this.removeToManyTarget("impliedPrDifferentials", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<ImpliedPrDifferential> getImpliedPrDifferentials()
	{
		return (List<ImpliedPrDifferential>) this.readProperty("impliedPrDifferentials");
	}

	public void addToImpliedPrDifferentials1(final ImpliedPrDifferential obj)
	{
		this.addToManyTarget("impliedPrDifferentials1", obj, true);
	}

	public void removeFromImpliedPrDifferentials1(final ImpliedPrDifferential obj)
	{
		this.removeToManyTarget("impliedPrDifferentials1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<ImpliedPrDifferential> getImpliedPrDifferentials1()
	{
		return (List<ImpliedPrDifferential>) this.readProperty("impliedPrDifferentials1");
	}

	public void addToLiveOptionPrs(final LiveOptionPr obj)
	{
		this.addToManyTarget("liveOptionPrs", obj, true);
	}

	public void removeFromLiveOptionPrs(final LiveOptionPr obj)
	{
		this.removeToManyTarget("liveOptionPrs", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<LiveOptionPr> getLiveOptionPrs()
	{
		return (List<LiveOptionPr>) this.readProperty("liveOptionPrs");
	}

	public void addToOptionPrices(final OptionPrice obj)
	{
		this.addToManyTarget("optionPrices", obj, true);
	}

	public void removeFromOptionPrices(final OptionPrice obj)
	{
		this.removeToManyTarget("optionPrices", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<OptionPrice> getOptionPrices()
	{
		return (List<OptionPrice>) this.readProperty("optionPrices");
	}

	public void addToOptionSkews(final OptionSkew obj)
	{
		this.addToManyTarget("optionSkews", obj, true);
	}

	public void removeFromOptionSkews(final OptionSkew obj)
	{
		this.removeToManyTarget("optionSkews", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<OptionSkew> getOptionSkews()
	{
		return (List<OptionSkew>) this.readProperty("optionSkews");
	}

	public void addToOptionStrikeAliass(final OptionStrikeAlias obj)
	{
		this.addToManyTarget("optionStrikeAliass", obj, true);
	}

	public void removeFromOptionStrikeAliass(final OptionStrikeAlias obj)
	{
		this.removeToManyTarget("optionStrikeAliass", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<OptionStrikeAlias> getOptionStrikeAliass()
	{
		return (List<OptionStrikeAlias>) this.readProperty("optionStrikeAliass");
	}

	public void addToPositionHistories(final PositionHistory obj)
	{
		this.addToManyTarget("positionHistories", obj, true);
	}

	public void removeFromPositionHistories(final PositionHistory obj)
	{
		this.removeToManyTarget("positionHistories", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<PositionHistory> getPositionHistories()
	{
		return (List<PositionHistory>) this.readProperty("positionHistories");
	}

	public void addToPositionMarkToMarkets(final PositionMarkToMarket obj)
	{
		this.addToManyTarget("positionMarkToMarkets", obj, true);
	}

	public void removeFromPositionMarkToMarkets(final PositionMarkToMarket obj)
	{
		this.removeToManyTarget("positionMarkToMarkets", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<PositionMarkToMarket> getPositionMarkToMarkets()
	{
		return (List<PositionMarkToMarket>) this.readProperty("positionMarkToMarkets");
	}

	public void addToPositions(final Position obj)
	{
		this.addToManyTarget("positions", obj, true);
	}

	public void removeFromPositions(final Position obj)
	{
		this.removeToManyTarget("positions", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<Position> getPositions()
	{
		return (List<Position>) this.readProperty("positions");
	}

	public void addToPostingBulletins(final PostingBulletin obj)
	{
		this.addToManyTarget("postingBulletins", obj, true);
	}

	public void removeFromPostingBulletins(final PostingBulletin obj)
	{
		this.removeToManyTarget("postingBulletins", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<PostingBulletin> getPostingBulletins()
	{
		return (List<PostingBulletin>) this.readProperty("postingBulletins");
	}

	public void addToPriceGravityAdjs(final PriceGravityAdj obj)
	{
		this.addToManyTarget("priceGravityAdjs", obj, true);
	}

	public void removeFromPriceGravityAdjs(final PriceGravityAdj obj)
	{
		this.removeToManyTarget("priceGravityAdjs", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<PriceGravityAdj> getPriceGravityAdjs()
	{
		return (List<PriceGravityAdj>) this.readProperty("priceGravityAdjs");
	}

	public void addToPrices(final Price obj)
	{
		this.addToManyTarget("prices", obj, true);
	}

	public void removeFromPrices(final Price obj)
	{
		this.removeToManyTarget("prices", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<Price> getPrices()
	{
		return (List<Price>) this.readProperty("prices");
	}

	public void addToSimpleFormulas(final SimpleFormula obj)
	{
		this.addToManyTarget("simpleFormulas", obj, true);
	}

	public void removeFromSimpleFormulas(final SimpleFormula obj)
	{
		this.removeToManyTarget("simpleFormulas", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<SimpleFormula> getSimpleFormulas()
	{
		return (List<SimpleFormula>) this.readProperty("simpleFormulas");
	}

	public void addToTradeItemExchOpts(final TradeItemExchOpt obj)
	{
		this.addToManyTarget("tradeItemExchOpts", obj, true);
	}

	public void removeFromTradeItemExchOpts(final TradeItemExchOpt obj)
	{
		this.removeToManyTarget("tradeItemExchOpts", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeItemExchOpt> getTradeItemExchOpts()
	{
		return (List<TradeItemExchOpt>) this.readProperty("tradeItemExchOpts");
	}

	public void addToTradeItemFuts(final TradeItemFut obj)
	{
		this.addToManyTarget("tradeItemFuts", obj, true);
	}

	public void removeFromTradeItemFuts(final TradeItemFut obj)
	{
		this.removeToManyTarget("tradeItemFuts", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeItemFut> getTradeItemFuts()
	{
		return (List<TradeItemFut>) this.readProperty("tradeItemFuts");
	}

	public void addToTradingPeriodAliass(final TradingPeriodAlias obj)
	{
		this.addToManyTarget("tradingPeriodAliass", obj, true);
	}

	public void removeFromTradingPeriodAliass(final TradingPeriodAlias obj)
	{
		this.removeToManyTarget("tradingPeriodAliass", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradingPeriodAlias> getTradingPeriodAliass()
	{
		return (List<TradingPeriodAlias>) this.readProperty("tradingPeriodAliass");
	}

	public void addToVarfeedBetas(final VarfeedBeta obj)
	{
		this.addToManyTarget("varfeedBetas", obj, true);
	}

	public void removeFromVarfeedBetas(final VarfeedBeta obj)
	{
		this.removeToManyTarget("varfeedBetas", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<VarfeedBeta> getVarfeedBetas()
	{
		return (List<VarfeedBeta>) this.readProperty("varfeedBetas");
	}

}
