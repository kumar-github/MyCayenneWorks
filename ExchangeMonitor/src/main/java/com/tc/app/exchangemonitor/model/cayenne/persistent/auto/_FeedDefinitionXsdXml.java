package com.tc.app.exchangemonitor.model.cayenne.persistent.auto;

import java.util.List;

import org.apache.cayenne.CayenneDataObject;
import org.apache.cayenne.exp.Property;

import com.tc.app.exchangemonitor.model.cayenne.persistent.FeedDefinition;

/**
 * Class _FeedDefinitionXsdXml was generated by Cayenne.
 * It is probably a good idea to avoid changing this class manually,
 * since it may be overwritten next time code is regenerated.
 * If you need to make any customizations, please use subclass.
 */
public abstract class _FeedDefinitionXsdXml extends CayenneDataObject
{

	private static final long serialVersionUID = 1L;

	public static final String OID_PK_COLUMN = "oid";

	public static final Property<String> DOC_TEXT = new Property<>("docText");
	public static final Property<Integer> TRANS_ID = new Property<>("transId");
	public static final Property<List<FeedDefinition>> FEED_DEFINITIONS = new Property<>("feedDefinitions");
	public static final Property<List<FeedDefinition>> FEED_DEFINITIONS1 = new Property<>("feedDefinitions1");
	public static final Property<List<FeedDefinition>> FEED_DEFINITIONS2 = new Property<>("feedDefinitions2");

	public void setDocText(final String docText)
	{
		this.writeProperty("docText", docText);
	}

	public String getDocText()
	{
		return (String) this.readProperty("docText");
	}

	public void setTransId(final Integer transId)
	{
		this.writeProperty("transId", transId);
	}

	public Integer getTransId()
	{
		return (Integer) this.readProperty("transId");
	}

	public void addToFeedDefinitions(final FeedDefinition obj)
	{
		this.addToManyTarget("feedDefinitions", obj, true);
	}

	public void removeFromFeedDefinitions(final FeedDefinition obj)
	{
		this.removeToManyTarget("feedDefinitions", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<FeedDefinition> getFeedDefinitions()
	{
		return (List<FeedDefinition>) this.readProperty("feedDefinitions");
	}

	public void addToFeedDefinitions1(final FeedDefinition obj)
	{
		this.addToManyTarget("feedDefinitions1", obj, true);
	}

	public void removeFromFeedDefinitions1(final FeedDefinition obj)
	{
		this.removeToManyTarget("feedDefinitions1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<FeedDefinition> getFeedDefinitions1()
	{
		return (List<FeedDefinition>) this.readProperty("feedDefinitions1");
	}

	public void addToFeedDefinitions2(final FeedDefinition obj)
	{
		this.addToManyTarget("feedDefinitions2", obj, true);
	}

	public void removeFromFeedDefinitions2(final FeedDefinition obj)
	{
		this.removeToManyTarget("feedDefinitions2", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<FeedDefinition> getFeedDefinitions2()
	{
		return (List<FeedDefinition>) this.readProperty("feedDefinitions2");
	}

}
