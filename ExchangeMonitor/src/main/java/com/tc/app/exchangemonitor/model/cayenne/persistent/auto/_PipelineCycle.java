package com.tc.app.exchangemonitor.model.cayenne.persistent.auto;

import java.util.Date;
import java.util.List;

import org.apache.cayenne.CayenneDataObject;
import org.apache.cayenne.exp.Property;

import com.tc.app.exchangemonitor.model.cayenne.persistent.Commodity;
import com.tc.app.exchangemonitor.model.cayenne.persistent.Mot;
import com.tc.app.exchangemonitor.model.cayenne.persistent.TradeItemStorage;
import com.tc.app.exchangemonitor.model.cayenne.persistent.TradeItemTransport;
import com.tc.app.exchangemonitor.model.cayenne.persistent.TradeItemWetPhy;

/**
 * Class _PipelineCycle was generated by Cayenne.
 * It is probably a good idea to avoid changing this class manually,
 * since it may be overwritten next time code is regenerated.
 * If you need to make any customizations, please use subclass.
 */
public abstract class _PipelineCycle extends CayenneDataObject
{

	private static final long serialVersionUID = 1L;

	public static final String PIPELINE_CYCLE_NUM_PK_COLUMN = "pipeline_cycle_num";

	public static final Property<Date> CYCLE_END_DATE = new Property<Date>("cycleEndDate");
	public static final Property<Date> CYCLE_START_DATE = new Property<Date>("cycleStartDate");
	public static final Property<String> SPLIT_CYCLE_OPT = new Property<String>("splitCycleOpt");
	public static final Property<String> TIMING_CYCLE_MTH = new Property<String>("timingCycleMth");
	public static final Property<Short> TIMING_CYCLE_NUM = new Property<Short>("timingCycleNum");
	public static final Property<Integer> TRANS_ID = new Property<Integer>("transId");
	public static final Property<Commodity> COMMODITY = new Property<Commodity>("commodity");
	public static final Property<Mot> MOT = new Property<Mot>("mot");
	public static final Property<List<TradeItemStorage>> TRADE_ITEM_STORAGES = new Property<List<TradeItemStorage>>("tradeItemStorages");
	public static final Property<List<TradeItemTransport>> TRADE_ITEM_TRANSPORTS = new Property<List<TradeItemTransport>>("tradeItemTransports");
	public static final Property<List<TradeItemWetPhy>> TRADE_ITEM_WET_PHIES = new Property<List<TradeItemWetPhy>>("tradeItemWetPhies");

	public void setCycleEndDate(Date cycleEndDate)
	{
		writeProperty("cycleEndDate", cycleEndDate);
	}

	public Date getCycleEndDate()
	{
		return (Date) readProperty("cycleEndDate");
	}

	public void setCycleStartDate(Date cycleStartDate)
	{
		writeProperty("cycleStartDate", cycleStartDate);
	}

	public Date getCycleStartDate()
	{
		return (Date) readProperty("cycleStartDate");
	}

	public void setSplitCycleOpt(String splitCycleOpt)
	{
		writeProperty("splitCycleOpt", splitCycleOpt);
	}

	public String getSplitCycleOpt()
	{
		return (String) readProperty("splitCycleOpt");
	}

	public void setTimingCycleMth(String timingCycleMth)
	{
		writeProperty("timingCycleMth", timingCycleMth);
	}

	public String getTimingCycleMth()
	{
		return (String) readProperty("timingCycleMth");
	}

	public void setTimingCycleNum(Short timingCycleNum)
	{
		writeProperty("timingCycleNum", timingCycleNum);
	}

	public Short getTimingCycleNum()
	{
		return (Short) readProperty("timingCycleNum");
	}

	public void setTransId(Integer transId)
	{
		writeProperty("transId", transId);
	}

	public Integer getTransId()
	{
		return (Integer) readProperty("transId");
	}

	public void setCommodity(Commodity commodity)
	{
		setToOneTarget("commodity", commodity, true);
	}

	public Commodity getCommodity()
	{
		return (Commodity) readProperty("commodity");
	}

	public void setMot(Mot mot)
	{
		setToOneTarget("mot", mot, true);
	}

	public Mot getMot()
	{
		return (Mot) readProperty("mot");
	}

	public void addToTradeItemStorages(TradeItemStorage obj)
	{
		addToManyTarget("tradeItemStorages", obj, true);
	}

	public void removeFromTradeItemStorages(TradeItemStorage obj)
	{
		removeToManyTarget("tradeItemStorages", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeItemStorage> getTradeItemStorages()
	{
		return (List<TradeItemStorage>) readProperty("tradeItemStorages");
	}

	public void addToTradeItemTransports(TradeItemTransport obj)
	{
		addToManyTarget("tradeItemTransports", obj, true);
	}

	public void removeFromTradeItemTransports(TradeItemTransport obj)
	{
		removeToManyTarget("tradeItemTransports", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeItemTransport> getTradeItemTransports()
	{
		return (List<TradeItemTransport>) readProperty("tradeItemTransports");
	}

	public void addToTradeItemWetPhies(TradeItemWetPhy obj)
	{
		addToManyTarget("tradeItemWetPhies", obj, true);
	}

	public void removeFromTradeItemWetPhies(TradeItemWetPhy obj)
	{
		removeToManyTarget("tradeItemWetPhies", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeItemWetPhy> getTradeItemWetPhies()
	{
		return (List<TradeItemWetPhy>) readProperty("tradeItemWetPhies");
	}

}
