package com.tc.app.exchangemonitor.model.cayenne.persistent.auto;

import java.util.List;

import org.apache.cayenne.CayenneDataObject;
import org.apache.cayenne.exp.Property;

import com.tc.app.exchangemonitor.model.cayenne.persistent.AutopoolCriteria;
import com.tc.app.exchangemonitor.model.cayenne.persistent.BrokerCostAutogen;
import com.tc.app.exchangemonitor.model.cayenne.persistent.CommodityMarket;
import com.tc.app.exchangemonitor.model.cayenne.persistent.CommoditySpecification;
import com.tc.app.exchangemonitor.model.cayenne.persistent.Exposure;
import com.tc.app.exchangemonitor.model.cayenne.persistent.FbModularInfo;
import com.tc.app.exchangemonitor.model.cayenne.persistent.Inventory;
import com.tc.app.exchangemonitor.model.cayenne.persistent.MarketAlias;
import com.tc.app.exchangemonitor.model.cayenne.persistent.MarketPricingCosts;
import com.tc.app.exchangemonitor.model.cayenne.persistent.Position;
import com.tc.app.exchangemonitor.model.cayenne.persistent.PositionHistory;
import com.tc.app.exchangemonitor.model.cayenne.persistent.RealizaPriceFrgCost;
import com.tc.app.exchangemonitor.model.cayenne.persistent.ScenarioItem;
import com.tc.app.exchangemonitor.model.cayenne.persistent.Strategy;
import com.tc.app.exchangemonitor.model.cayenne.persistent.TiMarkToMarket;
import com.tc.app.exchangemonitor.model.cayenne.persistent.TradeItem;
import com.tc.app.exchangemonitor.model.cayenne.persistent.TradeItemCleared;
import com.tc.app.exchangemonitor.model.cayenne.persistent.TradeItemSpec;
import com.tc.app.exchangemonitor.model.cayenne.persistent.TradeOrderPosEffect;

/**
 * Class _Market was generated by Cayenne.
 * It is probably a good idea to avoid changing this class manually,
 * since it may be overwritten next time code is regenerated.
 * If you need to make any customizations, please use subclass.
 */
public abstract class _Market extends CayenneDataObject
{

	private static final long serialVersionUID = 1L;

	public static final String MKT_CODE_PK_COLUMN = "mkt_code";

	public static final Property<String> MKT_FULL_NAME = new Property<>("mktFullName");
	public static final Property<String> MKT_SHORT_NAME = new Property<>("mktShortName");
	public static final Property<String> MKT_STATUS = new Property<>("mktStatus");
	public static final Property<String> MKT_TYPE = new Property<>("mktType");
	public static final Property<Integer> TRANS_ID = new Property<>("transId");
	public static final Property<List<AutopoolCriteria>> AUTOPOOL_CRITERIAS = new Property<>("autopoolCriterias");
	public static final Property<List<BrokerCostAutogen>> BROKER_COST_AUTOGENS = new Property<>("brokerCostAutogens");
	public static final Property<List<CommodityMarket>> COMMODITY_MARKETS = new Property<>("commodityMarkets");
	public static final Property<List<CommoditySpecification>> COMMODITY_SPECIFICATIONS = new Property<>("commoditySpecifications");
	public static final Property<List<Exposure>> EXPOSURES = new Property<>("exposures");
	public static final Property<List<FbModularInfo>> FB_MODULAR_INFOES = new Property<>("fbModularInfoes");
	public static final Property<List<Inventory>> INVENTORIES = new Property<>("inventories");
	public static final Property<List<Inventory>> INVENTORIES1 = new Property<>("inventories1");
	public static final Property<MarketPricingCosts> MARKET = new Property<>("market");
	public static final Property<List<MarketAlias>> MARKET_ALIASS = new Property<>("marketAliass");
	public static final Property<List<PositionHistory>> POSITION_HISTORIES = new Property<>("positionHistories");
	public static final Property<List<Position>> POSITIONS = new Property<>("positions");
	public static final Property<List<RealizaPriceFrgCost>> REALIZA_PRICE_FRG_COSTS = new Property<>("realizaPriceFrgCosts");
	public static final Property<List<ScenarioItem>> SCENARIO_ITEMS = new Property<>("scenarioItems");
	public static final Property<List<Strategy>> STRATEGIES = new Property<>("strategies");
	public static final Property<List<TiMarkToMarket>> TI_MARK_TO_MARKETS = new Property<>("tiMarkToMarkets");
	public static final Property<List<TradeItemCleared>> TRADE_ITEM_CLEAREDS = new Property<>("tradeItemCleareds");
	public static final Property<List<TradeItemSpec>> TRADE_ITEM_SPECS = new Property<>("tradeItemSpecs");
	public static final Property<List<TradeItem>> TRADE_ITEMS = new Property<>("tradeItems");
	public static final Property<List<TradeItem>> TRADE_ITEMS1 = new Property<>("tradeItems1");
	public static final Property<List<TradeOrderPosEffect>> TRADE_ORDER_POS_EFFECTS = new Property<>("tradeOrderPosEffects");
	public static final Property<List<TradeOrderPosEffect>> TRADE_ORDER_POS_EFFECTS1 = new Property<>("tradeOrderPosEffects1");

	public void setMktFullName(final String mktFullName)
	{
		this.writeProperty("mktFullName", mktFullName);
	}

	public String getMktFullName()
	{
		return (String) this.readProperty("mktFullName");
	}

	public void setMktShortName(final String mktShortName)
	{
		this.writeProperty("mktShortName", mktShortName);
	}

	public String getMktShortName()
	{
		return (String) this.readProperty("mktShortName");
	}

	public void setMktStatus(final String mktStatus)
	{
		this.writeProperty("mktStatus", mktStatus);
	}

	public String getMktStatus()
	{
		return (String) this.readProperty("mktStatus");
	}

	public void setMktType(final String mktType)
	{
		this.writeProperty("mktType", mktType);
	}

	public String getMktType()
	{
		return (String) this.readProperty("mktType");
	}

	public void setTransId(final Integer transId)
	{
		this.writeProperty("transId", transId);
	}

	public Integer getTransId()
	{
		return (Integer) this.readProperty("transId");
	}

	public void addToAutopoolCriterias(final AutopoolCriteria obj)
	{
		this.addToManyTarget("autopoolCriterias", obj, true);
	}

	public void removeFromAutopoolCriterias(final AutopoolCriteria obj)
	{
		this.removeToManyTarget("autopoolCriterias", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<AutopoolCriteria> getAutopoolCriterias()
	{
		return (List<AutopoolCriteria>) this.readProperty("autopoolCriterias");
	}

	public void addToBrokerCostAutogens(final BrokerCostAutogen obj)
	{
		this.addToManyTarget("brokerCostAutogens", obj, true);
	}

	public void removeFromBrokerCostAutogens(final BrokerCostAutogen obj)
	{
		this.removeToManyTarget("brokerCostAutogens", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<BrokerCostAutogen> getBrokerCostAutogens()
	{
		return (List<BrokerCostAutogen>) this.readProperty("brokerCostAutogens");
	}

	public void addToCommodityMarkets(final CommodityMarket obj)
	{
		this.addToManyTarget("commodityMarkets", obj, true);
	}

	public void removeFromCommodityMarkets(final CommodityMarket obj)
	{
		this.removeToManyTarget("commodityMarkets", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<CommodityMarket> getCommodityMarkets()
	{
		return (List<CommodityMarket>) this.readProperty("commodityMarkets");
	}

	public void addToCommoditySpecifications(final CommoditySpecification obj)
	{
		this.addToManyTarget("commoditySpecifications", obj, true);
	}

	public void removeFromCommoditySpecifications(final CommoditySpecification obj)
	{
		this.removeToManyTarget("commoditySpecifications", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<CommoditySpecification> getCommoditySpecifications()
	{
		return (List<CommoditySpecification>) this.readProperty("commoditySpecifications");
	}

	public void addToExposures(final Exposure obj)
	{
		this.addToManyTarget("exposures", obj, true);
	}

	public void removeFromExposures(final Exposure obj)
	{
		this.removeToManyTarget("exposures", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<Exposure> getExposures()
	{
		return (List<Exposure>) this.readProperty("exposures");
	}

	public void addToFbModularInfoes(final FbModularInfo obj)
	{
		this.addToManyTarget("fbModularInfoes", obj, true);
	}

	public void removeFromFbModularInfoes(final FbModularInfo obj)
	{
		this.removeToManyTarget("fbModularInfoes", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<FbModularInfo> getFbModularInfoes()
	{
		return (List<FbModularInfo>) this.readProperty("fbModularInfoes");
	}

	public void addToInventories(final Inventory obj)
	{
		this.addToManyTarget("inventories", obj, true);
	}

	public void removeFromInventories(final Inventory obj)
	{
		this.removeToManyTarget("inventories", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<Inventory> getInventories()
	{
		return (List<Inventory>) this.readProperty("inventories");
	}

	public void addToInventories1(final Inventory obj)
	{
		this.addToManyTarget("inventories1", obj, true);
	}

	public void removeFromInventories1(final Inventory obj)
	{
		this.removeToManyTarget("inventories1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<Inventory> getInventories1()
	{
		return (List<Inventory>) this.readProperty("inventories1");
	}

	public void setMarket(final MarketPricingCosts market)
	{
		this.setToOneTarget("market", market, true);
	}

	public MarketPricingCosts getMarket()
	{
		return (MarketPricingCosts) this.readProperty("market");
	}

	public void addToMarketAliass(final MarketAlias obj)
	{
		this.addToManyTarget("marketAliass", obj, true);
	}

	public void removeFromMarketAliass(final MarketAlias obj)
	{
		this.removeToManyTarget("marketAliass", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<MarketAlias> getMarketAliass()
	{
		return (List<MarketAlias>) this.readProperty("marketAliass");
	}

	public void addToPositionHistories(final PositionHistory obj)
	{
		this.addToManyTarget("positionHistories", obj, true);
	}

	public void removeFromPositionHistories(final PositionHistory obj)
	{
		this.removeToManyTarget("positionHistories", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<PositionHistory> getPositionHistories()
	{
		return (List<PositionHistory>) this.readProperty("positionHistories");
	}

	public void addToPositions(final Position obj)
	{
		this.addToManyTarget("positions", obj, true);
	}

	public void removeFromPositions(final Position obj)
	{
		this.removeToManyTarget("positions", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<Position> getPositions()
	{
		return (List<Position>) this.readProperty("positions");
	}

	public void addToRealizaPriceFrgCosts(final RealizaPriceFrgCost obj)
	{
		this.addToManyTarget("realizaPriceFrgCosts", obj, true);
	}

	public void removeFromRealizaPriceFrgCosts(final RealizaPriceFrgCost obj)
	{
		this.removeToManyTarget("realizaPriceFrgCosts", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<RealizaPriceFrgCost> getRealizaPriceFrgCosts()
	{
		return (List<RealizaPriceFrgCost>) this.readProperty("realizaPriceFrgCosts");
	}

	public void addToScenarioItems(final ScenarioItem obj)
	{
		this.addToManyTarget("scenarioItems", obj, true);
	}

	public void removeFromScenarioItems(final ScenarioItem obj)
	{
		this.removeToManyTarget("scenarioItems", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<ScenarioItem> getScenarioItems()
	{
		return (List<ScenarioItem>) this.readProperty("scenarioItems");
	}

	public void addToStrategies(final Strategy obj)
	{
		this.addToManyTarget("strategies", obj, true);
	}

	public void removeFromStrategies(final Strategy obj)
	{
		this.removeToManyTarget("strategies", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<Strategy> getStrategies()
	{
		return (List<Strategy>) this.readProperty("strategies");
	}

	public void addToTiMarkToMarkets(final TiMarkToMarket obj)
	{
		this.addToManyTarget("tiMarkToMarkets", obj, true);
	}

	public void removeFromTiMarkToMarkets(final TiMarkToMarket obj)
	{
		this.removeToManyTarget("tiMarkToMarkets", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TiMarkToMarket> getTiMarkToMarkets()
	{
		return (List<TiMarkToMarket>) this.readProperty("tiMarkToMarkets");
	}

	public void addToTradeItemCleareds(final TradeItemCleared obj)
	{
		this.addToManyTarget("tradeItemCleareds", obj, true);
	}

	public void removeFromTradeItemCleareds(final TradeItemCleared obj)
	{
		this.removeToManyTarget("tradeItemCleareds", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeItemCleared> getTradeItemCleareds()
	{
		return (List<TradeItemCleared>) this.readProperty("tradeItemCleareds");
	}

	public void addToTradeItemSpecs(final TradeItemSpec obj)
	{
		this.addToManyTarget("tradeItemSpecs", obj, true);
	}

	public void removeFromTradeItemSpecs(final TradeItemSpec obj)
	{
		this.removeToManyTarget("tradeItemSpecs", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeItemSpec> getTradeItemSpecs()
	{
		return (List<TradeItemSpec>) this.readProperty("tradeItemSpecs");
	}

	public void addToTradeItems(final TradeItem obj)
	{
		this.addToManyTarget("tradeItems", obj, true);
	}

	public void removeFromTradeItems(final TradeItem obj)
	{
		this.removeToManyTarget("tradeItems", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeItem> getTradeItems()
	{
		return (List<TradeItem>) this.readProperty("tradeItems");
	}

	public void addToTradeItems1(final TradeItem obj)
	{
		this.addToManyTarget("tradeItems1", obj, true);
	}

	public void removeFromTradeItems1(final TradeItem obj)
	{
		this.removeToManyTarget("tradeItems1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeItem> getTradeItems1()
	{
		return (List<TradeItem>) this.readProperty("tradeItems1");
	}

	public void addToTradeOrderPosEffects(final TradeOrderPosEffect obj)
	{
		this.addToManyTarget("tradeOrderPosEffects", obj, true);
	}

	public void removeFromTradeOrderPosEffects(final TradeOrderPosEffect obj)
	{
		this.removeToManyTarget("tradeOrderPosEffects", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeOrderPosEffect> getTradeOrderPosEffects()
	{
		return (List<TradeOrderPosEffect>) this.readProperty("tradeOrderPosEffects");
	}

	public void addToTradeOrderPosEffects1(final TradeOrderPosEffect obj)
	{
		this.addToManyTarget("tradeOrderPosEffects1", obj, true);
	}

	public void removeFromTradeOrderPosEffects1(final TradeOrderPosEffect obj)
	{
		this.removeToManyTarget("tradeOrderPosEffects1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeOrderPosEffect> getTradeOrderPosEffects1()
	{
		return (List<TradeOrderPosEffect>) this.readProperty("tradeOrderPosEffects1");
	}

}
