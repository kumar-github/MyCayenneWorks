package com.tc.app.exchangemonitor.model.cayenne.persistent.auto;

import org.apache.cayenne.CayenneDataObject;
import org.apache.cayenne.exp.Property;

import com.tc.app.exchangemonitor.model.cayenne.persistent.Commodity;
import com.tc.app.exchangemonitor.model.cayenne.persistent.FlatRates;
import com.tc.app.exchangemonitor.model.cayenne.persistent.Market;

/**
 * Class _RealizaPriceFrgCost was generated by Cayenne.
 * It is probably a good idea to avoid changing this class manually,
 * since it may be overwritten next time code is regenerated.
 * If you need to make any customizations, please use subclass.
 */
public abstract class _RealizaPriceFrgCost extends CayenneDataObject
{

	private static final long serialVersionUID = 1L;

	public static final String CRUDE_CMDTY_CODE_PK_COLUMN = "crude_cmdty_code";
	public static final String MKT_CODE_PK_COLUMN = "mkt_code";

	public static final Property<Integer> TRANS_ID = new Property<Integer>("transId");
	public static final Property<String> WS_CODE = new Property<String>("wsCode");
	public static final Property<Commodity> COMMODITY = new Property<Commodity>("commodity");
	public static final Property<FlatRates> FLAT_RATES = new Property<FlatRates>("flatRates");
	public static final Property<Market> MARKET = new Property<Market>("market");

	public void setTransId(Integer transId)
	{
		writeProperty("transId", transId);
	}

	public Integer getTransId()
	{
		return (Integer) readProperty("transId");
	}

	public void setWsCode(String wsCode)
	{
		writeProperty("wsCode", wsCode);
	}

	public String getWsCode()
	{
		return (String) readProperty("wsCode");
	}

	public void setCommodity(Commodity commodity)
	{
		setToOneTarget("commodity", commodity, true);
	}

	public Commodity getCommodity()
	{
		return (Commodity) readProperty("commodity");
	}

	public void setFlatRates(FlatRates flatRates)
	{
		setToOneTarget("flatRates", flatRates, true);
	}

	public FlatRates getFlatRates()
	{
		return (FlatRates) readProperty("flatRates");
	}

	public void setMarket(Market market)
	{
		setToOneTarget("market", market, true);
	}

	public Market getMarket()
	{
		return (Market) readProperty("market");
	}

}
