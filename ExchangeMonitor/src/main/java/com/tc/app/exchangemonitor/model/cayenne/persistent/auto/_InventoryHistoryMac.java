package com.tc.app.exchangemonitor.model.cayenne.persistent.auto;

import java.math.BigDecimal;
import java.util.Date;

import org.apache.cayenne.CayenneDataObject;
import org.apache.cayenne.exp.Property;

/**
 * Class _InventoryHistoryMac was generated by Cayenne.
 * It is probably a good idea to avoid changing this class manually,
 * since it may be overwritten next time code is regenerated.
 * If you need to make any customizations, please use subclass.
 */
public abstract class _InventoryHistoryMac extends CayenneDataObject
{

	private static final long serialVersionUID = 1L;

	public static final String INV_HISTORY_MAC_NUM_PK_COLUMN = "inv_history_mac_num";

	public static final Property<Date> AI_EST_ACTUAL_DATE = new Property<Date>("aiEstActualDate");
	public static final Property<Integer> AMT_OWNER_NUM = new Property<Integer>("amtOwnerNum");
	public static final Property<String> AMT_OWNER_TYPE = new Property<String>("amtOwnerType");
	public static final Property<Date> ASOF_DATE = new Property<Date>("asofDate");
	public static final Property<BigDecimal> COST_AMT_RATIO = new Property<BigDecimal>("costAmtRatio");
	public static final Property<String> COST_TYPE_CODE = new Property<String>("costTypeCode");
	public static final Property<Short> DLVRY_AI_EST_ACTUAL_NUM = new Property<Short>("dlvryAiEstActualNum");
	public static final Property<Short> DLVRY_ALLOC_ITEM_NUM = new Property<Short>("dlvryAllocItemNum");
	public static final Property<Integer> DLVRY_ALLOC_NUM = new Property<Integer>("dlvryAllocNum");
	public static final Property<Short> DRAW_AI_EST_ACTUAL_NUM = new Property<Short>("drawAiEstActualNum");
	public static final Property<Short> DRAW_ALLOC_ITEM_NUM = new Property<Short>("drawAllocItemNum");
	public static final Property<Integer> DRAW_ALLOC_NUM = new Property<Integer>("drawAllocNum");
	public static final Property<Integer> INV_NUM = new Property<Integer>("invNum");
	public static final Property<BigDecimal> R_COST_AMT = new Property<BigDecimal>("rCostAmt");
	public static final Property<Integer> REAL_PORT_NUM = new Property<Integer>("realPortNum");
	public static final Property<Integer> TRANS_ID = new Property<Integer>("transId");
	public static final Property<BigDecimal> UNR_COST_AMT = new Property<BigDecimal>("unrCostAmt");

	public void setAiEstActualDate(Date aiEstActualDate)
	{
		writeProperty("aiEstActualDate", aiEstActualDate);
	}

	public Date getAiEstActualDate()
	{
		return (Date) readProperty("aiEstActualDate");
	}

	public void setAmtOwnerNum(Integer amtOwnerNum)
	{
		writeProperty("amtOwnerNum", amtOwnerNum);
	}

	public Integer getAmtOwnerNum()
	{
		return (Integer) readProperty("amtOwnerNum");
	}

	public void setAmtOwnerType(String amtOwnerType)
	{
		writeProperty("amtOwnerType", amtOwnerType);
	}

	public String getAmtOwnerType()
	{
		return (String) readProperty("amtOwnerType");
	}

	public void setAsofDate(Date asofDate)
	{
		writeProperty("asofDate", asofDate);
	}

	public Date getAsofDate()
	{
		return (Date) readProperty("asofDate");
	}

	public void setCostAmtRatio(BigDecimal costAmtRatio)
	{
		writeProperty("costAmtRatio", costAmtRatio);
	}

	public BigDecimal getCostAmtRatio()
	{
		return (BigDecimal) readProperty("costAmtRatio");
	}

	public void setCostTypeCode(String costTypeCode)
	{
		writeProperty("costTypeCode", costTypeCode);
	}

	public String getCostTypeCode()
	{
		return (String) readProperty("costTypeCode");
	}

	public void setDlvryAiEstActualNum(Short dlvryAiEstActualNum)
	{
		writeProperty("dlvryAiEstActualNum", dlvryAiEstActualNum);
	}

	public Short getDlvryAiEstActualNum()
	{
		return (Short) readProperty("dlvryAiEstActualNum");
	}

	public void setDlvryAllocItemNum(Short dlvryAllocItemNum)
	{
		writeProperty("dlvryAllocItemNum", dlvryAllocItemNum);
	}

	public Short getDlvryAllocItemNum()
	{
		return (Short) readProperty("dlvryAllocItemNum");
	}

	public void setDlvryAllocNum(Integer dlvryAllocNum)
	{
		writeProperty("dlvryAllocNum", dlvryAllocNum);
	}

	public Integer getDlvryAllocNum()
	{
		return (Integer) readProperty("dlvryAllocNum");
	}

	public void setDrawAiEstActualNum(Short drawAiEstActualNum)
	{
		writeProperty("drawAiEstActualNum", drawAiEstActualNum);
	}

	public Short getDrawAiEstActualNum()
	{
		return (Short) readProperty("drawAiEstActualNum");
	}

	public void setDrawAllocItemNum(Short drawAllocItemNum)
	{
		writeProperty("drawAllocItemNum", drawAllocItemNum);
	}

	public Short getDrawAllocItemNum()
	{
		return (Short) readProperty("drawAllocItemNum");
	}

	public void setDrawAllocNum(Integer drawAllocNum)
	{
		writeProperty("drawAllocNum", drawAllocNum);
	}

	public Integer getDrawAllocNum()
	{
		return (Integer) readProperty("drawAllocNum");
	}

	public void setInvNum(Integer invNum)
	{
		writeProperty("invNum", invNum);
	}

	public Integer getInvNum()
	{
		return (Integer) readProperty("invNum");
	}

	public void setRCostAmt(BigDecimal rCostAmt)
	{
		writeProperty("rCostAmt", rCostAmt);
	}

	public BigDecimal getRCostAmt()
	{
		return (BigDecimal) readProperty("rCostAmt");
	}

	public void setRealPortNum(Integer realPortNum)
	{
		writeProperty("realPortNum", realPortNum);
	}

	public Integer getRealPortNum()
	{
		return (Integer) readProperty("realPortNum");
	}

	public void setTransId(Integer transId)
	{
		writeProperty("transId", transId);
	}

	public Integer getTransId()
	{
		return (Integer) readProperty("transId");
	}

	public void setUnrCostAmt(BigDecimal unrCostAmt)
	{
		writeProperty("unrCostAmt", unrCostAmt);
	}

	public BigDecimal getUnrCostAmt()
	{
		return (BigDecimal) readProperty("unrCostAmt");
	}

}
