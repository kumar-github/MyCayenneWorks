package com.tc.app.exchangemonitor.model.cayenne.persistent.auto;

import java.math.BigDecimal;

import org.apache.cayenne.CayenneDataObject;
import org.apache.cayenne.exp.Property;

/**
 * Class _VTradeItemSpecRev was generated by Cayenne.
 * It is probably a good idea to avoid changing this class manually,
 * since it may be overwritten next time code is regenerated.
 * If you need to make any customizations, please use subclass.
 */
public abstract class _VTradeItemSpecRev extends CayenneDataObject
{

	private static final long serialVersionUID = 1L;

	public static final Property<Integer> ASOF_TRANS_ID = new Property<Integer>("asofTransId");
	public static final Property<Integer> CMNT_NUM = new Property<Integer>("cmntNum");
	public static final Property<String> EQUIV_DEL_CMDTY_CODE = new Property<String>("equivDelCmdtyCode");
	public static final Property<String> EQUIV_DEL_MKT_CODE = new Property<String>("equivDelMktCode");
	public static final Property<String> EQUIV_PAY_DEDUCT_IND = new Property<String>("equivPayDeductInd");
	public static final Property<Short> ITEM_NUM = new Property<Short>("itemNum");
	public static final Property<Short> ORDER_NUM = new Property<Short>("orderNum");
	public static final Property<String> PROVISIONAL_SPEC_OPT_VAL = new Property<String>("provisionalSpecOptVal");
	public static final Property<String> PROVISIONAL_TEXT_VAL = new Property<String>("provisionalTextVal");
	public static final Property<Integer> RESP_TRANS_ID = new Property<Integer>("respTransId");
	public static final Property<String> SPEC_CODE = new Property<String>("specCode");
	public static final Property<Double> SPEC_MAX_VAL = new Property<Double>("specMaxVal");
	public static final Property<Double> SPEC_MIN_VAL = new Property<Double>("specMinVal");
	public static final Property<Double> SPEC_PROVISIONAL_VAL = new Property<Double>("specProvisionalVal");
	public static final Property<String> SPEC_TEST_CODE = new Property<String>("specTestCode");
	public static final Property<Double> SPEC_TYPICAL_VAL = new Property<Double>("specTypicalVal");
	public static final Property<BigDecimal> SPLITTING_LIMIT = new Property<BigDecimal>("splittingLimit");
	public static final Property<Integer> TRADE_NUM = new Property<Integer>("tradeNum");
	public static final Property<Integer> TRANS_ID = new Property<Integer>("transId");
	public static final Property<String> TYPICAL_SPEC_OPT_VAL = new Property<String>("typicalSpecOptVal");
	public static final Property<String> TYPICAL_TEXT_VAL = new Property<String>("typicalTextVal");

	public void setAsofTransId(Integer asofTransId)
	{
		writeProperty("asofTransId", asofTransId);
	}

	public Integer getAsofTransId()
	{
		return (Integer) readProperty("asofTransId");
	}

	public void setCmntNum(Integer cmntNum)
	{
		writeProperty("cmntNum", cmntNum);
	}

	public Integer getCmntNum()
	{
		return (Integer) readProperty("cmntNum");
	}

	public void setEquivDelCmdtyCode(String equivDelCmdtyCode)
	{
		writeProperty("equivDelCmdtyCode", equivDelCmdtyCode);
	}

	public String getEquivDelCmdtyCode()
	{
		return (String) readProperty("equivDelCmdtyCode");
	}

	public void setEquivDelMktCode(String equivDelMktCode)
	{
		writeProperty("equivDelMktCode", equivDelMktCode);
	}

	public String getEquivDelMktCode()
	{
		return (String) readProperty("equivDelMktCode");
	}

	public void setEquivPayDeductInd(String equivPayDeductInd)
	{
		writeProperty("equivPayDeductInd", equivPayDeductInd);
	}

	public String getEquivPayDeductInd()
	{
		return (String) readProperty("equivPayDeductInd");
	}

	public void setItemNum(Short itemNum)
	{
		writeProperty("itemNum", itemNum);
	}

	public Short getItemNum()
	{
		return (Short) readProperty("itemNum");
	}

	public void setOrderNum(Short orderNum)
	{
		writeProperty("orderNum", orderNum);
	}

	public Short getOrderNum()
	{
		return (Short) readProperty("orderNum");
	}

	public void setProvisionalSpecOptVal(String provisionalSpecOptVal)
	{
		writeProperty("provisionalSpecOptVal", provisionalSpecOptVal);
	}

	public String getProvisionalSpecOptVal()
	{
		return (String) readProperty("provisionalSpecOptVal");
	}

	public void setProvisionalTextVal(String provisionalTextVal)
	{
		writeProperty("provisionalTextVal", provisionalTextVal);
	}

	public String getProvisionalTextVal()
	{
		return (String) readProperty("provisionalTextVal");
	}

	public void setRespTransId(Integer respTransId)
	{
		writeProperty("respTransId", respTransId);
	}

	public Integer getRespTransId()
	{
		return (Integer) readProperty("respTransId");
	}

	public void setSpecCode(String specCode)
	{
		writeProperty("specCode", specCode);
	}

	public String getSpecCode()
	{
		return (String) readProperty("specCode");
	}

	public void setSpecMaxVal(Double specMaxVal)
	{
		writeProperty("specMaxVal", specMaxVal);
	}

	public Double getSpecMaxVal()
	{
		return (Double) readProperty("specMaxVal");
	}

	public void setSpecMinVal(Double specMinVal)
	{
		writeProperty("specMinVal", specMinVal);
	}

	public Double getSpecMinVal()
	{
		return (Double) readProperty("specMinVal");
	}

	public void setSpecProvisionalVal(Double specProvisionalVal)
	{
		writeProperty("specProvisionalVal", specProvisionalVal);
	}

	public Double getSpecProvisionalVal()
	{
		return (Double) readProperty("specProvisionalVal");
	}

	public void setSpecTestCode(String specTestCode)
	{
		writeProperty("specTestCode", specTestCode);
	}

	public String getSpecTestCode()
	{
		return (String) readProperty("specTestCode");
	}

	public void setSpecTypicalVal(Double specTypicalVal)
	{
		writeProperty("specTypicalVal", specTypicalVal);
	}

	public Double getSpecTypicalVal()
	{
		return (Double) readProperty("specTypicalVal");
	}

	public void setSplittingLimit(BigDecimal splittingLimit)
	{
		writeProperty("splittingLimit", splittingLimit);
	}

	public BigDecimal getSplittingLimit()
	{
		return (BigDecimal) readProperty("splittingLimit");
	}

	public void setTradeNum(Integer tradeNum)
	{
		writeProperty("tradeNum", tradeNum);
	}

	public Integer getTradeNum()
	{
		return (Integer) readProperty("tradeNum");
	}

	public void setTransId(Integer transId)
	{
		writeProperty("transId", transId);
	}

	public Integer getTransId()
	{
		return (Integer) readProperty("transId");
	}

	public void setTypicalSpecOptVal(String typicalSpecOptVal)
	{
		writeProperty("typicalSpecOptVal", typicalSpecOptVal);
	}

	public String getTypicalSpecOptVal()
	{
		return (String) readProperty("typicalSpecOptVal");
	}

	public void setTypicalTextVal(String typicalTextVal)
	{
		writeProperty("typicalTextVal", typicalTextVal);
	}

	public String getTypicalTextVal()
	{
		return (String) readProperty("typicalTextVal");
	}

}
