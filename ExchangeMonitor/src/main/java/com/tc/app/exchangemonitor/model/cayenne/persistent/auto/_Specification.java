package com.tc.app.exchangemonitor.model.cayenne.persistent.auto;

import java.math.BigDecimal;
import java.util.List;

import org.apache.cayenne.CayenneDataObject;
import org.apache.cayenne.exp.Property;

import com.tc.app.exchangemonitor.model.cayenne.persistent.AiEstActualSpec;
import com.tc.app.exchangemonitor.model.cayenne.persistent.AllocationItemSpec;
import com.tc.app.exchangemonitor.model.cayenne.persistent.CommoditySpecification;
import com.tc.app.exchangemonitor.model.cayenne.persistent.InvBuildDrawSpec;
import com.tc.app.exchangemonitor.model.cayenne.persistent.QualSlateCmdtySpec;
import com.tc.app.exchangemonitor.model.cayenne.persistent.SpecTest;
import com.tc.app.exchangemonitor.model.cayenne.persistent.SpecificationGroup;
import com.tc.app.exchangemonitor.model.cayenne.persistent.SpecificationOption;
import com.tc.app.exchangemonitor.model.cayenne.persistent.TradeItemDist;
import com.tc.app.exchangemonitor.model.cayenne.persistent.TradeItemSpec;
import com.tc.app.exchangemonitor.model.cayenne.persistent.Uom;

/**
 * Class _Specification was generated by Cayenne.
 * It is probably a good idea to avoid changing this class manually,
 * since it may be overwritten next time code is regenerated.
 * If you need to make any customizations, please use subclass.
 */
public abstract class _Specification extends CayenneDataObject
{

	private static final long serialVersionUID = 1L;

	public static final String SPEC_CODE_PK_COLUMN = "spec_code";

	public static final Property<String> IS_TI_VAL_ONLY = new Property<String>("isTiValOnly");
	public static final Property<Short> SORT_ORDERING_VALUE = new Property<Short>("sortOrderingValue");
	public static final Property<String> SPEC_DESC = new Property<String>("specDesc");
	public static final Property<String> SPEC_TYPE = new Property<String>("specType");
	public static final Property<BigDecimal> SPEC_UOM_RATIO_FACTOR = new Property<BigDecimal>("specUomRatioFactor");
	public static final Property<String> SPEC_VAL_UOM_CODE = new Property<String>("specValUomCode");
	public static final Property<Integer> TRANS_ID = new Property<Integer>("transId");
	public static final Property<List<AiEstActualSpec>> AI_EST_ACTUAL_SPECS = new Property<List<AiEstActualSpec>>("aiEstActualSpecs");
	public static final Property<List<AllocationItemSpec>> ALLOCATION_ITEM_SPECS = new Property<List<AllocationItemSpec>>("allocationItemSpecs");
	public static final Property<List<CommoditySpecification>> COMMODITY_SPECIFICATIONS = new Property<List<CommoditySpecification>>("commoditySpecifications");
	public static final Property<List<InvBuildDrawSpec>> INV_BUILD_DRAW_SPECS = new Property<List<InvBuildDrawSpec>>("invBuildDrawSpecs");
	public static final Property<List<QualSlateCmdtySpec>> QUAL_SLATE_CMDTY_SPECS = new Property<List<QualSlateCmdtySpec>>("qualSlateCmdtySpecs");
	public static final Property<List<SpecTest>> SPEC_TESTS = new Property<List<SpecTest>>("specTests");
	public static final Property<SpecificationGroup> SPECIFICATION_GROUP = new Property<SpecificationGroup>("specificationGroup");
	public static final Property<List<SpecificationOption>> SPECIFICATION_OPTIONS = new Property<List<SpecificationOption>>("specificationOptions");
	public static final Property<List<TradeItemDist>> TRADE_ITEM_DISTS = new Property<List<TradeItemDist>>("tradeItemDists");
	public static final Property<List<TradeItemSpec>> TRADE_ITEM_SPECS = new Property<List<TradeItemSpec>>("tradeItemSpecs");
	public static final Property<Uom> UOM = new Property<Uom>("uom");
	public static final Property<List<Uom>> UOMS = new Property<List<Uom>>("uoms");
	public static final Property<List<Uom>> UOMS1 = new Property<List<Uom>>("uoms1");

	public void setIsTiValOnly(String isTiValOnly)
	{
		writeProperty("isTiValOnly", isTiValOnly);
	}

	public String getIsTiValOnly()
	{
		return (String) readProperty("isTiValOnly");
	}

	public void setSortOrderingValue(Short sortOrderingValue)
	{
		writeProperty("sortOrderingValue", sortOrderingValue);
	}

	public Short getSortOrderingValue()
	{
		return (Short) readProperty("sortOrderingValue");
	}

	public void setSpecDesc(String specDesc)
	{
		writeProperty("specDesc", specDesc);
	}

	public String getSpecDesc()
	{
		return (String) readProperty("specDesc");
	}

	public void setSpecType(String specType)
	{
		writeProperty("specType", specType);
	}

	public String getSpecType()
	{
		return (String) readProperty("specType");
	}

	public void setSpecUomRatioFactor(BigDecimal specUomRatioFactor)
	{
		writeProperty("specUomRatioFactor", specUomRatioFactor);
	}

	public BigDecimal getSpecUomRatioFactor()
	{
		return (BigDecimal) readProperty("specUomRatioFactor");
	}

	public void setSpecValUomCode(String specValUomCode)
	{
		writeProperty("specValUomCode", specValUomCode);
	}

	public String getSpecValUomCode()
	{
		return (String) readProperty("specValUomCode");
	}

	public void setTransId(Integer transId)
	{
		writeProperty("transId", transId);
	}

	public Integer getTransId()
	{
		return (Integer) readProperty("transId");
	}

	public void addToAiEstActualSpecs(AiEstActualSpec obj)
	{
		addToManyTarget("aiEstActualSpecs", obj, true);
	}

	public void removeFromAiEstActualSpecs(AiEstActualSpec obj)
	{
		removeToManyTarget("aiEstActualSpecs", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<AiEstActualSpec> getAiEstActualSpecs()
	{
		return (List<AiEstActualSpec>) readProperty("aiEstActualSpecs");
	}

	public void addToAllocationItemSpecs(AllocationItemSpec obj)
	{
		addToManyTarget("allocationItemSpecs", obj, true);
	}

	public void removeFromAllocationItemSpecs(AllocationItemSpec obj)
	{
		removeToManyTarget("allocationItemSpecs", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<AllocationItemSpec> getAllocationItemSpecs()
	{
		return (List<AllocationItemSpec>) readProperty("allocationItemSpecs");
	}

	public void addToCommoditySpecifications(CommoditySpecification obj)
	{
		addToManyTarget("commoditySpecifications", obj, true);
	}

	public void removeFromCommoditySpecifications(CommoditySpecification obj)
	{
		removeToManyTarget("commoditySpecifications", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<CommoditySpecification> getCommoditySpecifications()
	{
		return (List<CommoditySpecification>) readProperty("commoditySpecifications");
	}

	public void addToInvBuildDrawSpecs(InvBuildDrawSpec obj)
	{
		addToManyTarget("invBuildDrawSpecs", obj, true);
	}

	public void removeFromInvBuildDrawSpecs(InvBuildDrawSpec obj)
	{
		removeToManyTarget("invBuildDrawSpecs", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<InvBuildDrawSpec> getInvBuildDrawSpecs()
	{
		return (List<InvBuildDrawSpec>) readProperty("invBuildDrawSpecs");
	}

	public void addToQualSlateCmdtySpecs(QualSlateCmdtySpec obj)
	{
		addToManyTarget("qualSlateCmdtySpecs", obj, true);
	}

	public void removeFromQualSlateCmdtySpecs(QualSlateCmdtySpec obj)
	{
		removeToManyTarget("qualSlateCmdtySpecs", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<QualSlateCmdtySpec> getQualSlateCmdtySpecs()
	{
		return (List<QualSlateCmdtySpec>) readProperty("qualSlateCmdtySpecs");
	}

	public void addToSpecTests(SpecTest obj)
	{
		addToManyTarget("specTests", obj, true);
	}

	public void removeFromSpecTests(SpecTest obj)
	{
		removeToManyTarget("specTests", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<SpecTest> getSpecTests()
	{
		return (List<SpecTest>) readProperty("specTests");
	}

	public void setSpecificationGroup(SpecificationGroup specificationGroup)
	{
		setToOneTarget("specificationGroup", specificationGroup, true);
	}

	public SpecificationGroup getSpecificationGroup()
	{
		return (SpecificationGroup) readProperty("specificationGroup");
	}

	public void addToSpecificationOptions(SpecificationOption obj)
	{
		addToManyTarget("specificationOptions", obj, true);
	}

	public void removeFromSpecificationOptions(SpecificationOption obj)
	{
		removeToManyTarget("specificationOptions", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<SpecificationOption> getSpecificationOptions()
	{
		return (List<SpecificationOption>) readProperty("specificationOptions");
	}

	public void addToTradeItemDists(TradeItemDist obj)
	{
		addToManyTarget("tradeItemDists", obj, true);
	}

	public void removeFromTradeItemDists(TradeItemDist obj)
	{
		removeToManyTarget("tradeItemDists", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeItemDist> getTradeItemDists()
	{
		return (List<TradeItemDist>) readProperty("tradeItemDists");
	}

	public void addToTradeItemSpecs(TradeItemSpec obj)
	{
		addToManyTarget("tradeItemSpecs", obj, true);
	}

	public void removeFromTradeItemSpecs(TradeItemSpec obj)
	{
		removeToManyTarget("tradeItemSpecs", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeItemSpec> getTradeItemSpecs()
	{
		return (List<TradeItemSpec>) readProperty("tradeItemSpecs");
	}

	public void setUom(Uom uom)
	{
		setToOneTarget("uom", uom, true);
	}

	public Uom getUom()
	{
		return (Uom) readProperty("uom");
	}

	public void addToUoms(Uom obj)
	{
		addToManyTarget("uoms", obj, true);
	}

	public void removeFromUoms(Uom obj)
	{
		removeToManyTarget("uoms", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<Uom> getUoms()
	{
		return (List<Uom>) readProperty("uoms");
	}

	public void addToUoms1(Uom obj)
	{
		addToManyTarget("uoms1", obj, true);
	}

	public void removeFromUoms1(Uom obj)
	{
		removeToManyTarget("uoms1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<Uom> getUoms1()
	{
		return (List<Uom>) readProperty("uoms1");
	}

}
