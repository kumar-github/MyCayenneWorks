package com.tc.app.exchangemonitor.model.cayenne.persistent.auto;

import java.math.BigDecimal;

import org.apache.cayenne.CayenneDataObject;
import org.apache.cayenne.exp.Property;

import com.tc.app.exchangemonitor.model.cayenne.persistent.Commodity;
import com.tc.app.exchangemonitor.model.cayenne.persistent.Market;
import com.tc.app.exchangemonitor.model.cayenne.persistent.Specification;
import com.tc.app.exchangemonitor.model.cayenne.persistent.SpecificationOption;

/**
 * Class _TradeItemSpec was generated by Cayenne.
 * It is probably a good idea to avoid changing this class manually,
 * since it may be overwritten next time code is regenerated.
 * If you need to make any customizations, please use subclass.
 */
public abstract class _TradeItemSpec extends CayenneDataObject
{

	private static final long serialVersionUID = 1L;

	public static final String ITEM_NUM_PK_COLUMN = "item_num";
	public static final String ORDER_NUM_PK_COLUMN = "order_num";
	public static final String SPEC_CODE_PK_COLUMN = "spec_code";
	public static final String TRADE_NUM_PK_COLUMN = "trade_num";

	public static final Property<Integer> CMNT_NUM = new Property<Integer>("cmntNum");
	public static final Property<String> EQUIV_PAY_DEDUCT_IND = new Property<String>("equivPayDeductInd");
	public static final Property<String> PROVISIONAL_TEXT_VAL = new Property<String>("provisionalTextVal");
	public static final Property<Double> SPEC_MAX_VAL = new Property<Double>("specMaxVal");
	public static final Property<Double> SPEC_MIN_VAL = new Property<Double>("specMinVal");
	public static final Property<Double> SPEC_PROVISIONAL_VAL = new Property<Double>("specProvisionalVal");
	public static final Property<String> SPEC_TEST_CODE = new Property<String>("specTestCode");
	public static final Property<Double> SPEC_TYPICAL_VAL = new Property<Double>("specTypicalVal");
	public static final Property<BigDecimal> SPLITTING_LIMIT = new Property<BigDecimal>("splittingLimit");
	public static final Property<Integer> TRANS_ID = new Property<Integer>("transId");
	public static final Property<String> TYPICAL_TEXT_VAL = new Property<String>("typicalTextVal");
	public static final Property<Commodity> COMMODITY = new Property<Commodity>("commodity");
	public static final Property<Market> MARKET = new Property<Market>("market");
	public static final Property<Specification> SPECIFICATION = new Property<Specification>("specification");
	public static final Property<SpecificationOption> SPECIFICATION_OPTION = new Property<SpecificationOption>("specificationOption");
	public static final Property<SpecificationOption> SPECIFICATION_OPTION1 = new Property<SpecificationOption>("specificationOption1");
	public static final Property<SpecificationOption> SPECIFICATION_OPTION2 = new Property<SpecificationOption>("specificationOption2");

	public void setCmntNum(Integer cmntNum)
	{
		writeProperty("cmntNum", cmntNum);
	}

	public Integer getCmntNum()
	{
		return (Integer) readProperty("cmntNum");
	}

	public void setEquivPayDeductInd(String equivPayDeductInd)
	{
		writeProperty("equivPayDeductInd", equivPayDeductInd);
	}

	public String getEquivPayDeductInd()
	{
		return (String) readProperty("equivPayDeductInd");
	}

	public void setProvisionalTextVal(String provisionalTextVal)
	{
		writeProperty("provisionalTextVal", provisionalTextVal);
	}

	public String getProvisionalTextVal()
	{
		return (String) readProperty("provisionalTextVal");
	}

	public void setSpecMaxVal(Double specMaxVal)
	{
		writeProperty("specMaxVal", specMaxVal);
	}

	public Double getSpecMaxVal()
	{
		return (Double) readProperty("specMaxVal");
	}

	public void setSpecMinVal(Double specMinVal)
	{
		writeProperty("specMinVal", specMinVal);
	}

	public Double getSpecMinVal()
	{
		return (Double) readProperty("specMinVal");
	}

	public void setSpecProvisionalVal(Double specProvisionalVal)
	{
		writeProperty("specProvisionalVal", specProvisionalVal);
	}

	public Double getSpecProvisionalVal()
	{
		return (Double) readProperty("specProvisionalVal");
	}

	public void setSpecTestCode(String specTestCode)
	{
		writeProperty("specTestCode", specTestCode);
	}

	public String getSpecTestCode()
	{
		return (String) readProperty("specTestCode");
	}

	public void setSpecTypicalVal(Double specTypicalVal)
	{
		writeProperty("specTypicalVal", specTypicalVal);
	}

	public Double getSpecTypicalVal()
	{
		return (Double) readProperty("specTypicalVal");
	}

	public void setSplittingLimit(BigDecimal splittingLimit)
	{
		writeProperty("splittingLimit", splittingLimit);
	}

	public BigDecimal getSplittingLimit()
	{
		return (BigDecimal) readProperty("splittingLimit");
	}

	public void setTransId(Integer transId)
	{
		writeProperty("transId", transId);
	}

	public Integer getTransId()
	{
		return (Integer) readProperty("transId");
	}

	public void setTypicalTextVal(String typicalTextVal)
	{
		writeProperty("typicalTextVal", typicalTextVal);
	}

	public String getTypicalTextVal()
	{
		return (String) readProperty("typicalTextVal");
	}

	public void setCommodity(Commodity commodity)
	{
		setToOneTarget("commodity", commodity, true);
	}

	public Commodity getCommodity()
	{
		return (Commodity) readProperty("commodity");
	}

	public void setMarket(Market market)
	{
		setToOneTarget("market", market, true);
	}

	public Market getMarket()
	{
		return (Market) readProperty("market");
	}

	public void setSpecification(Specification specification)
	{
		setToOneTarget("specification", specification, true);
	}

	public Specification getSpecification()
	{
		return (Specification) readProperty("specification");
	}

	public void setSpecificationOption(SpecificationOption specificationOption)
	{
		setToOneTarget("specificationOption", specificationOption, true);
	}

	public SpecificationOption getSpecificationOption()
	{
		return (SpecificationOption) readProperty("specificationOption");
	}

	public void setSpecificationOption1(SpecificationOption specificationOption1)
	{
		setToOneTarget("specificationOption1", specificationOption1, true);
	}

	public SpecificationOption getSpecificationOption1()
	{
		return (SpecificationOption) readProperty("specificationOption1");
	}

	public void setSpecificationOption2(SpecificationOption specificationOption2)
	{
		setToOneTarget("specificationOption2", specificationOption2, true);
	}

	public SpecificationOption getSpecificationOption2()
	{
		return (SpecificationOption) readProperty("specificationOption2");
	}

}
