package com.tc.app.exchangemonitor.model.cayenne.persistent.auto;

import java.util.List;

import org.apache.cayenne.CayenneDataObject;
import org.apache.cayenne.exp.Property;

import com.tc.app.exchangemonitor.model.cayenne.persistent.*;

/**
 * Class _Commodity was generated by Cayenne.
 * It is probably a good idea to avoid changing this class manually,
 * since it may be overwritten next time code is regenerated.
 * If you need to make any customizations, please use subclass.
 */
public abstract class _Commodity extends CayenneDataObject
{

	private static final long serialVersionUID = 1L;

	public static final String CMDTY_CODE_PK_COLUMN = "cmdty_code";

	public static final Property<String> CMDTY_FULL_NAME = new Property<>("cmdtyFullName");
	public static final Property<String> CMDTY_LOC_DESC = new Property<>("cmdtyLocDesc");
	public static final Property<String> CMDTY_SHORT_NAME = new Property<>("cmdtyShortName");
	public static final Property<String> CMDTY_STATUS = new Property<>("cmdtyStatus");
	public static final Property<String> CMDTY_TRADEABLE_IND = new Property<>("cmdtyTradeableInd");
	public static final Property<String> GRADE = new Property<>("grade");
	public static final Property<String> IS_COMPOSITE = new Property<>("isComposite");
	public static final Property<String> MOVEMENTS_REQUIRE_SPECIFIC_ACTUALS = new Property<>("movementsRequireSpecificActuals");
	public static final Property<Double> PRIM_CURR_CONV_RATE = new Property<>("primCurrConvRate");
	public static final Property<Integer> TRANS_ID = new Property<>("transId");
	public static final Property<List<AccisaGroup>> ACCISA_GROUPS = new Property<>("accisaGroups");
	public static final Property<List<AccountBankInfo>> ACCOUNT_BANK_INFOES = new Property<>("accountBankInfoes");
	public static final Property<List<AccountCreditLimit>> ACCOUNT_CREDIT_LIMITS = new Property<>("accountCreditLimits");
	public static final Property<List<AccountCreditLimit>> ACCOUNT_CREDIT_LIMITS1 = new Property<>("accountCreditLimits1");
	public static final Property<List<AccountInstruction>> ACCOUNT_INSTRUCTIONS = new Property<>("accountInstructions");
	public static final Property<List<AccountInstruction>> ACCOUNT_INSTRUCTIONS1 = new Property<>("accountInstructions1");
	public static final Property<List<AccountInstruction>> ACCOUNT_INSTRUCTIONS2 = new Property<>("accountInstructions2");
	public static final Property<List<AccountNetOut>> ACCOUNT_NET_OUTS = new Property<>("accountNetOuts");
	public static final Property<List<AcctBookcompGuarantee>> ACCT_BOOKCOMP_GUARANTEES = new Property<>("acctBookcompGuarantees");
	public static final Property<List<Accumulation>> ACCUMULATIONS = new Property<>("accumulations");
	public static final Property<List<AllocItemImpExp>> ALLOC_ITEM_IMP_EXPS = new Property<>("allocItemImpExps");
	public static final Property<List<AllocItemImpExp>> ALLOC_ITEM_IMP_EXPS1 = new Property<>("allocItemImpExps1");
	public static final Property<List<AllocItemImpExp>> ALLOC_ITEM_IMP_EXPS2 = new Property<>("allocItemImpExps2");
	public static final Property<List<AllocItemImpExp>> ALLOC_ITEM_IMP_EXPS3 = new Property<>("allocItemImpExps3");
	public static final Property<List<AllocationCriteria>> ALLOCATION_CRITERIAS = new Property<>("allocationCriterias");
	public static final Property<List<AllocationInsp>> ALLOCATION_INSPS = new Property<>("allocationInsps");
	public static final Property<List<AllocationItemInsp>> ALLOCATION_ITEM_INSPS = new Property<>("allocationItemInsps");
	public static final Property<List<AllocationItem>> ALLOCATION_ITEMS = new Property<>("allocationItems");
	public static final Property<List<AllocationItem>> ALLOCATION_ITEMS1 = new Property<>("allocationItems1");
	public static final Property<List<AllocationPl>> ALLOCATION_PLS = new Property<>("allocationPls");
	public static final Property<List<AllocationTransfer>> ALLOCATION_TRANSFERS = new Property<>("allocationTransfers");
	public static final Property<List<AllocationWorldScale>> ALLOCATION_WORLD_SCALES = new Property<>("allocationWorldScales");
	public static final Property<List<AllocationWorldScale>> ALLOCATION_WORLD_SCALES1 = new Property<>("allocationWorldScales1");
	public static final Property<List<Allocation>> ALLOCATIONS = new Property<>("allocations");
	public static final Property<List<Allocation>> ALLOCATIONS1 = new Property<>("allocations1");
	public static final Property<List<Allocation>> ALLOCATIONS2 = new Property<>("allocations2");
	public static final Property<List<AutopoolCriteria>> AUTOPOOL_CRITERIAS = new Property<>("autopoolCriterias");
	public static final Property<List<BankExposure>> BANK_EXPOSURES = new Property<>("bankExposures");
	public static final Property<List<BookingCompanyInfo>> BOOKING_COMPANY_INFOES = new Property<>("bookingCompanyInfoes");
	public static final Property<List<BrokerCommissionDefault>> BROKER_COMMISSION_DEFAULTS = new Property<>("brokerCommissionDefaults");
	public static final Property<List<BrokerCommissionDefault>> BROKER_COMMISSION_DEFAULTS1 = new Property<>("brokerCommissionDefaults1");
	public static final Property<List<BrokerCostAutogen>> BROKER_COST_AUTOGENS = new Property<>("brokerCostAutogens");
	public static final Property<List<BrokerCostAutogen>> BROKER_COST_AUTOGENS1 = new Property<>("brokerCostAutogens1");
	public static final Property<List<BrokerCostStepPrice>> BROKER_COST_STEP_PRICES = new Property<>("brokerCostStepPrices");
	public static final Property<List<BunkerPurPriceLookup>> BUNKER_PUR_PRICE_LOOKUPS = new Property<>("bunkerPurPriceLookups");
	public static final Property<List<BunkerPurPriceLookup>> BUNKER_PUR_PRICE_LOOKUPS1 = new Property<>("bunkerPurPriceLookups1");
	public static final Property<List<CmdtyNomenclature>> CMDTY_NOMENCLATURES = new Property<>("cmdtyNomenclatures");
	public static final Property<List<CommktClrdSwapAttr>> COMMKT_CLRD_SWAP_ATTRS = new Property<>("commktClrdSwapAttrs");
	public static final Property<List<CommktClrdSwapAttr>> COMMKT_CLRD_SWAP_ATTRS1 = new Property<>("commktClrdSwapAttrs1");
	public static final Property<List<CommktFutureAttr>> COMMKT_FUTURE_ATTRS = new Property<>("commktFutureAttrs");
	public static final Property<List<CommktOptionAttr>> COMMKT_OPTION_ATTRS = new Property<>("commktOptionAttrs");
	public static final Property<List<CommktPhysicalAttr>> COMMKT_PHYSICAL_ATTRS = new Property<>("commktPhysicalAttrs");
	public static final Property<List<Commodity>> COMMODITIES = new Property<>("commodities");
	public static final Property<CommoditySpecification> COMMODITY = new Property<>("commodity");
	public static final Property<Commodity> COMMODITY1 = new Property<>("commodity1");
	public static final Property<List<CommodityAlias>> COMMODITY_ALIASS = new Property<>("commodityAliass");
	public static final Property<List<CommodityByRollupType>> COMMODITY_BY_ROLLUP_TYPES = new Property<>("commodityByRollupTypes");
	public static final Property<CommodityCategory> COMMODITY_CATEGORY = new Property<>("commodityCategory");
	public static final Property<List<CommodityCharSpec>> COMMODITY_CHAR_SPECS = new Property<>("commodityCharSpecs");
	public static final Property<List<CommodityDesc>> COMMODITY_DESCS = new Property<>("commodityDescs");
	public static final Property<List<CommodityGroup>> COMMODITY_GROUPS = new Property<>("commodityGroups");
	public static final Property<List<CommodityGroup>> COMMODITY_GROUPS1 = new Property<>("commodityGroups1");
	public static final Property<List<CommodityLocation>> COMMODITY_LOCATIONS = new Property<>("commodityLocations");
	public static final Property<List<CommodityLocation>> COMMODITY_LOCATIONS1 = new Property<>("commodityLocations1");
	public static final Property<List<CommodityLocation>> COMMODITY_LOCATIONS2 = new Property<>("commodityLocations2");
	public static final Property<List<CommodityMarket>> COMMODITY_MARKETS = new Property<>("commodityMarkets");
	public static final Property<List<CommodityRollupHierarchy>> COMMODITY_ROLLUP_HIERARCHIES = new Property<>("commodityRollupHierarchies");
	public static final Property<List<CommodityRollupHierarchy>> COMMODITY_ROLLUP_HIERARCHIES1 = new Property<>("commodityRollupHierarchies1");
	public static final Property<List<CommoditySpecificationOption>> COMMODITY_SPECIFICATION_OPTIONS = new Property<>("commoditySpecificationOptions");
	public static final Property<List<CommoditySpecification>> COMMODITY_SPECIFICATIONS = new Property<>("commoditySpecifications");
	public static final Property<CommodityType> COMMODITY_TYPE = new Property<>("commodityType");
	public static final Property<List<CommodityUom>> COMMODITY_UOMS = new Property<>("commodityUoms");
	public static final Property<List<CostApproval>> COST_APPROVALS = new Property<>("costApprovals");
	public static final Property<List<CostCreditExposure>> COST_CREDIT_EXPOSURES = new Property<>("costCreditExposures");
	public static final Property<List<CostPriceDetail>> COST_PRICE_DETAILS = new Property<>("costPriceDetails");
	public static final Property<List<CostRelativePrice>> COST_RELATIVE_PRICES = new Property<>("costRelativePrices");
	public static final Property<List<CostReportSnapshot>> COST_REPORT_SNAPSHOTS = new Property<>("costReportSnapshots");
	public static final Property<List<CostScheduledPrice>> COST_SCHEDULED_PRICES = new Property<>("costScheduledPrices");
	public static final Property<List<Cost>> COSTS = new Property<>("costs");
	public static final Property<List<Cost>> COSTS1 = new Property<>("costs1");
	public static final Property<Country> COUNTRY = new Property<>("country");
	public static final Property<List<CreditLimit>> CREDIT_LIMITS = new Property<>("creditLimits");
	public static final Property<List<CreditLimit>> CREDIT_LIMITS1 = new Property<>("creditLimits1");
	public static final Property<List<CreditReserve>> CREDIT_RESERVES = new Property<>("creditReserves");
	public static final Property<List<CurrencyExposure>> CURRENCY_EXPOSURES = new Property<>("currencyExposures");
	public static final Property<List<ExchFifoAlloc>> EXCH_FIFO_ALLOCS = new Property<>("exchFifoAllocs");
	public static final Property<List<Exposure>> EXPOSURES = new Property<>("exposures");
	public static final Property<List<FacilityCommodity>> FACILITY_COMMODITIES = new Property<>("facilityCommodities");
	public static final Property<List<FlatRates>> FLAT_RATESES = new Property<>("flatRateses");
	public static final Property<List<FormulaBodyTrigger>> FORMULA_BODY_TRIGGERS = new Property<>("formulaBodyTriggers");
	public static final Property<List<FormulaComponent>> FORMULA_COMPONENTS = new Property<>("formulaComponents");
	public static final Property<List<Formula>> FORMULAS = new Property<>("formulas");
	public static final Property<List<FxExposureCurrency>> FX_EXPOSURE_CURRENCIES = new Property<>("fxExposureCurrencies");
	public static final Property<List<FxExposureCurrency>> FX_EXPOSURE_CURRENCIES1 = new Property<>("fxExposureCurrencies1");
	public static final Property<List<FxExposureDist>> FX_EXPOSURE_DISTS = new Property<>("fxExposureDists");
	public static final Property<List<FxHedgeRate>> FX_HEDGE_RATES = new Property<>("fxHedgeRates");
	public static final Property<List<FxHedgeRate>> FX_HEDGE_RATES1 = new Property<>("fxHedgeRates1");
	public static final Property<List<FxLinking>> FX_LINKINGS = new Property<>("fxLinkings");
	public static final Property<List<FxLinking>> FX_LINKINGS1 = new Property<>("fxLinkings1");
	public static final Property<List<FxRateHistory>> FX_RATE_HISTORIES = new Property<>("fxRateHistories");
	public static final Property<List<FxRateHistory>> FX_RATE_HISTORIES1 = new Property<>("fxRateHistories1");
	public static final Property<List<GlAccountBalance>> GL_ACCOUNT_BALANCES = new Property<>("glAccountBalances");
	public static final Property<List<GradeCommodityMarket>> GRADE_COMMODITY_MARKETS = new Property<>("gradeCommodityMarkets");
	public static final Property<List<GravityTableName>> GRAVITY_TABLE_NAMES = new Property<>("gravityTableNames");
	public static final Property<List<InvActual>> INV_ACTUALS = new Property<>("invActuals");
	public static final Property<List<InvCreditExposure>> INV_CREDIT_EXPOSURES = new Property<>("invCreditExposures");
	public static final Property<List<Inventory>> INVENTORIES = new Property<>("inventories");
	public static final Property<List<Inventory>> INVENTORIES1 = new Property<>("inventories1");
	public static final Property<List<Inventory>> INVENTORIES2 = new Property<>("inventories2");
	public static final Property<List<Inventory>> INVENTORIES3 = new Property<>("inventories3");
	public static final Property<List<InventoryBalance>> INVENTORY_BALANCES = new Property<>("inventoryBalances");
	public static final Property<List<InventoryBuildDraw>> INVENTORY_BUILD_DRAWS = new Property<>("inventoryBuildDraws");
	public static final Property<List<InventoryRollCriteria>> INVENTORY_ROLL_CRITERIAS = new Property<>("inventoryRollCriterias");
	public static final Property<List<LcAllocation>> LC_ALLOCATIONS = new Property<>("lcAllocations");
	public static final Property<List<LcAllocation>> LC_ALLOCATIONS1 = new Property<>("lcAllocations1");
	public static final Property<List<LcAllocation>> LC_ALLOCATIONS2 = new Property<>("lcAllocations2");
	public static final Property<List<LcBankfeeAutogen>> LC_BANKFEE_AUTOGENS = new Property<>("lcBankfeeAutogens");
	public static final Property<List<LcBankfeeRefdata>> LC_BANKFEE_REFDATAS = new Property<>("lcBankfeeRefdatas");
	public static final Property<List<LicTaxImplication>> LIC_TAX_IMPLICATIONS = new Property<>("licTaxImplications");
	public static final Property<List<LicenseCovers>> LICENSE_COVERSS = new Property<>("licenseCoverss");
	public static final Property<List<LmRiskExchRate>> LM_RISK_EXCH_RATES = new Property<>("lmRiskExchRates");
	public static final Property<List<LmRiskExchRate>> LM_RISK_EXCH_RATES1 = new Property<>("lmRiskExchRates1");
	public static final Property<List<LocationCharges>> LOCATION_CHARGESES = new Property<>("locationChargeses");
	public static final Property<List<LocationCostFigures>> LOCATION_COST_FIGURESES = new Property<>("locationCostFigureses");
	public static final Property<List<LocationShoreLines>> LOCATION_SHORE_LINESES = new Property<>("locationShoreLineses");
	public static final Property<List<MarketPricingCosts>> MARKET_PRICING_COSTSS = new Property<>("marketPricingCostss");
	public static final Property<List<MarketableSecurity>> MARKETABLE_SECURITIES = new Property<>("marketableSecurities");
	public static final Property<List<MasterCollAgreement>> MASTER_COLL_AGREEMENTS = new Property<>("masterCollAgreements");
	public static final Property<List<McaTradeItem>> MCA_TRADE_ITEMS = new Property<>("mcaTradeItems");
	public static final Property<List<MotLocationTariff>> MOT_LOCATION_TARIFFS = new Property<>("motLocationTariffs");
	public static final Property<List<NoiseBandExposure>> NOISE_BAND_EXPOSURES = new Property<>("noiseBandExposures");
	public static final Property<List<OtcOption>> OTC_OPTIONS = new Property<>("otcOptions");
	public static final Property<List<PaperAllocation>> PAPER_ALLOCATIONS = new Property<>("paperAllocations");
	public static final Property<List<Parcel>> PARCELS = new Property<>("parcels");
	public static final Property<List<Parcel>> PARCELS1 = new Property<>("parcels1");
	public static final Property<List<ParentGuarantee>> PARENT_GUARANTEES = new Property<>("parentGuarantees");
	public static final Property<List<ParentGuarantee>> PARENT_GUARANTEES1 = new Property<>("parentGuarantees1");
	public static final Property<List<PipelineCycle>> PIPELINE_CYCLES = new Property<>("pipelineCycles");
	public static final Property<List<PlContractExclusions>> PL_CONTRACT_EXCLUSIONSS = new Property<>("plContractExclusionss");
	public static final Property<List<PlContractExclusions>> PL_CONTRACT_EXCLUSIONSS1 = new Property<>("plContractExclusionss1");
	public static final Property<List<PlContractLosses>> PL_CONTRACT_LOSSESES = new Property<>("plContractLosseses");
	public static final Property<List<PlContractLosses>> PL_CONTRACT_LOSSESES1 = new Property<>("plContractLosseses1");
	public static final Property<List<PlContractTariffAdj>> PL_CONTRACT_TARIFF_ADJS = new Property<>("plContractTariffAdjs");
	public static final Property<List<PlContractTariffAdj>> PL_CONTRACT_TARIFF_ADJS1 = new Property<>("plContractTariffAdjs1");
	public static final Property<List<PlContractTariffs>> PL_CONTRACT_TARIFFSS = new Property<>("plContractTariffss");
	public static final Property<List<PlContractTariffs>> PL_CONTRACT_TARIFFSS1 = new Property<>("plContractTariffss1");
	public static final Property<List<PlContractTariffs>> PL_CONTRACT_TARIFFSS2 = new Property<>("plContractTariffss2");
	public static final Property<List<PlContractViscosities>> PL_CONTRACT_VISCOSITIESES = new Property<>("plContractViscositieses");
	public static final Property<List<PlContractViscosities>> PL_CONTRACT_VISCOSITIESES1 = new Property<>("plContractViscositieses1");
	public static final Property<List<PlContract>> PL_CONTRACTS = new Property<>("plContracts");
	public static final Property<List<PlContract>> PL_CONTRACTS1 = new Property<>("plContracts1");
	public static final Property<List<PlContract>> PL_CONTRACTS2 = new Property<>("plContracts2");
	public static final Property<List<PlContract>> PL_CONTRACTS3 = new Property<>("plContracts3");
	public static final Property<List<PlContract>> PL_CONTRACTS4 = new Property<>("plContracts4");
	public static final Property<List<PlContract>> PL_CONTRACTS5 = new Property<>("plContracts5");
	public static final Property<List<PlOffsetTransfer>> PL_OFFSET_TRANSFERS = new Property<>("plOffsetTransfers");
	public static final Property<List<PlOpsAdj>> PL_OPS_ADJS = new Property<>("plOpsAdjs");
	public static final Property<List<PlOpsCargoDetails>> PL_OPS_CARGO_DETAILSS = new Property<>("plOpsCargoDetailss");
	public static final Property<List<PlOpsCargo>> PL_OPS_CARGOES = new Property<>("plOpsCargoes");
	public static final Property<List<PlReconciliation>> PL_RECONCILIATIONS = new Property<>("plReconciliations");
	public static final Property<List<PmTradeMatchCriteria>> PM_TRADE_MATCH_CRITERIAS = new Property<>("pmTradeMatchCriterias");
	public static final Property<List<PortfolioEod>> PORTFOLIO_EODS = new Property<>("portfolioEods");
	public static final Property<List<PortfolioExtInfo>> PORTFOLIO_EXT_INFOES = new Property<>("portfolioExtInfoes");
	public static final Property<List<PortfolioExtInfo>> PORTFOLIO_EXT_INFOES1 = new Property<>("portfolioExtInfoes1");
	public static final Property<List<PortfolioExtInfo>> PORTFOLIO_EXT_INFOES2 = new Property<>("portfolioExtInfoes2");
	public static final Property<List<PortfolioProfitLoss>> PORTFOLIO_PROFIT_LOSSES = new Property<>("portfolioProfitLosses");
	public static final Property<List<Portfolio>> PORTFOLIOS = new Property<>("portfolios");
	public static final Property<List<PositionHistory>> POSITION_HISTORIES = new Property<>("positionHistories");
	public static final Property<List<PositionHistory>> POSITION_HISTORIES1 = new Property<>("positionHistories1");
	public static final Property<List<PositionHistory>> POSITION_HISTORIES2 = new Property<>("positionHistories2");
	public static final Property<List<PositionMarkToMarket>> POSITION_MARK_TO_MARKETS = new Property<>("positionMarkToMarkets");
	public static final Property<List<Position>> POSITIONS = new Property<>("positions");
	public static final Property<List<Position>> POSITIONS1 = new Property<>("positions1");
	public static final Property<List<Position>> POSITIONS2 = new Property<>("positions2");
	public static final Property<List<Product>> PRODUCTS = new Property<>("products");
	public static final Property<List<PurchaseSaleGroup>> PURCHASE_SALE_GROUPS = new Property<>("purchaseSaleGroups");
	public static final Property<List<QppMarkToMarket>> QPP_MARK_TO_MARKETS = new Property<>("qppMarkToMarkets");
	public static final Property<List<QualSlateCmdtySpec>> QUAL_SLATE_CMDTY_SPECS = new Property<>("qualSlateCmdtySpecs");
	public static final Property<List<QuoteMarketdataSource>> QUOTE_MARKETDATA_SOURCES = new Property<>("quoteMarketdataSources");
	public static final Property<List<QuotePrice>> QUOTE_PRICES = new Property<>("quotePrices");
	public static final Property<List<RailcarPtpRate>> RAILCAR_PTP_RATES = new Property<>("railcarPtpRates");
	public static final Property<List<RealizaPriceFrgCost>> REALIZA_PRICE_FRG_COSTS = new Property<>("realizaPriceFrgCosts");
	public static final Property<List<RecapItem>> RECAP_ITEMS = new Property<>("recapItems");
	public static final Property<List<RinDefinition>> RIN_DEFINITIONS = new Property<>("rinDefinitions");
	public static final Property<List<RinEquivalence>> RIN_EQUIVALENCES = new Property<>("rinEquivalences");
	public static final Property<List<RinEquivalence>> RIN_EQUIVALENCES1 = new Property<>("rinEquivalences1");
	public static final Property<List<RinObligation>> RIN_OBLIGATIONS = new Property<>("rinObligations");
	public static final Property<List<RinObligation>> RIN_OBLIGATIONS1 = new Property<>("rinObligations1");
	public static final Property<List<RiskCover>> RISK_COVERS = new Property<>("riskCovers");
	public static final Property<List<ScenarioItem>> SCENARIO_ITEMS = new Property<>("scenarioItems");
	public static final Property<List<Shipment>> SHIPMENTS = new Property<>("shipments");
	public static final Property<List<Shipment>> SHIPMENTS1 = new Property<>("shipments1");
	public static final Property<List<SimpleFormula>> SIMPLE_FORMULAS = new Property<>("simpleFormulas");
	public static final Property<List<SpecTest>> SPEC_TESTS = new Property<>("specTests");
	public static final Property<List<SpreadComposition>> SPREAD_COMPOSITIONS = new Property<>("spreadCompositions");
	public static final Property<List<SpreadComposition>> SPREAD_COMPOSITIONS1 = new Property<>("spreadCompositions1");
	public static final Property<List<Strategy>> STRATEGIES = new Property<>("strategies");
	public static final Property<List<TaxAddtlCosts>> TAX_ADDTL_COSTSS = new Property<>("taxAddtlCostss");
	public static final Property<List<Tax>> TAXES = new Property<>("taxes");
	public static final Property<List<Tax>> TAXES1 = new Property<>("taxes1");
	public static final Property<List<Tax>> TAXES2 = new Property<>("taxes2");
	public static final Property<List<TempValueAdjust>> TEMP_VALUE_ADJUSTS = new Property<>("tempValueAdjusts");
	public static final Property<List<TiMarkToMarket>> TI_MARK_TO_MARKETS = new Property<>("tiMarkToMarkets");
	public static final Property<List<TidMarkToMarket>> TID_MARK_TO_MARKETS = new Property<>("tidMarkToMarkets");
	public static final Property<List<TidMarkToMarket>> TID_MARK_TO_MARKETS1 = new Property<>("tidMarkToMarkets1");
	public static final Property<List<TidMarkToMarket>> TID_MARK_TO_MARKETS2 = new Property<>("tidMarkToMarkets2");
	public static final Property<List<TidMtmVolatility>> TID_MTM_VOLATILITIES = new Property<>("tidMtmVolatilities");
	public static final Property<List<TidPl>> TID_PLS = new Property<>("tidPls");
	public static final Property<List<TradeItemBunker>> TRADE_ITEM_BUNKERS = new Property<>("tradeItemBunkers");
	public static final Property<List<TradeItemCleared>> TRADE_ITEM_CLEAREDS = new Property<>("tradeItemCleareds");
	public static final Property<List<TradeItemCleared>> TRADE_ITEM_CLEAREDS1 = new Property<>("tradeItemCleareds1");
	public static final Property<List<TradeItemCurr>> TRADE_ITEM_CURRS = new Property<>("tradeItemCurrs");
	public static final Property<List<TradeItemCurr>> TRADE_ITEM_CURRS1 = new Property<>("tradeItemCurrs1");
	public static final Property<List<TradeItemDist>> TRADE_ITEM_DISTS = new Property<>("tradeItemDists");
	public static final Property<List<TradeItemExchOpt>> TRADE_ITEM_EXCH_OPTS = new Property<>("tradeItemExchOpts");
	public static final Property<List<TradeItemExchOpt>> TRADE_ITEM_EXCH_OPTS1 = new Property<>("tradeItemExchOpts1");
	public static final Property<List<TradeItemExchOpt>> TRADE_ITEM_EXCH_OPTS2 = new Property<>("tradeItemExchOpts2");
	public static final Property<List<TradeItemFill>> TRADE_ITEM_FILLS = new Property<>("tradeItemFills");
	public static final Property<List<TradeItemFut>> TRADE_ITEM_FUTS = new Property<>("tradeItemFuts");
	public static final Property<List<TradeItemFut>> TRADE_ITEM_FUTS1 = new Property<>("tradeItemFuts1");
	public static final Property<List<TradeItemOtcOpt>> TRADE_ITEM_OTC_OPTS = new Property<>("tradeItemOtcOpts");
	public static final Property<List<TradeItemOtcOpt>> TRADE_ITEM_OTC_OPTS1 = new Property<>("tradeItemOtcOpts1");
	public static final Property<List<TradeItemPl>> TRADE_ITEM_PLS = new Property<>("tradeItemPls");
	public static final Property<List<TradeItemRin>> TRADE_ITEM_RINS = new Property<>("tradeItemRins");
	public static final Property<List<TradeItemRin>> TRADE_ITEM_RINS1 = new Property<>("tradeItemRins1");
	public static final Property<List<TradeItemSpec>> TRADE_ITEM_SPECS = new Property<>("tradeItemSpecs");
	public static final Property<List<TradeItemStorage>> TRADE_ITEM_STORAGES = new Property<>("tradeItemStorages");
	public static final Property<List<TradeItemTransport>> TRADE_ITEM_TRANSPORTS = new Property<>("tradeItemTransports");
	public static final Property<List<TradeItemTransport>> TRADE_ITEM_TRANSPORTS1 = new Property<>("tradeItemTransports1");
	public static final Property<List<TradeItemTransport>> TRADE_ITEM_TRANSPORTS2 = new Property<>("tradeItemTransports2");
	public static final Property<List<TradeItemTransport>> TRADE_ITEM_TRANSPORTS3 = new Property<>("tradeItemTransports3");
	public static final Property<List<TradeItem>> TRADE_ITEMS = new Property<>("tradeItems");
	public static final Property<List<TradeItem>> TRADE_ITEMS1 = new Property<>("tradeItems1");
	public static final Property<List<TradeItem>> TRADE_ITEMS2 = new Property<>("tradeItems2");
	public static final Property<List<TradeItem>> TRADE_ITEMS3 = new Property<>("tradeItems3");
	public static final Property<List<TradeItem>> TRADE_ITEMS4 = new Property<>("tradeItems4");
	public static final Property<List<TradeOrderBal>> TRADE_ORDER_BALS = new Property<>("tradeOrderBals");
	public static final Property<List<TradeOrderBal>> TRADE_ORDER_BALS1 = new Property<>("tradeOrderBals1");
	public static final Property<List<TradeOrderBunker>> TRADE_ORDER_BUNKERS = new Property<>("tradeOrderBunkers");
	public static final Property<List<TradeOrderBunker>> TRADE_ORDER_BUNKERS1 = new Property<>("tradeOrderBunkers1");
	public static final Property<List<TradeOrderOnExch>> TRADE_ORDER_ON_EXCHES = new Property<>("tradeOrderOnExches");
	public static final Property<List<TradeOrderPosEffect>> TRADE_ORDER_POS_EFFECTS = new Property<>("tradeOrderPosEffects");
	public static final Property<List<TradeOrderPosEffect>> TRADE_ORDER_POS_EFFECTS1 = new Property<>("tradeOrderPosEffects1");
	public static final Property<List<TradeOrder>> TRADE_ORDERS = new Property<>("tradeOrders");
	public static final Property<List<TransportCostSchedule>> TRANSPORT_COST_SCHEDULES = new Property<>("transportCostSchedules");
	public static final Property<List<TsOpsCargo>> TS_OPS_CARGOES = new Property<>("tsOpsCargoes");
	public static final Property<Uom> UOM = new Property<>("uom");
	public static final Property<Uom> UOM1 = new Property<>("uom1");
	public static final Property<List<UomConversion>> UOM_CONVERSIONS = new Property<>("uomConversions");
	public static final Property<List<VesselDistMtm>> VESSEL_DIST_MTMS = new Property<>("vesselDistMtms");
	public static final Property<List<VesselDist>> VESSEL_DISTS = new Property<>("vesselDists");
	public static final Property<List<VoucherCost>> VOUCHER_COSTS = new Property<>("voucherCosts");
	public static final Property<List<VoucherPayment>> VOUCHER_PAYMENTS = new Property<>("voucherPayments");
	public static final Property<List<VoucherPayment>> VOUCHER_PAYMENTS1 = new Property<>("voucherPayments1");
	public static final Property<List<VoucherVat>> VOUCHER_VATS = new Property<>("voucherVats");
	public static final Property<List<VoucherVat>> VOUCHER_VATS1 = new Property<>("voucherVats1");
	public static final Property<List<Voucher>> VOUCHERS = new Property<>("vouchers");
	public static final Property<List<Voucher>> VOUCHERS1 = new Property<>("vouchers1");
	public static final Property<List<Voucher>> VOUCHERS2 = new Property<>("vouchers2");
	public static final Property<List<Voucher>> VOUCHERS3 = new Property<>("vouchers3");
	public static final Property<List<WbContractConsumptions>> WB_CONTRACT_CONSUMPTIONSS = new Property<>("wbContractConsumptionss");
	public static final Property<List<WbContractRob>> WB_CONTRACT_ROBS = new Property<>("wbContractRobs");
	public static final Property<List<WbContractRob>> WB_CONTRACT_ROBS1 = new Property<>("wbContractRobs1");
	public static final Property<List<WbContractTcConfig>> WB_CONTRACT_TC_CONFIGS = new Property<>("wbContractTcConfigs");
	public static final Property<List<WbContractTcCosts>> WB_CONTRACT_TC_COSTSS = new Property<>("wbContractTcCostss");
	public static final Property<List<WbOpsBunker>> WB_OPS_BUNKERS = new Property<>("wbOpsBunkers");
	public static final Property<List<WbOpsBunker>> WB_OPS_BUNKERS1 = new Property<>("wbOpsBunkers1");
	public static final Property<List<WbOpsPortRob>> WB_OPS_PORT_ROBS = new Property<>("wbOpsPortRobs");
	public static final Property<List<WbOpsRob>> WB_OPS_ROBS = new Property<>("wbOpsRobs");
	public static final Property<List<WbOpsRob>> WB_OPS_ROBS1 = new Property<>("wbOpsRobs1");
	public static final Property<List<WbPreBunker>> WB_PRE_BUNKERS = new Property<>("wbPreBunkers");
	public static final Property<List<WbPreBunker>> WB_PRE_BUNKERS1 = new Property<>("wbPreBunkers1");
	public static final Property<List<WbPreCargo>> WB_PRE_CARGOES = new Property<>("wbPreCargoes");
	public static final Property<List<WbPrgCargoCrd>> WB_PRG_CARGO_CRDS = new Property<>("wbPrgCargoCrds");
	public static final Property<List<WbPrgCargo>> WB_PRG_CARGOES = new Property<>("wbPrgCargoes");
	public static final Property<List<WbProfitSharing>> WB_PROFIT_SHARINGS = new Property<>("wbProfitSharings");
	public static final Property<List<WbTbnPrice>> WB_TBN_PRICES = new Property<>("wbTbnPrices");
	public static final Property<List<WbTemplatesOps>> WB_TEMPLATES_OPSS = new Property<>("wbTemplatesOpss");

	public void setCmdtyFullName(final String cmdtyFullName)
	{
		this.writeProperty("cmdtyFullName", cmdtyFullName);
	}

	public String getCmdtyFullName()
	{
		return (String) this.readProperty("cmdtyFullName");
	}

	public void setCmdtyLocDesc(final String cmdtyLocDesc)
	{
		this.writeProperty("cmdtyLocDesc", cmdtyLocDesc);
	}

	public String getCmdtyLocDesc()
	{
		return (String) this.readProperty("cmdtyLocDesc");
	}

	public void setCmdtyShortName(final String cmdtyShortName)
	{
		this.writeProperty("cmdtyShortName", cmdtyShortName);
	}

	public String getCmdtyShortName()
	{
		return (String) this.readProperty("cmdtyShortName");
	}

	public void setCmdtyStatus(final String cmdtyStatus)
	{
		this.writeProperty("cmdtyStatus", cmdtyStatus);
	}

	public String getCmdtyStatus()
	{
		return (String) this.readProperty("cmdtyStatus");
	}

	public void setCmdtyTradeableInd(final String cmdtyTradeableInd)
	{
		this.writeProperty("cmdtyTradeableInd", cmdtyTradeableInd);
	}

	public String getCmdtyTradeableInd()
	{
		return (String) this.readProperty("cmdtyTradeableInd");
	}

	public void setGrade(final String grade)
	{
		this.writeProperty("grade", grade);
	}

	public String getGrade()
	{
		return (String) this.readProperty("grade");
	}

	public void setIsComposite(final String isComposite)
	{
		this.writeProperty("isComposite", isComposite);
	}

	public String getIsComposite()
	{
		return (String) this.readProperty("isComposite");
	}

	public void setMovementsRequireSpecificActuals(final String movementsRequireSpecificActuals)
	{
		this.writeProperty("movementsRequireSpecificActuals", movementsRequireSpecificActuals);
	}

	public String getMovementsRequireSpecificActuals()
	{
		return (String) this.readProperty("movementsRequireSpecificActuals");
	}

	public void setPrimCurrConvRate(final Double primCurrConvRate)
	{
		this.writeProperty("primCurrConvRate", primCurrConvRate);
	}

	public Double getPrimCurrConvRate()
	{
		return (Double) this.readProperty("primCurrConvRate");
	}

	public void setTransId(final Integer transId)
	{
		this.writeProperty("transId", transId);
	}

	public Integer getTransId()
	{
		return (Integer) this.readProperty("transId");
	}

	public void addToAccisaGroups(final AccisaGroup obj)
	{
		this.addToManyTarget("accisaGroups", obj, true);
	}

	public void removeFromAccisaGroups(final AccisaGroup obj)
	{
		this.removeToManyTarget("accisaGroups", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<AccisaGroup> getAccisaGroups()
	{
		return (List<AccisaGroup>) this.readProperty("accisaGroups");
	}

	public void addToAccountBankInfoes(final AccountBankInfo obj)
	{
		this.addToManyTarget("accountBankInfoes", obj, true);
	}

	public void removeFromAccountBankInfoes(final AccountBankInfo obj)
	{
		this.removeToManyTarget("accountBankInfoes", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<AccountBankInfo> getAccountBankInfoes()
	{
		return (List<AccountBankInfo>) this.readProperty("accountBankInfoes");
	}

	public void addToAccountCreditLimits(final AccountCreditLimit obj)
	{
		this.addToManyTarget("accountCreditLimits", obj, true);
	}

	public void removeFromAccountCreditLimits(final AccountCreditLimit obj)
	{
		this.removeToManyTarget("accountCreditLimits", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<AccountCreditLimit> getAccountCreditLimits()
	{
		return (List<AccountCreditLimit>) this.readProperty("accountCreditLimits");
	}

	public void addToAccountCreditLimits1(final AccountCreditLimit obj)
	{
		this.addToManyTarget("accountCreditLimits1", obj, true);
	}

	public void removeFromAccountCreditLimits1(final AccountCreditLimit obj)
	{
		this.removeToManyTarget("accountCreditLimits1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<AccountCreditLimit> getAccountCreditLimits1()
	{
		return (List<AccountCreditLimit>) this.readProperty("accountCreditLimits1");
	}

	public void addToAccountInstructions(final AccountInstruction obj)
	{
		this.addToManyTarget("accountInstructions", obj, true);
	}

	public void removeFromAccountInstructions(final AccountInstruction obj)
	{
		this.removeToManyTarget("accountInstructions", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<AccountInstruction> getAccountInstructions()
	{
		return (List<AccountInstruction>) this.readProperty("accountInstructions");
	}

	public void addToAccountInstructions1(final AccountInstruction obj)
	{
		this.addToManyTarget("accountInstructions1", obj, true);
	}

	public void removeFromAccountInstructions1(final AccountInstruction obj)
	{
		this.removeToManyTarget("accountInstructions1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<AccountInstruction> getAccountInstructions1()
	{
		return (List<AccountInstruction>) this.readProperty("accountInstructions1");
	}

	public void addToAccountInstructions2(final AccountInstruction obj)
	{
		this.addToManyTarget("accountInstructions2", obj, true);
	}

	public void removeFromAccountInstructions2(final AccountInstruction obj)
	{
		this.removeToManyTarget("accountInstructions2", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<AccountInstruction> getAccountInstructions2()
	{
		return (List<AccountInstruction>) this.readProperty("accountInstructions2");
	}

	public void addToAccountNetOuts(final AccountNetOut obj)
	{
		this.addToManyTarget("accountNetOuts", obj, true);
	}

	public void removeFromAccountNetOuts(final AccountNetOut obj)
	{
		this.removeToManyTarget("accountNetOuts", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<AccountNetOut> getAccountNetOuts()
	{
		return (List<AccountNetOut>) this.readProperty("accountNetOuts");
	}

	public void addToAcctBookcompGuarantees(final AcctBookcompGuarantee obj)
	{
		this.addToManyTarget("acctBookcompGuarantees", obj, true);
	}

	public void removeFromAcctBookcompGuarantees(final AcctBookcompGuarantee obj)
	{
		this.removeToManyTarget("acctBookcompGuarantees", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<AcctBookcompGuarantee> getAcctBookcompGuarantees()
	{
		return (List<AcctBookcompGuarantee>) this.readProperty("acctBookcompGuarantees");
	}

	public void addToAccumulations(final Accumulation obj)
	{
		this.addToManyTarget("accumulations", obj, true);
	}

	public void removeFromAccumulations(final Accumulation obj)
	{
		this.removeToManyTarget("accumulations", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<Accumulation> getAccumulations()
	{
		return (List<Accumulation>) this.readProperty("accumulations");
	}

	public void addToAllocItemImpExps(final AllocItemImpExp obj)
	{
		this.addToManyTarget("allocItemImpExps", obj, true);
	}

	public void removeFromAllocItemImpExps(final AllocItemImpExp obj)
	{
		this.removeToManyTarget("allocItemImpExps", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<AllocItemImpExp> getAllocItemImpExps()
	{
		return (List<AllocItemImpExp>) this.readProperty("allocItemImpExps");
	}

	public void addToAllocItemImpExps1(final AllocItemImpExp obj)
	{
		this.addToManyTarget("allocItemImpExps1", obj, true);
	}

	public void removeFromAllocItemImpExps1(final AllocItemImpExp obj)
	{
		this.removeToManyTarget("allocItemImpExps1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<AllocItemImpExp> getAllocItemImpExps1()
	{
		return (List<AllocItemImpExp>) this.readProperty("allocItemImpExps1");
	}

	public void addToAllocItemImpExps2(final AllocItemImpExp obj)
	{
		this.addToManyTarget("allocItemImpExps2", obj, true);
	}

	public void removeFromAllocItemImpExps2(final AllocItemImpExp obj)
	{
		this.removeToManyTarget("allocItemImpExps2", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<AllocItemImpExp> getAllocItemImpExps2()
	{
		return (List<AllocItemImpExp>) this.readProperty("allocItemImpExps2");
	}

	public void addToAllocItemImpExps3(final AllocItemImpExp obj)
	{
		this.addToManyTarget("allocItemImpExps3", obj, true);
	}

	public void removeFromAllocItemImpExps3(final AllocItemImpExp obj)
	{
		this.removeToManyTarget("allocItemImpExps3", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<AllocItemImpExp> getAllocItemImpExps3()
	{
		return (List<AllocItemImpExp>) this.readProperty("allocItemImpExps3");
	}

	public void addToAllocationCriterias(final AllocationCriteria obj)
	{
		this.addToManyTarget("allocationCriterias", obj, true);
	}

	public void removeFromAllocationCriterias(final AllocationCriteria obj)
	{
		this.removeToManyTarget("allocationCriterias", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<AllocationCriteria> getAllocationCriterias()
	{
		return (List<AllocationCriteria>) this.readProperty("allocationCriterias");
	}

	public void addToAllocationInsps(final AllocationInsp obj)
	{
		this.addToManyTarget("allocationInsps", obj, true);
	}

	public void removeFromAllocationInsps(final AllocationInsp obj)
	{
		this.removeToManyTarget("allocationInsps", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<AllocationInsp> getAllocationInsps()
	{
		return (List<AllocationInsp>) this.readProperty("allocationInsps");
	}

	public void addToAllocationItemInsps(final AllocationItemInsp obj)
	{
		this.addToManyTarget("allocationItemInsps", obj, true);
	}

	public void removeFromAllocationItemInsps(final AllocationItemInsp obj)
	{
		this.removeToManyTarget("allocationItemInsps", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<AllocationItemInsp> getAllocationItemInsps()
	{
		return (List<AllocationItemInsp>) this.readProperty("allocationItemInsps");
	}

	public void addToAllocationItems(final AllocationItem obj)
	{
		this.addToManyTarget("allocationItems", obj, true);
	}

	public void removeFromAllocationItems(final AllocationItem obj)
	{
		this.removeToManyTarget("allocationItems", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<AllocationItem> getAllocationItems()
	{
		return (List<AllocationItem>) this.readProperty("allocationItems");
	}

	public void addToAllocationItems1(final AllocationItem obj)
	{
		this.addToManyTarget("allocationItems1", obj, true);
	}

	public void removeFromAllocationItems1(final AllocationItem obj)
	{
		this.removeToManyTarget("allocationItems1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<AllocationItem> getAllocationItems1()
	{
		return (List<AllocationItem>) this.readProperty("allocationItems1");
	}

	public void addToAllocationPls(final AllocationPl obj)
	{
		this.addToManyTarget("allocationPls", obj, true);
	}

	public void removeFromAllocationPls(final AllocationPl obj)
	{
		this.removeToManyTarget("allocationPls", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<AllocationPl> getAllocationPls()
	{
		return (List<AllocationPl>) this.readProperty("allocationPls");
	}

	public void addToAllocationTransfers(final AllocationTransfer obj)
	{
		this.addToManyTarget("allocationTransfers", obj, true);
	}

	public void removeFromAllocationTransfers(final AllocationTransfer obj)
	{
		this.removeToManyTarget("allocationTransfers", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<AllocationTransfer> getAllocationTransfers()
	{
		return (List<AllocationTransfer>) this.readProperty("allocationTransfers");
	}

	public void addToAllocationWorldScales(final AllocationWorldScale obj)
	{
		this.addToManyTarget("allocationWorldScales", obj, true);
	}

	public void removeFromAllocationWorldScales(final AllocationWorldScale obj)
	{
		this.removeToManyTarget("allocationWorldScales", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<AllocationWorldScale> getAllocationWorldScales()
	{
		return (List<AllocationWorldScale>) this.readProperty("allocationWorldScales");
	}

	public void addToAllocationWorldScales1(final AllocationWorldScale obj)
	{
		this.addToManyTarget("allocationWorldScales1", obj, true);
	}

	public void removeFromAllocationWorldScales1(final AllocationWorldScale obj)
	{
		this.removeToManyTarget("allocationWorldScales1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<AllocationWorldScale> getAllocationWorldScales1()
	{
		return (List<AllocationWorldScale>) this.readProperty("allocationWorldScales1");
	}

	public void addToAllocations(final Allocation obj)
	{
		this.addToManyTarget("allocations", obj, true);
	}

	public void removeFromAllocations(final Allocation obj)
	{
		this.removeToManyTarget("allocations", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<Allocation> getAllocations()
	{
		return (List<Allocation>) this.readProperty("allocations");
	}

	public void addToAllocations1(final Allocation obj)
	{
		this.addToManyTarget("allocations1", obj, true);
	}

	public void removeFromAllocations1(final Allocation obj)
	{
		this.removeToManyTarget("allocations1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<Allocation> getAllocations1()
	{
		return (List<Allocation>) this.readProperty("allocations1");
	}

	public void addToAllocations2(final Allocation obj)
	{
		this.addToManyTarget("allocations2", obj, true);
	}

	public void removeFromAllocations2(final Allocation obj)
	{
		this.removeToManyTarget("allocations2", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<Allocation> getAllocations2()
	{
		return (List<Allocation>) this.readProperty("allocations2");
	}

	public void addToAutopoolCriterias(final AutopoolCriteria obj)
	{
		this.addToManyTarget("autopoolCriterias", obj, true);
	}

	public void removeFromAutopoolCriterias(final AutopoolCriteria obj)
	{
		this.removeToManyTarget("autopoolCriterias", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<AutopoolCriteria> getAutopoolCriterias()
	{
		return (List<AutopoolCriteria>) this.readProperty("autopoolCriterias");
	}

	public void addToBankExposures(final BankExposure obj)
	{
		this.addToManyTarget("bankExposures", obj, true);
	}

	public void removeFromBankExposures(final BankExposure obj)
	{
		this.removeToManyTarget("bankExposures", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<BankExposure> getBankExposures()
	{
		return (List<BankExposure>) this.readProperty("bankExposures");
	}

	public void addToBookingCompanyInfoes(final BookingCompanyInfo obj)
	{
		this.addToManyTarget("bookingCompanyInfoes", obj, true);
	}

	public void removeFromBookingCompanyInfoes(final BookingCompanyInfo obj)
	{
		this.removeToManyTarget("bookingCompanyInfoes", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<BookingCompanyInfo> getBookingCompanyInfoes()
	{
		return (List<BookingCompanyInfo>) this.readProperty("bookingCompanyInfoes");
	}

	public void addToBrokerCommissionDefaults(final BrokerCommissionDefault obj)
	{
		this.addToManyTarget("brokerCommissionDefaults", obj, true);
	}

	public void removeFromBrokerCommissionDefaults(final BrokerCommissionDefault obj)
	{
		this.removeToManyTarget("brokerCommissionDefaults", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<BrokerCommissionDefault> getBrokerCommissionDefaults()
	{
		return (List<BrokerCommissionDefault>) this.readProperty("brokerCommissionDefaults");
	}

	public void addToBrokerCommissionDefaults1(final BrokerCommissionDefault obj)
	{
		this.addToManyTarget("brokerCommissionDefaults1", obj, true);
	}

	public void removeFromBrokerCommissionDefaults1(final BrokerCommissionDefault obj)
	{
		this.removeToManyTarget("brokerCommissionDefaults1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<BrokerCommissionDefault> getBrokerCommissionDefaults1()
	{
		return (List<BrokerCommissionDefault>) this.readProperty("brokerCommissionDefaults1");
	}

	public void addToBrokerCostAutogens(final BrokerCostAutogen obj)
	{
		this.addToManyTarget("brokerCostAutogens", obj, true);
	}

	public void removeFromBrokerCostAutogens(final BrokerCostAutogen obj)
	{
		this.removeToManyTarget("brokerCostAutogens", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<BrokerCostAutogen> getBrokerCostAutogens()
	{
		return (List<BrokerCostAutogen>) this.readProperty("brokerCostAutogens");
	}

	public void addToBrokerCostAutogens1(final BrokerCostAutogen obj)
	{
		this.addToManyTarget("brokerCostAutogens1", obj, true);
	}

	public void removeFromBrokerCostAutogens1(final BrokerCostAutogen obj)
	{
		this.removeToManyTarget("brokerCostAutogens1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<BrokerCostAutogen> getBrokerCostAutogens1()
	{
		return (List<BrokerCostAutogen>) this.readProperty("brokerCostAutogens1");
	}

	public void addToBrokerCostStepPrices(final BrokerCostStepPrice obj)
	{
		this.addToManyTarget("brokerCostStepPrices", obj, true);
	}

	public void removeFromBrokerCostStepPrices(final BrokerCostStepPrice obj)
	{
		this.removeToManyTarget("brokerCostStepPrices", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<BrokerCostStepPrice> getBrokerCostStepPrices()
	{
		return (List<BrokerCostStepPrice>) this.readProperty("brokerCostStepPrices");
	}

	public void addToBunkerPurPriceLookups(final BunkerPurPriceLookup obj)
	{
		this.addToManyTarget("bunkerPurPriceLookups", obj, true);
	}

	public void removeFromBunkerPurPriceLookups(final BunkerPurPriceLookup obj)
	{
		this.removeToManyTarget("bunkerPurPriceLookups", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<BunkerPurPriceLookup> getBunkerPurPriceLookups()
	{
		return (List<BunkerPurPriceLookup>) this.readProperty("bunkerPurPriceLookups");
	}

	public void addToBunkerPurPriceLookups1(final BunkerPurPriceLookup obj)
	{
		this.addToManyTarget("bunkerPurPriceLookups1", obj, true);
	}

	public void removeFromBunkerPurPriceLookups1(final BunkerPurPriceLookup obj)
	{
		this.removeToManyTarget("bunkerPurPriceLookups1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<BunkerPurPriceLookup> getBunkerPurPriceLookups1()
	{
		return (List<BunkerPurPriceLookup>) this.readProperty("bunkerPurPriceLookups1");
	}

	public void addToCmdtyNomenclatures(final CmdtyNomenclature obj)
	{
		this.addToManyTarget("cmdtyNomenclatures", obj, true);
	}

	public void removeFromCmdtyNomenclatures(final CmdtyNomenclature obj)
	{
		this.removeToManyTarget("cmdtyNomenclatures", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<CmdtyNomenclature> getCmdtyNomenclatures()
	{
		return (List<CmdtyNomenclature>) this.readProperty("cmdtyNomenclatures");
	}

	public void addToCommktClrdSwapAttrs(final CommktClrdSwapAttr obj)
	{
		this.addToManyTarget("commktClrdSwapAttrs", obj, true);
	}

	public void removeFromCommktClrdSwapAttrs(final CommktClrdSwapAttr obj)
	{
		this.removeToManyTarget("commktClrdSwapAttrs", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<CommktClrdSwapAttr> getCommktClrdSwapAttrs()
	{
		return (List<CommktClrdSwapAttr>) this.readProperty("commktClrdSwapAttrs");
	}

	public void addToCommktClrdSwapAttrs1(final CommktClrdSwapAttr obj)
	{
		this.addToManyTarget("commktClrdSwapAttrs1", obj, true);
	}

	public void removeFromCommktClrdSwapAttrs1(final CommktClrdSwapAttr obj)
	{
		this.removeToManyTarget("commktClrdSwapAttrs1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<CommktClrdSwapAttr> getCommktClrdSwapAttrs1()
	{
		return (List<CommktClrdSwapAttr>) this.readProperty("commktClrdSwapAttrs1");
	}

	public void addToCommktFutureAttrs(final CommktFutureAttr obj)
	{
		this.addToManyTarget("commktFutureAttrs", obj, true);
	}

	public void removeFromCommktFutureAttrs(final CommktFutureAttr obj)
	{
		this.removeToManyTarget("commktFutureAttrs", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<CommktFutureAttr> getCommktFutureAttrs()
	{
		return (List<CommktFutureAttr>) this.readProperty("commktFutureAttrs");
	}

	public void addToCommktOptionAttrs(final CommktOptionAttr obj)
	{
		this.addToManyTarget("commktOptionAttrs", obj, true);
	}

	public void removeFromCommktOptionAttrs(final CommktOptionAttr obj)
	{
		this.removeToManyTarget("commktOptionAttrs", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<CommktOptionAttr> getCommktOptionAttrs()
	{
		return (List<CommktOptionAttr>) this.readProperty("commktOptionAttrs");
	}

	public void addToCommktPhysicalAttrs(final CommktPhysicalAttr obj)
	{
		this.addToManyTarget("commktPhysicalAttrs", obj, true);
	}

	public void removeFromCommktPhysicalAttrs(final CommktPhysicalAttr obj)
	{
		this.removeToManyTarget("commktPhysicalAttrs", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<CommktPhysicalAttr> getCommktPhysicalAttrs()
	{
		return (List<CommktPhysicalAttr>) this.readProperty("commktPhysicalAttrs");
	}

	public void addToCommodities(final Commodity obj)
	{
		this.addToManyTarget("commodities", obj, true);
	}

	public void removeFromCommodities(final Commodity obj)
	{
		this.removeToManyTarget("commodities", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<Commodity> getCommodities()
	{
		return (List<Commodity>) this.readProperty("commodities");
	}

	public void setCommodity(final CommoditySpecification commodity)
	{
		this.setToOneTarget("commodity", commodity, true);
	}

	public CommoditySpecification getCommodity()
	{
		return (CommoditySpecification) this.readProperty("commodity");
	}

	public void setCommodity1(final Commodity commodity1)
	{
		this.setToOneTarget("commodity1", commodity1, true);
	}

	public Commodity getCommodity1()
	{
		return (Commodity) this.readProperty("commodity1");
	}

	public void addToCommodityAliass(final CommodityAlias obj)
	{
		this.addToManyTarget("commodityAliass", obj, true);
	}

	public void removeFromCommodityAliass(final CommodityAlias obj)
	{
		this.removeToManyTarget("commodityAliass", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<CommodityAlias> getCommodityAliass()
	{
		return (List<CommodityAlias>) this.readProperty("commodityAliass");
	}

	public void addToCommodityByRollupTypes(final CommodityByRollupType obj)
	{
		this.addToManyTarget("commodityByRollupTypes", obj, true);
	}

	public void removeFromCommodityByRollupTypes(final CommodityByRollupType obj)
	{
		this.removeToManyTarget("commodityByRollupTypes", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<CommodityByRollupType> getCommodityByRollupTypes()
	{
		return (List<CommodityByRollupType>) this.readProperty("commodityByRollupTypes");
	}

	public void setCommodityCategory(final CommodityCategory commodityCategory)
	{
		this.setToOneTarget("commodityCategory", commodityCategory, true);
	}

	public CommodityCategory getCommodityCategory()
	{
		return (CommodityCategory) this.readProperty("commodityCategory");
	}

	public void addToCommodityCharSpecs(final CommodityCharSpec obj)
	{
		this.addToManyTarget("commodityCharSpecs", obj, true);
	}

	public void removeFromCommodityCharSpecs(final CommodityCharSpec obj)
	{
		this.removeToManyTarget("commodityCharSpecs", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<CommodityCharSpec> getCommodityCharSpecs()
	{
		return (List<CommodityCharSpec>) this.readProperty("commodityCharSpecs");
	}

	public void addToCommodityDescs(final CommodityDesc obj)
	{
		this.addToManyTarget("commodityDescs", obj, true);
	}

	public void removeFromCommodityDescs(final CommodityDesc obj)
	{
		this.removeToManyTarget("commodityDescs", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<CommodityDesc> getCommodityDescs()
	{
		return (List<CommodityDesc>) this.readProperty("commodityDescs");
	}

	public void addToCommodityGroups(final CommodityGroup obj)
	{
		this.addToManyTarget("commodityGroups", obj, true);
	}

	public void removeFromCommodityGroups(final CommodityGroup obj)
	{
		this.removeToManyTarget("commodityGroups", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<CommodityGroup> getCommodityGroups()
	{
		return (List<CommodityGroup>) this.readProperty("commodityGroups");
	}

	public void addToCommodityGroups1(final CommodityGroup obj)
	{
		this.addToManyTarget("commodityGroups1", obj, true);
	}

	public void removeFromCommodityGroups1(final CommodityGroup obj)
	{
		this.removeToManyTarget("commodityGroups1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<CommodityGroup> getCommodityGroups1()
	{
		return (List<CommodityGroup>) this.readProperty("commodityGroups1");
	}

	public void addToCommodityLocations(final CommodityLocation obj)
	{
		this.addToManyTarget("commodityLocations", obj, true);
	}

	public void removeFromCommodityLocations(final CommodityLocation obj)
	{
		this.removeToManyTarget("commodityLocations", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<CommodityLocation> getCommodityLocations()
	{
		return (List<CommodityLocation>) this.readProperty("commodityLocations");
	}

	public void addToCommodityLocations1(final CommodityLocation obj)
	{
		this.addToManyTarget("commodityLocations1", obj, true);
	}

	public void removeFromCommodityLocations1(final CommodityLocation obj)
	{
		this.removeToManyTarget("commodityLocations1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<CommodityLocation> getCommodityLocations1()
	{
		return (List<CommodityLocation>) this.readProperty("commodityLocations1");
	}

	public void addToCommodityLocations2(final CommodityLocation obj)
	{
		this.addToManyTarget("commodityLocations2", obj, true);
	}

	public void removeFromCommodityLocations2(final CommodityLocation obj)
	{
		this.removeToManyTarget("commodityLocations2", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<CommodityLocation> getCommodityLocations2()
	{
		return (List<CommodityLocation>) this.readProperty("commodityLocations2");
	}

	public void addToCommodityMarkets(final CommodityMarket obj)
	{
		this.addToManyTarget("commodityMarkets", obj, true);
	}

	public void removeFromCommodityMarkets(final CommodityMarket obj)
	{
		this.removeToManyTarget("commodityMarkets", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<CommodityMarket> getCommodityMarkets()
	{
		return (List<CommodityMarket>) this.readProperty("commodityMarkets");
	}

	public void addToCommodityRollupHierarchies(final CommodityRollupHierarchy obj)
	{
		this.addToManyTarget("commodityRollupHierarchies", obj, true);
	}

	public void removeFromCommodityRollupHierarchies(final CommodityRollupHierarchy obj)
	{
		this.removeToManyTarget("commodityRollupHierarchies", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<CommodityRollupHierarchy> getCommodityRollupHierarchies()
	{
		return (List<CommodityRollupHierarchy>) this.readProperty("commodityRollupHierarchies");
	}

	public void addToCommodityRollupHierarchies1(final CommodityRollupHierarchy obj)
	{
		this.addToManyTarget("commodityRollupHierarchies1", obj, true);
	}

	public void removeFromCommodityRollupHierarchies1(final CommodityRollupHierarchy obj)
	{
		this.removeToManyTarget("commodityRollupHierarchies1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<CommodityRollupHierarchy> getCommodityRollupHierarchies1()
	{
		return (List<CommodityRollupHierarchy>) this.readProperty("commodityRollupHierarchies1");
	}

	public void addToCommoditySpecificationOptions(final CommoditySpecificationOption obj)
	{
		this.addToManyTarget("commoditySpecificationOptions", obj, true);
	}

	public void removeFromCommoditySpecificationOptions(final CommoditySpecificationOption obj)
	{
		this.removeToManyTarget("commoditySpecificationOptions", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<CommoditySpecificationOption> getCommoditySpecificationOptions()
	{
		return (List<CommoditySpecificationOption>) this.readProperty("commoditySpecificationOptions");
	}

	public void addToCommoditySpecifications(final CommoditySpecification obj)
	{
		this.addToManyTarget("commoditySpecifications", obj, true);
	}

	public void removeFromCommoditySpecifications(final CommoditySpecification obj)
	{
		this.removeToManyTarget("commoditySpecifications", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<CommoditySpecification> getCommoditySpecifications()
	{
		return (List<CommoditySpecification>) this.readProperty("commoditySpecifications");
	}

	public void setCommodityType(final CommodityType commodityType)
	{
		this.setToOneTarget("commodityType", commodityType, true);
	}

	public CommodityType getCommodityType()
	{
		return (CommodityType) this.readProperty("commodityType");
	}

	public void addToCommodityUoms(final CommodityUom obj)
	{
		this.addToManyTarget("commodityUoms", obj, true);
	}

	public void removeFromCommodityUoms(final CommodityUom obj)
	{
		this.removeToManyTarget("commodityUoms", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<CommodityUom> getCommodityUoms()
	{
		return (List<CommodityUom>) this.readProperty("commodityUoms");
	}

	public void addToCostApprovals(final CostApproval obj)
	{
		this.addToManyTarget("costApprovals", obj, true);
	}

	public void removeFromCostApprovals(final CostApproval obj)
	{
		this.removeToManyTarget("costApprovals", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<CostApproval> getCostApprovals()
	{
		return (List<CostApproval>) this.readProperty("costApprovals");
	}

	public void addToCostCreditExposures(final CostCreditExposure obj)
	{
		this.addToManyTarget("costCreditExposures", obj, true);
	}

	public void removeFromCostCreditExposures(final CostCreditExposure obj)
	{
		this.removeToManyTarget("costCreditExposures", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<CostCreditExposure> getCostCreditExposures()
	{
		return (List<CostCreditExposure>) this.readProperty("costCreditExposures");
	}

	public void addToCostPriceDetails(final CostPriceDetail obj)
	{
		this.addToManyTarget("costPriceDetails", obj, true);
	}

	public void removeFromCostPriceDetails(final CostPriceDetail obj)
	{
		this.removeToManyTarget("costPriceDetails", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<CostPriceDetail> getCostPriceDetails()
	{
		return (List<CostPriceDetail>) this.readProperty("costPriceDetails");
	}

	public void addToCostRelativePrices(final CostRelativePrice obj)
	{
		this.addToManyTarget("costRelativePrices", obj, true);
	}

	public void removeFromCostRelativePrices(final CostRelativePrice obj)
	{
		this.removeToManyTarget("costRelativePrices", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<CostRelativePrice> getCostRelativePrices()
	{
		return (List<CostRelativePrice>) this.readProperty("costRelativePrices");
	}

	public void addToCostReportSnapshots(final CostReportSnapshot obj)
	{
		this.addToManyTarget("costReportSnapshots", obj, true);
	}

	public void removeFromCostReportSnapshots(final CostReportSnapshot obj)
	{
		this.removeToManyTarget("costReportSnapshots", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<CostReportSnapshot> getCostReportSnapshots()
	{
		return (List<CostReportSnapshot>) this.readProperty("costReportSnapshots");
	}

	public void addToCostScheduledPrices(final CostScheduledPrice obj)
	{
		this.addToManyTarget("costScheduledPrices", obj, true);
	}

	public void removeFromCostScheduledPrices(final CostScheduledPrice obj)
	{
		this.removeToManyTarget("costScheduledPrices", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<CostScheduledPrice> getCostScheduledPrices()
	{
		return (List<CostScheduledPrice>) this.readProperty("costScheduledPrices");
	}

	public void addToCosts(final Cost obj)
	{
		this.addToManyTarget("costs", obj, true);
	}

	public void removeFromCosts(final Cost obj)
	{
		this.removeToManyTarget("costs", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<Cost> getCosts()
	{
		return (List<Cost>) this.readProperty("costs");
	}

	public void addToCosts1(final Cost obj)
	{
		this.addToManyTarget("costs1", obj, true);
	}

	public void removeFromCosts1(final Cost obj)
	{
		this.removeToManyTarget("costs1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<Cost> getCosts1()
	{
		return (List<Cost>) this.readProperty("costs1");
	}

	public void setCountry(final Country country)
	{
		this.setToOneTarget("country", country, true);
	}

	public Country getCountry()
	{
		return (Country) this.readProperty("country");
	}

	public void addToCreditLimits(final CreditLimit obj)
	{
		this.addToManyTarget("creditLimits", obj, true);
	}

	public void removeFromCreditLimits(final CreditLimit obj)
	{
		this.removeToManyTarget("creditLimits", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<CreditLimit> getCreditLimits()
	{
		return (List<CreditLimit>) this.readProperty("creditLimits");
	}

	public void addToCreditLimits1(final CreditLimit obj)
	{
		this.addToManyTarget("creditLimits1", obj, true);
	}

	public void removeFromCreditLimits1(final CreditLimit obj)
	{
		this.removeToManyTarget("creditLimits1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<CreditLimit> getCreditLimits1()
	{
		return (List<CreditLimit>) this.readProperty("creditLimits1");
	}

	public void addToCreditReserves(final CreditReserve obj)
	{
		this.addToManyTarget("creditReserves", obj, true);
	}

	public void removeFromCreditReserves(final CreditReserve obj)
	{
		this.removeToManyTarget("creditReserves", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<CreditReserve> getCreditReserves()
	{
		return (List<CreditReserve>) this.readProperty("creditReserves");
	}

	public void addToCurrencyExposures(final CurrencyExposure obj)
	{
		this.addToManyTarget("currencyExposures", obj, true);
	}

	public void removeFromCurrencyExposures(final CurrencyExposure obj)
	{
		this.removeToManyTarget("currencyExposures", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<CurrencyExposure> getCurrencyExposures()
	{
		return (List<CurrencyExposure>) this.readProperty("currencyExposures");
	}

	public void addToExchFifoAllocs(final ExchFifoAlloc obj)
	{
		this.addToManyTarget("exchFifoAllocs", obj, true);
	}

	public void removeFromExchFifoAllocs(final ExchFifoAlloc obj)
	{
		this.removeToManyTarget("exchFifoAllocs", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<ExchFifoAlloc> getExchFifoAllocs()
	{
		return (List<ExchFifoAlloc>) this.readProperty("exchFifoAllocs");
	}

	public void addToExposures(final Exposure obj)
	{
		this.addToManyTarget("exposures", obj, true);
	}

	public void removeFromExposures(final Exposure obj)
	{
		this.removeToManyTarget("exposures", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<Exposure> getExposures()
	{
		return (List<Exposure>) this.readProperty("exposures");
	}

	public void addToFacilityCommodities(final FacilityCommodity obj)
	{
		this.addToManyTarget("facilityCommodities", obj, true);
	}

	public void removeFromFacilityCommodities(final FacilityCommodity obj)
	{
		this.removeToManyTarget("facilityCommodities", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<FacilityCommodity> getFacilityCommodities()
	{
		return (List<FacilityCommodity>) this.readProperty("facilityCommodities");
	}

	public void addToFlatRateses(final FlatRates obj)
	{
		this.addToManyTarget("flatRateses", obj, true);
	}

	public void removeFromFlatRateses(final FlatRates obj)
	{
		this.removeToManyTarget("flatRateses", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<FlatRates> getFlatRateses()
	{
		return (List<FlatRates>) this.readProperty("flatRateses");
	}

	public void addToFormulaBodyTriggers(final FormulaBodyTrigger obj)
	{
		this.addToManyTarget("formulaBodyTriggers", obj, true);
	}

	public void removeFromFormulaBodyTriggers(final FormulaBodyTrigger obj)
	{
		this.removeToManyTarget("formulaBodyTriggers", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<FormulaBodyTrigger> getFormulaBodyTriggers()
	{
		return (List<FormulaBodyTrigger>) this.readProperty("formulaBodyTriggers");
	}

	public void addToFormulaComponents(final FormulaComponent obj)
	{
		this.addToManyTarget("formulaComponents", obj, true);
	}

	public void removeFromFormulaComponents(final FormulaComponent obj)
	{
		this.removeToManyTarget("formulaComponents", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<FormulaComponent> getFormulaComponents()
	{
		return (List<FormulaComponent>) this.readProperty("formulaComponents");
	}

	public void addToFormulas(final Formula obj)
	{
		this.addToManyTarget("formulas", obj, true);
	}

	public void removeFromFormulas(final Formula obj)
	{
		this.removeToManyTarget("formulas", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<Formula> getFormulas()
	{
		return (List<Formula>) this.readProperty("formulas");
	}

	public void addToFxExposureCurrencies(final FxExposureCurrency obj)
	{
		this.addToManyTarget("fxExposureCurrencies", obj, true);
	}

	public void removeFromFxExposureCurrencies(final FxExposureCurrency obj)
	{
		this.removeToManyTarget("fxExposureCurrencies", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<FxExposureCurrency> getFxExposureCurrencies()
	{
		return (List<FxExposureCurrency>) this.readProperty("fxExposureCurrencies");
	}

	public void addToFxExposureCurrencies1(final FxExposureCurrency obj)
	{
		this.addToManyTarget("fxExposureCurrencies1", obj, true);
	}

	public void removeFromFxExposureCurrencies1(final FxExposureCurrency obj)
	{
		this.removeToManyTarget("fxExposureCurrencies1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<FxExposureCurrency> getFxExposureCurrencies1()
	{
		return (List<FxExposureCurrency>) this.readProperty("fxExposureCurrencies1");
	}

	public void addToFxExposureDists(final FxExposureDist obj)
	{
		this.addToManyTarget("fxExposureDists", obj, true);
	}

	public void removeFromFxExposureDists(final FxExposureDist obj)
	{
		this.removeToManyTarget("fxExposureDists", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<FxExposureDist> getFxExposureDists()
	{
		return (List<FxExposureDist>) this.readProperty("fxExposureDists");
	}

	public void addToFxHedgeRates(final FxHedgeRate obj)
	{
		this.addToManyTarget("fxHedgeRates", obj, true);
	}

	public void removeFromFxHedgeRates(final FxHedgeRate obj)
	{
		this.removeToManyTarget("fxHedgeRates", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<FxHedgeRate> getFxHedgeRates()
	{
		return (List<FxHedgeRate>) this.readProperty("fxHedgeRates");
	}

	public void addToFxHedgeRates1(final FxHedgeRate obj)
	{
		this.addToManyTarget("fxHedgeRates1", obj, true);
	}

	public void removeFromFxHedgeRates1(final FxHedgeRate obj)
	{
		this.removeToManyTarget("fxHedgeRates1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<FxHedgeRate> getFxHedgeRates1()
	{
		return (List<FxHedgeRate>) this.readProperty("fxHedgeRates1");
	}

	public void addToFxLinkings(final FxLinking obj)
	{
		this.addToManyTarget("fxLinkings", obj, true);
	}

	public void removeFromFxLinkings(final FxLinking obj)
	{
		this.removeToManyTarget("fxLinkings", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<FxLinking> getFxLinkings()
	{
		return (List<FxLinking>) this.readProperty("fxLinkings");
	}

	public void addToFxLinkings1(final FxLinking obj)
	{
		this.addToManyTarget("fxLinkings1", obj, true);
	}

	public void removeFromFxLinkings1(final FxLinking obj)
	{
		this.removeToManyTarget("fxLinkings1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<FxLinking> getFxLinkings1()
	{
		return (List<FxLinking>) this.readProperty("fxLinkings1");
	}

	public void addToFxRateHistories(final FxRateHistory obj)
	{
		this.addToManyTarget("fxRateHistories", obj, true);
	}

	public void removeFromFxRateHistories(final FxRateHistory obj)
	{
		this.removeToManyTarget("fxRateHistories", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<FxRateHistory> getFxRateHistories()
	{
		return (List<FxRateHistory>) this.readProperty("fxRateHistories");
	}

	public void addToFxRateHistories1(final FxRateHistory obj)
	{
		this.addToManyTarget("fxRateHistories1", obj, true);
	}

	public void removeFromFxRateHistories1(final FxRateHistory obj)
	{
		this.removeToManyTarget("fxRateHistories1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<FxRateHistory> getFxRateHistories1()
	{
		return (List<FxRateHistory>) this.readProperty("fxRateHistories1");
	}

	public void addToGlAccountBalances(final GlAccountBalance obj)
	{
		this.addToManyTarget("glAccountBalances", obj, true);
	}

	public void removeFromGlAccountBalances(final GlAccountBalance obj)
	{
		this.removeToManyTarget("glAccountBalances", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<GlAccountBalance> getGlAccountBalances()
	{
		return (List<GlAccountBalance>) this.readProperty("glAccountBalances");
	}

	public void addToGradeCommodityMarkets(final GradeCommodityMarket obj)
	{
		this.addToManyTarget("gradeCommodityMarkets", obj, true);
	}

	public void removeFromGradeCommodityMarkets(final GradeCommodityMarket obj)
	{
		this.removeToManyTarget("gradeCommodityMarkets", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<GradeCommodityMarket> getGradeCommodityMarkets()
	{
		return (List<GradeCommodityMarket>) this.readProperty("gradeCommodityMarkets");
	}

	public void addToGravityTableNames(final GravityTableName obj)
	{
		this.addToManyTarget("gravityTableNames", obj, true);
	}

	public void removeFromGravityTableNames(final GravityTableName obj)
	{
		this.removeToManyTarget("gravityTableNames", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<GravityTableName> getGravityTableNames()
	{
		return (List<GravityTableName>) this.readProperty("gravityTableNames");
	}

	public void addToInvActuals(final InvActual obj)
	{
		this.addToManyTarget("invActuals", obj, true);
	}

	public void removeFromInvActuals(final InvActual obj)
	{
		this.removeToManyTarget("invActuals", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<InvActual> getInvActuals()
	{
		return (List<InvActual>) this.readProperty("invActuals");
	}

	public void addToInvCreditExposures(final InvCreditExposure obj)
	{
		this.addToManyTarget("invCreditExposures", obj, true);
	}

	public void removeFromInvCreditExposures(final InvCreditExposure obj)
	{
		this.removeToManyTarget("invCreditExposures", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<InvCreditExposure> getInvCreditExposures()
	{
		return (List<InvCreditExposure>) this.readProperty("invCreditExposures");
	}

	public void addToInventories(final Inventory obj)
	{
		this.addToManyTarget("inventories", obj, true);
	}

	public void removeFromInventories(final Inventory obj)
	{
		this.removeToManyTarget("inventories", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<Inventory> getInventories()
	{
		return (List<Inventory>) this.readProperty("inventories");
	}

	public void addToInventories1(final Inventory obj)
	{
		this.addToManyTarget("inventories1", obj, true);
	}

	public void removeFromInventories1(final Inventory obj)
	{
		this.removeToManyTarget("inventories1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<Inventory> getInventories1()
	{
		return (List<Inventory>) this.readProperty("inventories1");
	}

	public void addToInventories2(final Inventory obj)
	{
		this.addToManyTarget("inventories2", obj, true);
	}

	public void removeFromInventories2(final Inventory obj)
	{
		this.removeToManyTarget("inventories2", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<Inventory> getInventories2()
	{
		return (List<Inventory>) this.readProperty("inventories2");
	}

	public void addToInventories3(final Inventory obj)
	{
		this.addToManyTarget("inventories3", obj, true);
	}

	public void removeFromInventories3(final Inventory obj)
	{
		this.removeToManyTarget("inventories3", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<Inventory> getInventories3()
	{
		return (List<Inventory>) this.readProperty("inventories3");
	}

	public void addToInventoryBalances(final InventoryBalance obj)
	{
		this.addToManyTarget("inventoryBalances", obj, true);
	}

	public void removeFromInventoryBalances(final InventoryBalance obj)
	{
		this.removeToManyTarget("inventoryBalances", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<InventoryBalance> getInventoryBalances()
	{
		return (List<InventoryBalance>) this.readProperty("inventoryBalances");
	}

	public void addToInventoryBuildDraws(final InventoryBuildDraw obj)
	{
		this.addToManyTarget("inventoryBuildDraws", obj, true);
	}

	public void removeFromInventoryBuildDraws(final InventoryBuildDraw obj)
	{
		this.removeToManyTarget("inventoryBuildDraws", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<InventoryBuildDraw> getInventoryBuildDraws()
	{
		return (List<InventoryBuildDraw>) this.readProperty("inventoryBuildDraws");
	}

	public void addToInventoryRollCriterias(final InventoryRollCriteria obj)
	{
		this.addToManyTarget("inventoryRollCriterias", obj, true);
	}

	public void removeFromInventoryRollCriterias(final InventoryRollCriteria obj)
	{
		this.removeToManyTarget("inventoryRollCriterias", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<InventoryRollCriteria> getInventoryRollCriterias()
	{
		return (List<InventoryRollCriteria>) this.readProperty("inventoryRollCriterias");
	}

	public void addToLcAllocations(final LcAllocation obj)
	{
		this.addToManyTarget("lcAllocations", obj, true);
	}

	public void removeFromLcAllocations(final LcAllocation obj)
	{
		this.removeToManyTarget("lcAllocations", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<LcAllocation> getLcAllocations()
	{
		return (List<LcAllocation>) this.readProperty("lcAllocations");
	}

	public void addToLcAllocations1(final LcAllocation obj)
	{
		this.addToManyTarget("lcAllocations1", obj, true);
	}

	public void removeFromLcAllocations1(final LcAllocation obj)
	{
		this.removeToManyTarget("lcAllocations1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<LcAllocation> getLcAllocations1()
	{
		return (List<LcAllocation>) this.readProperty("lcAllocations1");
	}

	public void addToLcAllocations2(final LcAllocation obj)
	{
		this.addToManyTarget("lcAllocations2", obj, true);
	}

	public void removeFromLcAllocations2(final LcAllocation obj)
	{
		this.removeToManyTarget("lcAllocations2", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<LcAllocation> getLcAllocations2()
	{
		return (List<LcAllocation>) this.readProperty("lcAllocations2");
	}

	public void addToLcBankfeeAutogens(final LcBankfeeAutogen obj)
	{
		this.addToManyTarget("lcBankfeeAutogens", obj, true);
	}

	public void removeFromLcBankfeeAutogens(final LcBankfeeAutogen obj)
	{
		this.removeToManyTarget("lcBankfeeAutogens", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<LcBankfeeAutogen> getLcBankfeeAutogens()
	{
		return (List<LcBankfeeAutogen>) this.readProperty("lcBankfeeAutogens");
	}

	public void addToLcBankfeeRefdatas(final LcBankfeeRefdata obj)
	{
		this.addToManyTarget("lcBankfeeRefdatas", obj, true);
	}

	public void removeFromLcBankfeeRefdatas(final LcBankfeeRefdata obj)
	{
		this.removeToManyTarget("lcBankfeeRefdatas", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<LcBankfeeRefdata> getLcBankfeeRefdatas()
	{
		return (List<LcBankfeeRefdata>) this.readProperty("lcBankfeeRefdatas");
	}

	public void addToLicTaxImplications(final LicTaxImplication obj)
	{
		this.addToManyTarget("licTaxImplications", obj, true);
	}

	public void removeFromLicTaxImplications(final LicTaxImplication obj)
	{
		this.removeToManyTarget("licTaxImplications", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<LicTaxImplication> getLicTaxImplications()
	{
		return (List<LicTaxImplication>) this.readProperty("licTaxImplications");
	}

	public void addToLicenseCoverss(final LicenseCovers obj)
	{
		this.addToManyTarget("licenseCoverss", obj, true);
	}

	public void removeFromLicenseCoverss(final LicenseCovers obj)
	{
		this.removeToManyTarget("licenseCoverss", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<LicenseCovers> getLicenseCoverss()
	{
		return (List<LicenseCovers>) this.readProperty("licenseCoverss");
	}

	public void addToLmRiskExchRates(final LmRiskExchRate obj)
	{
		this.addToManyTarget("lmRiskExchRates", obj, true);
	}

	public void removeFromLmRiskExchRates(final LmRiskExchRate obj)
	{
		this.removeToManyTarget("lmRiskExchRates", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<LmRiskExchRate> getLmRiskExchRates()
	{
		return (List<LmRiskExchRate>) this.readProperty("lmRiskExchRates");
	}

	public void addToLmRiskExchRates1(final LmRiskExchRate obj)
	{
		this.addToManyTarget("lmRiskExchRates1", obj, true);
	}

	public void removeFromLmRiskExchRates1(final LmRiskExchRate obj)
	{
		this.removeToManyTarget("lmRiskExchRates1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<LmRiskExchRate> getLmRiskExchRates1()
	{
		return (List<LmRiskExchRate>) this.readProperty("lmRiskExchRates1");
	}

	public void addToLocationChargeses(final LocationCharges obj)
	{
		this.addToManyTarget("locationChargeses", obj, true);
	}

	public void removeFromLocationChargeses(final LocationCharges obj)
	{
		this.removeToManyTarget("locationChargeses", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<LocationCharges> getLocationChargeses()
	{
		return (List<LocationCharges>) this.readProperty("locationChargeses");
	}

	public void addToLocationCostFigureses(final LocationCostFigures obj)
	{
		this.addToManyTarget("locationCostFigureses", obj, true);
	}

	public void removeFromLocationCostFigureses(final LocationCostFigures obj)
	{
		this.removeToManyTarget("locationCostFigureses", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<LocationCostFigures> getLocationCostFigureses()
	{
		return (List<LocationCostFigures>) this.readProperty("locationCostFigureses");
	}

	public void addToLocationShoreLineses(final LocationShoreLines obj)
	{
		this.addToManyTarget("locationShoreLineses", obj, true);
	}

	public void removeFromLocationShoreLineses(final LocationShoreLines obj)
	{
		this.removeToManyTarget("locationShoreLineses", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<LocationShoreLines> getLocationShoreLineses()
	{
		return (List<LocationShoreLines>) this.readProperty("locationShoreLineses");
	}

	public void addToMarketPricingCostss(final MarketPricingCosts obj)
	{
		this.addToManyTarget("marketPricingCostss", obj, true);
	}

	public void removeFromMarketPricingCostss(final MarketPricingCosts obj)
	{
		this.removeToManyTarget("marketPricingCostss", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<MarketPricingCosts> getMarketPricingCostss()
	{
		return (List<MarketPricingCosts>) this.readProperty("marketPricingCostss");
	}

	public void addToMarketableSecurities(final MarketableSecurity obj)
	{
		this.addToManyTarget("marketableSecurities", obj, true);
	}

	public void removeFromMarketableSecurities(final MarketableSecurity obj)
	{
		this.removeToManyTarget("marketableSecurities", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<MarketableSecurity> getMarketableSecurities()
	{
		return (List<MarketableSecurity>) this.readProperty("marketableSecurities");
	}

	public void addToMasterCollAgreements(final MasterCollAgreement obj)
	{
		this.addToManyTarget("masterCollAgreements", obj, true);
	}

	public void removeFromMasterCollAgreements(final MasterCollAgreement obj)
	{
		this.removeToManyTarget("masterCollAgreements", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<MasterCollAgreement> getMasterCollAgreements()
	{
		return (List<MasterCollAgreement>) this.readProperty("masterCollAgreements");
	}

	public void addToMcaTradeItems(final McaTradeItem obj)
	{
		this.addToManyTarget("mcaTradeItems", obj, true);
	}

	public void removeFromMcaTradeItems(final McaTradeItem obj)
	{
		this.removeToManyTarget("mcaTradeItems", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<McaTradeItem> getMcaTradeItems()
	{
		return (List<McaTradeItem>) this.readProperty("mcaTradeItems");
	}

	public void addToMotLocationTariffs(final MotLocationTariff obj)
	{
		this.addToManyTarget("motLocationTariffs", obj, true);
	}

	public void removeFromMotLocationTariffs(final MotLocationTariff obj)
	{
		this.removeToManyTarget("motLocationTariffs", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<MotLocationTariff> getMotLocationTariffs()
	{
		return (List<MotLocationTariff>) this.readProperty("motLocationTariffs");
	}

	public void addToNoiseBandExposures(final NoiseBandExposure obj)
	{
		this.addToManyTarget("noiseBandExposures", obj, true);
	}

	public void removeFromNoiseBandExposures(final NoiseBandExposure obj)
	{
		this.removeToManyTarget("noiseBandExposures", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<NoiseBandExposure> getNoiseBandExposures()
	{
		return (List<NoiseBandExposure>) this.readProperty("noiseBandExposures");
	}

	public void addToOtcOptions(final OtcOption obj)
	{
		this.addToManyTarget("otcOptions", obj, true);
	}

	public void removeFromOtcOptions(final OtcOption obj)
	{
		this.removeToManyTarget("otcOptions", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<OtcOption> getOtcOptions()
	{
		return (List<OtcOption>) this.readProperty("otcOptions");
	}

	public void addToPaperAllocations(final PaperAllocation obj)
	{
		this.addToManyTarget("paperAllocations", obj, true);
	}

	public void removeFromPaperAllocations(final PaperAllocation obj)
	{
		this.removeToManyTarget("paperAllocations", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<PaperAllocation> getPaperAllocations()
	{
		return (List<PaperAllocation>) this.readProperty("paperAllocations");
	}

	public void addToParcels(final Parcel obj)
	{
		this.addToManyTarget("parcels", obj, true);
	}

	public void removeFromParcels(final Parcel obj)
	{
		this.removeToManyTarget("parcels", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<Parcel> getParcels()
	{
		return (List<Parcel>) this.readProperty("parcels");
	}

	public void addToParcels1(final Parcel obj)
	{
		this.addToManyTarget("parcels1", obj, true);
	}

	public void removeFromParcels1(final Parcel obj)
	{
		this.removeToManyTarget("parcels1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<Parcel> getParcels1()
	{
		return (List<Parcel>) this.readProperty("parcels1");
	}

	public void addToParentGuarantees(final ParentGuarantee obj)
	{
		this.addToManyTarget("parentGuarantees", obj, true);
	}

	public void removeFromParentGuarantees(final ParentGuarantee obj)
	{
		this.removeToManyTarget("parentGuarantees", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<ParentGuarantee> getParentGuarantees()
	{
		return (List<ParentGuarantee>) this.readProperty("parentGuarantees");
	}

	public void addToParentGuarantees1(final ParentGuarantee obj)
	{
		this.addToManyTarget("parentGuarantees1", obj, true);
	}

	public void removeFromParentGuarantees1(final ParentGuarantee obj)
	{
		this.removeToManyTarget("parentGuarantees1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<ParentGuarantee> getParentGuarantees1()
	{
		return (List<ParentGuarantee>) this.readProperty("parentGuarantees1");
	}

	public void addToPipelineCycles(final PipelineCycle obj)
	{
		this.addToManyTarget("pipelineCycles", obj, true);
	}

	public void removeFromPipelineCycles(final PipelineCycle obj)
	{
		this.removeToManyTarget("pipelineCycles", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<PipelineCycle> getPipelineCycles()
	{
		return (List<PipelineCycle>) this.readProperty("pipelineCycles");
	}

	public void addToPlContractExclusionss(final PlContractExclusions obj)
	{
		this.addToManyTarget("plContractExclusionss", obj, true);
	}

	public void removeFromPlContractExclusionss(final PlContractExclusions obj)
	{
		this.removeToManyTarget("plContractExclusionss", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<PlContractExclusions> getPlContractExclusionss()
	{
		return (List<PlContractExclusions>) this.readProperty("plContractExclusionss");
	}

	public void addToPlContractExclusionss1(final PlContractExclusions obj)
	{
		this.addToManyTarget("plContractExclusionss1", obj, true);
	}

	public void removeFromPlContractExclusionss1(final PlContractExclusions obj)
	{
		this.removeToManyTarget("plContractExclusionss1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<PlContractExclusions> getPlContractExclusionss1()
	{
		return (List<PlContractExclusions>) this.readProperty("plContractExclusionss1");
	}

	public void addToPlContractLosseses(final PlContractLosses obj)
	{
		this.addToManyTarget("plContractLosseses", obj, true);
	}

	public void removeFromPlContractLosseses(final PlContractLosses obj)
	{
		this.removeToManyTarget("plContractLosseses", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<PlContractLosses> getPlContractLosseses()
	{
		return (List<PlContractLosses>) this.readProperty("plContractLosseses");
	}

	public void addToPlContractLosseses1(final PlContractLosses obj)
	{
		this.addToManyTarget("plContractLosseses1", obj, true);
	}

	public void removeFromPlContractLosseses1(final PlContractLosses obj)
	{
		this.removeToManyTarget("plContractLosseses1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<PlContractLosses> getPlContractLosseses1()
	{
		return (List<PlContractLosses>) this.readProperty("plContractLosseses1");
	}

	public void addToPlContractTariffAdjs(final PlContractTariffAdj obj)
	{
		this.addToManyTarget("plContractTariffAdjs", obj, true);
	}

	public void removeFromPlContractTariffAdjs(final PlContractTariffAdj obj)
	{
		this.removeToManyTarget("plContractTariffAdjs", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<PlContractTariffAdj> getPlContractTariffAdjs()
	{
		return (List<PlContractTariffAdj>) this.readProperty("plContractTariffAdjs");
	}

	public void addToPlContractTariffAdjs1(final PlContractTariffAdj obj)
	{
		this.addToManyTarget("plContractTariffAdjs1", obj, true);
	}

	public void removeFromPlContractTariffAdjs1(final PlContractTariffAdj obj)
	{
		this.removeToManyTarget("plContractTariffAdjs1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<PlContractTariffAdj> getPlContractTariffAdjs1()
	{
		return (List<PlContractTariffAdj>) this.readProperty("plContractTariffAdjs1");
	}

	public void addToPlContractTariffss(final PlContractTariffs obj)
	{
		this.addToManyTarget("plContractTariffss", obj, true);
	}

	public void removeFromPlContractTariffss(final PlContractTariffs obj)
	{
		this.removeToManyTarget("plContractTariffss", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<PlContractTariffs> getPlContractTariffss()
	{
		return (List<PlContractTariffs>) this.readProperty("plContractTariffss");
	}

	public void addToPlContractTariffss1(final PlContractTariffs obj)
	{
		this.addToManyTarget("plContractTariffss1", obj, true);
	}

	public void removeFromPlContractTariffss1(final PlContractTariffs obj)
	{
		this.removeToManyTarget("plContractTariffss1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<PlContractTariffs> getPlContractTariffss1()
	{
		return (List<PlContractTariffs>) this.readProperty("plContractTariffss1");
	}

	public void addToPlContractTariffss2(final PlContractTariffs obj)
	{
		this.addToManyTarget("plContractTariffss2", obj, true);
	}

	public void removeFromPlContractTariffss2(final PlContractTariffs obj)
	{
		this.removeToManyTarget("plContractTariffss2", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<PlContractTariffs> getPlContractTariffss2()
	{
		return (List<PlContractTariffs>) this.readProperty("plContractTariffss2");
	}

	public void addToPlContractViscositieses(final PlContractViscosities obj)
	{
		this.addToManyTarget("plContractViscositieses", obj, true);
	}

	public void removeFromPlContractViscositieses(final PlContractViscosities obj)
	{
		this.removeToManyTarget("plContractViscositieses", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<PlContractViscosities> getPlContractViscositieses()
	{
		return (List<PlContractViscosities>) this.readProperty("plContractViscositieses");
	}

	public void addToPlContractViscositieses1(final PlContractViscosities obj)
	{
		this.addToManyTarget("plContractViscositieses1", obj, true);
	}

	public void removeFromPlContractViscositieses1(final PlContractViscosities obj)
	{
		this.removeToManyTarget("plContractViscositieses1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<PlContractViscosities> getPlContractViscositieses1()
	{
		return (List<PlContractViscosities>) this.readProperty("plContractViscositieses1");
	}

	public void addToPlContracts(final PlContract obj)
	{
		this.addToManyTarget("plContracts", obj, true);
	}

	public void removeFromPlContracts(final PlContract obj)
	{
		this.removeToManyTarget("plContracts", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<PlContract> getPlContracts()
	{
		return (List<PlContract>) this.readProperty("plContracts");
	}

	public void addToPlContracts1(final PlContract obj)
	{
		this.addToManyTarget("plContracts1", obj, true);
	}

	public void removeFromPlContracts1(final PlContract obj)
	{
		this.removeToManyTarget("plContracts1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<PlContract> getPlContracts1()
	{
		return (List<PlContract>) this.readProperty("plContracts1");
	}

	public void addToPlContracts2(final PlContract obj)
	{
		this.addToManyTarget("plContracts2", obj, true);
	}

	public void removeFromPlContracts2(final PlContract obj)
	{
		this.removeToManyTarget("plContracts2", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<PlContract> getPlContracts2()
	{
		return (List<PlContract>) this.readProperty("plContracts2");
	}

	public void addToPlContracts3(final PlContract obj)
	{
		this.addToManyTarget("plContracts3", obj, true);
	}

	public void removeFromPlContracts3(final PlContract obj)
	{
		this.removeToManyTarget("plContracts3", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<PlContract> getPlContracts3()
	{
		return (List<PlContract>) this.readProperty("plContracts3");
	}

	public void addToPlContracts4(final PlContract obj)
	{
		this.addToManyTarget("plContracts4", obj, true);
	}

	public void removeFromPlContracts4(final PlContract obj)
	{
		this.removeToManyTarget("plContracts4", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<PlContract> getPlContracts4()
	{
		return (List<PlContract>) this.readProperty("plContracts4");
	}

	public void addToPlContracts5(final PlContract obj)
	{
		this.addToManyTarget("plContracts5", obj, true);
	}

	public void removeFromPlContracts5(final PlContract obj)
	{
		this.removeToManyTarget("plContracts5", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<PlContract> getPlContracts5()
	{
		return (List<PlContract>) this.readProperty("plContracts5");
	}

	public void addToPlOffsetTransfers(final PlOffsetTransfer obj)
	{
		this.addToManyTarget("plOffsetTransfers", obj, true);
	}

	public void removeFromPlOffsetTransfers(final PlOffsetTransfer obj)
	{
		this.removeToManyTarget("plOffsetTransfers", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<PlOffsetTransfer> getPlOffsetTransfers()
	{
		return (List<PlOffsetTransfer>) this.readProperty("plOffsetTransfers");
	}

	public void addToPlOpsAdjs(final PlOpsAdj obj)
	{
		this.addToManyTarget("plOpsAdjs", obj, true);
	}

	public void removeFromPlOpsAdjs(final PlOpsAdj obj)
	{
		this.removeToManyTarget("plOpsAdjs", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<PlOpsAdj> getPlOpsAdjs()
	{
		return (List<PlOpsAdj>) this.readProperty("plOpsAdjs");
	}

	public void addToPlOpsCargoDetailss(final PlOpsCargoDetails obj)
	{
		this.addToManyTarget("plOpsCargoDetailss", obj, true);
	}

	public void removeFromPlOpsCargoDetailss(final PlOpsCargoDetails obj)
	{
		this.removeToManyTarget("plOpsCargoDetailss", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<PlOpsCargoDetails> getPlOpsCargoDetailss()
	{
		return (List<PlOpsCargoDetails>) this.readProperty("plOpsCargoDetailss");
	}

	public void addToPlOpsCargoes(final PlOpsCargo obj)
	{
		this.addToManyTarget("plOpsCargoes", obj, true);
	}

	public void removeFromPlOpsCargoes(final PlOpsCargo obj)
	{
		this.removeToManyTarget("plOpsCargoes", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<PlOpsCargo> getPlOpsCargoes()
	{
		return (List<PlOpsCargo>) this.readProperty("plOpsCargoes");
	}

	public void addToPlReconciliations(final PlReconciliation obj)
	{
		this.addToManyTarget("plReconciliations", obj, true);
	}

	public void removeFromPlReconciliations(final PlReconciliation obj)
	{
		this.removeToManyTarget("plReconciliations", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<PlReconciliation> getPlReconciliations()
	{
		return (List<PlReconciliation>) this.readProperty("plReconciliations");
	}

	public void addToPmTradeMatchCriterias(final PmTradeMatchCriteria obj)
	{
		this.addToManyTarget("pmTradeMatchCriterias", obj, true);
	}

	public void removeFromPmTradeMatchCriterias(final PmTradeMatchCriteria obj)
	{
		this.removeToManyTarget("pmTradeMatchCriterias", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<PmTradeMatchCriteria> getPmTradeMatchCriterias()
	{
		return (List<PmTradeMatchCriteria>) this.readProperty("pmTradeMatchCriterias");
	}

	public void addToPortfolioEods(final PortfolioEod obj)
	{
		this.addToManyTarget("portfolioEods", obj, true);
	}

	public void removeFromPortfolioEods(final PortfolioEod obj)
	{
		this.removeToManyTarget("portfolioEods", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<PortfolioEod> getPortfolioEods()
	{
		return (List<PortfolioEod>) this.readProperty("portfolioEods");
	}

	public void addToPortfolioExtInfoes(final PortfolioExtInfo obj)
	{
		this.addToManyTarget("portfolioExtInfoes", obj, true);
	}

	public void removeFromPortfolioExtInfoes(final PortfolioExtInfo obj)
	{
		this.removeToManyTarget("portfolioExtInfoes", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<PortfolioExtInfo> getPortfolioExtInfoes()
	{
		return (List<PortfolioExtInfo>) this.readProperty("portfolioExtInfoes");
	}

	public void addToPortfolioExtInfoes1(final PortfolioExtInfo obj)
	{
		this.addToManyTarget("portfolioExtInfoes1", obj, true);
	}

	public void removeFromPortfolioExtInfoes1(final PortfolioExtInfo obj)
	{
		this.removeToManyTarget("portfolioExtInfoes1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<PortfolioExtInfo> getPortfolioExtInfoes1()
	{
		return (List<PortfolioExtInfo>) this.readProperty("portfolioExtInfoes1");
	}

	public void addToPortfolioExtInfoes2(final PortfolioExtInfo obj)
	{
		this.addToManyTarget("portfolioExtInfoes2", obj, true);
	}

	public void removeFromPortfolioExtInfoes2(final PortfolioExtInfo obj)
	{
		this.removeToManyTarget("portfolioExtInfoes2", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<PortfolioExtInfo> getPortfolioExtInfoes2()
	{
		return (List<PortfolioExtInfo>) this.readProperty("portfolioExtInfoes2");
	}

	public void addToPortfolioProfitLosses(final PortfolioProfitLoss obj)
	{
		this.addToManyTarget("portfolioProfitLosses", obj, true);
	}

	public void removeFromPortfolioProfitLosses(final PortfolioProfitLoss obj)
	{
		this.removeToManyTarget("portfolioProfitLosses", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<PortfolioProfitLoss> getPortfolioProfitLosses()
	{
		return (List<PortfolioProfitLoss>) this.readProperty("portfolioProfitLosses");
	}

	public void addToPortfolios(final Portfolio obj)
	{
		this.addToManyTarget("portfolios", obj, true);
	}

	public void removeFromPortfolios(final Portfolio obj)
	{
		this.removeToManyTarget("portfolios", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<Portfolio> getPortfolios()
	{
		return (List<Portfolio>) this.readProperty("portfolios");
	}

	public void addToPositionHistories(final PositionHistory obj)
	{
		this.addToManyTarget("positionHistories", obj, true);
	}

	public void removeFromPositionHistories(final PositionHistory obj)
	{
		this.removeToManyTarget("positionHistories", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<PositionHistory> getPositionHistories()
	{
		return (List<PositionHistory>) this.readProperty("positionHistories");
	}

	public void addToPositionHistories1(final PositionHistory obj)
	{
		this.addToManyTarget("positionHistories1", obj, true);
	}

	public void removeFromPositionHistories1(final PositionHistory obj)
	{
		this.removeToManyTarget("positionHistories1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<PositionHistory> getPositionHistories1()
	{
		return (List<PositionHistory>) this.readProperty("positionHistories1");
	}

	public void addToPositionHistories2(final PositionHistory obj)
	{
		this.addToManyTarget("positionHistories2", obj, true);
	}

	public void removeFromPositionHistories2(final PositionHistory obj)
	{
		this.removeToManyTarget("positionHistories2", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<PositionHistory> getPositionHistories2()
	{
		return (List<PositionHistory>) this.readProperty("positionHistories2");
	}

	public void addToPositionMarkToMarkets(final PositionMarkToMarket obj)
	{
		this.addToManyTarget("positionMarkToMarkets", obj, true);
	}

	public void removeFromPositionMarkToMarkets(final PositionMarkToMarket obj)
	{
		this.removeToManyTarget("positionMarkToMarkets", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<PositionMarkToMarket> getPositionMarkToMarkets()
	{
		return (List<PositionMarkToMarket>) this.readProperty("positionMarkToMarkets");
	}

	public void addToPositions(final Position obj)
	{
		this.addToManyTarget("positions", obj, true);
	}

	public void removeFromPositions(final Position obj)
	{
		this.removeToManyTarget("positions", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<Position> getPositions()
	{
		return (List<Position>) this.readProperty("positions");
	}

	public void addToPositions1(final Position obj)
	{
		this.addToManyTarget("positions1", obj, true);
	}

	public void removeFromPositions1(final Position obj)
	{
		this.removeToManyTarget("positions1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<Position> getPositions1()
	{
		return (List<Position>) this.readProperty("positions1");
	}

	public void addToPositions2(final Position obj)
	{
		this.addToManyTarget("positions2", obj, true);
	}

	public void removeFromPositions2(final Position obj)
	{
		this.removeToManyTarget("positions2", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<Position> getPositions2()
	{
		return (List<Position>) this.readProperty("positions2");
	}

	public void addToProducts(final Product obj)
	{
		this.addToManyTarget("products", obj, true);
	}

	public void removeFromProducts(final Product obj)
	{
		this.removeToManyTarget("products", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<Product> getProducts()
	{
		return (List<Product>) this.readProperty("products");
	}

	public void addToPurchaseSaleGroups(final PurchaseSaleGroup obj)
	{
		this.addToManyTarget("purchaseSaleGroups", obj, true);
	}

	public void removeFromPurchaseSaleGroups(final PurchaseSaleGroup obj)
	{
		this.removeToManyTarget("purchaseSaleGroups", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<PurchaseSaleGroup> getPurchaseSaleGroups()
	{
		return (List<PurchaseSaleGroup>) this.readProperty("purchaseSaleGroups");
	}

	public void addToQppMarkToMarkets(final QppMarkToMarket obj)
	{
		this.addToManyTarget("qppMarkToMarkets", obj, true);
	}

	public void removeFromQppMarkToMarkets(final QppMarkToMarket obj)
	{
		this.removeToManyTarget("qppMarkToMarkets", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<QppMarkToMarket> getQppMarkToMarkets()
	{
		return (List<QppMarkToMarket>) this.readProperty("qppMarkToMarkets");
	}

	public void addToQualSlateCmdtySpecs(final QualSlateCmdtySpec obj)
	{
		this.addToManyTarget("qualSlateCmdtySpecs", obj, true);
	}

	public void removeFromQualSlateCmdtySpecs(final QualSlateCmdtySpec obj)
	{
		this.removeToManyTarget("qualSlateCmdtySpecs", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<QualSlateCmdtySpec> getQualSlateCmdtySpecs()
	{
		return (List<QualSlateCmdtySpec>) this.readProperty("qualSlateCmdtySpecs");
	}

	public void addToQuoteMarketdataSources(final QuoteMarketdataSource obj)
	{
		this.addToManyTarget("quoteMarketdataSources", obj, true);
	}

	public void removeFromQuoteMarketdataSources(final QuoteMarketdataSource obj)
	{
		this.removeToManyTarget("quoteMarketdataSources", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<QuoteMarketdataSource> getQuoteMarketdataSources()
	{
		return (List<QuoteMarketdataSource>) this.readProperty("quoteMarketdataSources");
	}

	public void addToQuotePrices(final QuotePrice obj)
	{
		this.addToManyTarget("quotePrices", obj, true);
	}

	public void removeFromQuotePrices(final QuotePrice obj)
	{
		this.removeToManyTarget("quotePrices", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<QuotePrice> getQuotePrices()
	{
		return (List<QuotePrice>) this.readProperty("quotePrices");
	}

	public void addToRailcarPtpRates(final RailcarPtpRate obj)
	{
		this.addToManyTarget("railcarPtpRates", obj, true);
	}

	public void removeFromRailcarPtpRates(final RailcarPtpRate obj)
	{
		this.removeToManyTarget("railcarPtpRates", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<RailcarPtpRate> getRailcarPtpRates()
	{
		return (List<RailcarPtpRate>) this.readProperty("railcarPtpRates");
	}

	public void addToRealizaPriceFrgCosts(final RealizaPriceFrgCost obj)
	{
		this.addToManyTarget("realizaPriceFrgCosts", obj, true);
	}

	public void removeFromRealizaPriceFrgCosts(final RealizaPriceFrgCost obj)
	{
		this.removeToManyTarget("realizaPriceFrgCosts", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<RealizaPriceFrgCost> getRealizaPriceFrgCosts()
	{
		return (List<RealizaPriceFrgCost>) this.readProperty("realizaPriceFrgCosts");
	}

	public void addToRecapItems(final RecapItem obj)
	{
		this.addToManyTarget("recapItems", obj, true);
	}

	public void removeFromRecapItems(final RecapItem obj)
	{
		this.removeToManyTarget("recapItems", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<RecapItem> getRecapItems()
	{
		return (List<RecapItem>) this.readProperty("recapItems");
	}

	public void addToRinDefinitions(final RinDefinition obj)
	{
		this.addToManyTarget("rinDefinitions", obj, true);
	}

	public void removeFromRinDefinitions(final RinDefinition obj)
	{
		this.removeToManyTarget("rinDefinitions", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<RinDefinition> getRinDefinitions()
	{
		return (List<RinDefinition>) this.readProperty("rinDefinitions");
	}

	public void addToRinEquivalences(final RinEquivalence obj)
	{
		this.addToManyTarget("rinEquivalences", obj, true);
	}

	public void removeFromRinEquivalences(final RinEquivalence obj)
	{
		this.removeToManyTarget("rinEquivalences", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<RinEquivalence> getRinEquivalences()
	{
		return (List<RinEquivalence>) this.readProperty("rinEquivalences");
	}

	public void addToRinEquivalences1(final RinEquivalence obj)
	{
		this.addToManyTarget("rinEquivalences1", obj, true);
	}

	public void removeFromRinEquivalences1(final RinEquivalence obj)
	{
		this.removeToManyTarget("rinEquivalences1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<RinEquivalence> getRinEquivalences1()
	{
		return (List<RinEquivalence>) this.readProperty("rinEquivalences1");
	}

	public void addToRinObligations(final RinObligation obj)
	{
		this.addToManyTarget("rinObligations", obj, true);
	}

	public void removeFromRinObligations(final RinObligation obj)
	{
		this.removeToManyTarget("rinObligations", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<RinObligation> getRinObligations()
	{
		return (List<RinObligation>) this.readProperty("rinObligations");
	}

	public void addToRinObligations1(final RinObligation obj)
	{
		this.addToManyTarget("rinObligations1", obj, true);
	}

	public void removeFromRinObligations1(final RinObligation obj)
	{
		this.removeToManyTarget("rinObligations1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<RinObligation> getRinObligations1()
	{
		return (List<RinObligation>) this.readProperty("rinObligations1");
	}

	public void addToRiskCovers(final RiskCover obj)
	{
		this.addToManyTarget("riskCovers", obj, true);
	}

	public void removeFromRiskCovers(final RiskCover obj)
	{
		this.removeToManyTarget("riskCovers", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<RiskCover> getRiskCovers()
	{
		return (List<RiskCover>) this.readProperty("riskCovers");
	}

	public void addToScenarioItems(final ScenarioItem obj)
	{
		this.addToManyTarget("scenarioItems", obj, true);
	}

	public void removeFromScenarioItems(final ScenarioItem obj)
	{
		this.removeToManyTarget("scenarioItems", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<ScenarioItem> getScenarioItems()
	{
		return (List<ScenarioItem>) this.readProperty("scenarioItems");
	}

	public void addToShipments(final Shipment obj)
	{
		this.addToManyTarget("shipments", obj, true);
	}

	public void removeFromShipments(final Shipment obj)
	{
		this.removeToManyTarget("shipments", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<Shipment> getShipments()
	{
		return (List<Shipment>) this.readProperty("shipments");
	}

	public void addToShipments1(final Shipment obj)
	{
		this.addToManyTarget("shipments1", obj, true);
	}

	public void removeFromShipments1(final Shipment obj)
	{
		this.removeToManyTarget("shipments1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<Shipment> getShipments1()
	{
		return (List<Shipment>) this.readProperty("shipments1");
	}

	public void addToSimpleFormulas(final SimpleFormula obj)
	{
		this.addToManyTarget("simpleFormulas", obj, true);
	}

	public void removeFromSimpleFormulas(final SimpleFormula obj)
	{
		this.removeToManyTarget("simpleFormulas", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<SimpleFormula> getSimpleFormulas()
	{
		return (List<SimpleFormula>) this.readProperty("simpleFormulas");
	}

	public void addToSpecTests(final SpecTest obj)
	{
		this.addToManyTarget("specTests", obj, true);
	}

	public void removeFromSpecTests(final SpecTest obj)
	{
		this.removeToManyTarget("specTests", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<SpecTest> getSpecTests()
	{
		return (List<SpecTest>) this.readProperty("specTests");
	}

	public void addToSpreadCompositions(final SpreadComposition obj)
	{
		this.addToManyTarget("spreadCompositions", obj, true);
	}

	public void removeFromSpreadCompositions(final SpreadComposition obj)
	{
		this.removeToManyTarget("spreadCompositions", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<SpreadComposition> getSpreadCompositions()
	{
		return (List<SpreadComposition>) this.readProperty("spreadCompositions");
	}

	public void addToSpreadCompositions1(final SpreadComposition obj)
	{
		this.addToManyTarget("spreadCompositions1", obj, true);
	}

	public void removeFromSpreadCompositions1(final SpreadComposition obj)
	{
		this.removeToManyTarget("spreadCompositions1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<SpreadComposition> getSpreadCompositions1()
	{
		return (List<SpreadComposition>) this.readProperty("spreadCompositions1");
	}

	public void addToStrategies(final Strategy obj)
	{
		this.addToManyTarget("strategies", obj, true);
	}

	public void removeFromStrategies(final Strategy obj)
	{
		this.removeToManyTarget("strategies", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<Strategy> getStrategies()
	{
		return (List<Strategy>) this.readProperty("strategies");
	}

	public void addToTaxAddtlCostss(final TaxAddtlCosts obj)
	{
		this.addToManyTarget("taxAddtlCostss", obj, true);
	}

	public void removeFromTaxAddtlCostss(final TaxAddtlCosts obj)
	{
		this.removeToManyTarget("taxAddtlCostss", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TaxAddtlCosts> getTaxAddtlCostss()
	{
		return (List<TaxAddtlCosts>) this.readProperty("taxAddtlCostss");
	}

	public void addToTaxes(final Tax obj)
	{
		this.addToManyTarget("taxes", obj, true);
	}

	public void removeFromTaxes(final Tax obj)
	{
		this.removeToManyTarget("taxes", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<Tax> getTaxes()
	{
		return (List<Tax>) this.readProperty("taxes");
	}

	public void addToTaxes1(final Tax obj)
	{
		this.addToManyTarget("taxes1", obj, true);
	}

	public void removeFromTaxes1(final Tax obj)
	{
		this.removeToManyTarget("taxes1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<Tax> getTaxes1()
	{
		return (List<Tax>) this.readProperty("taxes1");
	}

	public void addToTaxes2(final Tax obj)
	{
		this.addToManyTarget("taxes2", obj, true);
	}

	public void removeFromTaxes2(final Tax obj)
	{
		this.removeToManyTarget("taxes2", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<Tax> getTaxes2()
	{
		return (List<Tax>) this.readProperty("taxes2");
	}

	public void addToTempValueAdjusts(final TempValueAdjust obj)
	{
		this.addToManyTarget("tempValueAdjusts", obj, true);
	}

	public void removeFromTempValueAdjusts(final TempValueAdjust obj)
	{
		this.removeToManyTarget("tempValueAdjusts", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TempValueAdjust> getTempValueAdjusts()
	{
		return (List<TempValueAdjust>) this.readProperty("tempValueAdjusts");
	}

	public void addToTiMarkToMarkets(final TiMarkToMarket obj)
	{
		this.addToManyTarget("tiMarkToMarkets", obj, true);
	}

	public void removeFromTiMarkToMarkets(final TiMarkToMarket obj)
	{
		this.removeToManyTarget("tiMarkToMarkets", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TiMarkToMarket> getTiMarkToMarkets()
	{
		return (List<TiMarkToMarket>) this.readProperty("tiMarkToMarkets");
	}

	public void addToTidMarkToMarkets(final TidMarkToMarket obj)
	{
		this.addToManyTarget("tidMarkToMarkets", obj, true);
	}

	public void removeFromTidMarkToMarkets(final TidMarkToMarket obj)
	{
		this.removeToManyTarget("tidMarkToMarkets", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TidMarkToMarket> getTidMarkToMarkets()
	{
		return (List<TidMarkToMarket>) this.readProperty("tidMarkToMarkets");
	}

	public void addToTidMarkToMarkets1(final TidMarkToMarket obj)
	{
		this.addToManyTarget("tidMarkToMarkets1", obj, true);
	}

	public void removeFromTidMarkToMarkets1(final TidMarkToMarket obj)
	{
		this.removeToManyTarget("tidMarkToMarkets1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TidMarkToMarket> getTidMarkToMarkets1()
	{
		return (List<TidMarkToMarket>) this.readProperty("tidMarkToMarkets1");
	}

	public void addToTidMarkToMarkets2(final TidMarkToMarket obj)
	{
		this.addToManyTarget("tidMarkToMarkets2", obj, true);
	}

	public void removeFromTidMarkToMarkets2(final TidMarkToMarket obj)
	{
		this.removeToManyTarget("tidMarkToMarkets2", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TidMarkToMarket> getTidMarkToMarkets2()
	{
		return (List<TidMarkToMarket>) this.readProperty("tidMarkToMarkets2");
	}

	public void addToTidMtmVolatilities(final TidMtmVolatility obj)
	{
		this.addToManyTarget("tidMtmVolatilities", obj, true);
	}

	public void removeFromTidMtmVolatilities(final TidMtmVolatility obj)
	{
		this.removeToManyTarget("tidMtmVolatilities", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TidMtmVolatility> getTidMtmVolatilities()
	{
		return (List<TidMtmVolatility>) this.readProperty("tidMtmVolatilities");
	}

	public void addToTidPls(final TidPl obj)
	{
		this.addToManyTarget("tidPls", obj, true);
	}

	public void removeFromTidPls(final TidPl obj)
	{
		this.removeToManyTarget("tidPls", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TidPl> getTidPls()
	{
		return (List<TidPl>) this.readProperty("tidPls");
	}

	public void addToTradeItemBunkers(final TradeItemBunker obj)
	{
		this.addToManyTarget("tradeItemBunkers", obj, true);
	}

	public void removeFromTradeItemBunkers(final TradeItemBunker obj)
	{
		this.removeToManyTarget("tradeItemBunkers", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeItemBunker> getTradeItemBunkers()
	{
		return (List<TradeItemBunker>) this.readProperty("tradeItemBunkers");
	}

	public void addToTradeItemCleareds(final TradeItemCleared obj)
	{
		this.addToManyTarget("tradeItemCleareds", obj, true);
	}

	public void removeFromTradeItemCleareds(final TradeItemCleared obj)
	{
		this.removeToManyTarget("tradeItemCleareds", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeItemCleared> getTradeItemCleareds()
	{
		return (List<TradeItemCleared>) this.readProperty("tradeItemCleareds");
	}

	public void addToTradeItemCleareds1(final TradeItemCleared obj)
	{
		this.addToManyTarget("tradeItemCleareds1", obj, true);
	}

	public void removeFromTradeItemCleareds1(final TradeItemCleared obj)
	{
		this.removeToManyTarget("tradeItemCleareds1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeItemCleared> getTradeItemCleareds1()
	{
		return (List<TradeItemCleared>) this.readProperty("tradeItemCleareds1");
	}

	public void addToTradeItemCurrs(final TradeItemCurr obj)
	{
		this.addToManyTarget("tradeItemCurrs", obj, true);
	}

	public void removeFromTradeItemCurrs(final TradeItemCurr obj)
	{
		this.removeToManyTarget("tradeItemCurrs", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeItemCurr> getTradeItemCurrs()
	{
		return (List<TradeItemCurr>) this.readProperty("tradeItemCurrs");
	}

	public void addToTradeItemCurrs1(final TradeItemCurr obj)
	{
		this.addToManyTarget("tradeItemCurrs1", obj, true);
	}

	public void removeFromTradeItemCurrs1(final TradeItemCurr obj)
	{
		this.removeToManyTarget("tradeItemCurrs1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeItemCurr> getTradeItemCurrs1()
	{
		return (List<TradeItemCurr>) this.readProperty("tradeItemCurrs1");
	}

	public void addToTradeItemDists(final TradeItemDist obj)
	{
		this.addToManyTarget("tradeItemDists", obj, true);
	}

	public void removeFromTradeItemDists(final TradeItemDist obj)
	{
		this.removeToManyTarget("tradeItemDists", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeItemDist> getTradeItemDists()
	{
		return (List<TradeItemDist>) this.readProperty("tradeItemDists");
	}

	public void addToTradeItemExchOpts(final TradeItemExchOpt obj)
	{
		this.addToManyTarget("tradeItemExchOpts", obj, true);
	}

	public void removeFromTradeItemExchOpts(final TradeItemExchOpt obj)
	{
		this.removeToManyTarget("tradeItemExchOpts", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeItemExchOpt> getTradeItemExchOpts()
	{
		return (List<TradeItemExchOpt>) this.readProperty("tradeItemExchOpts");
	}

	public void addToTradeItemExchOpts1(final TradeItemExchOpt obj)
	{
		this.addToManyTarget("tradeItemExchOpts1", obj, true);
	}

	public void removeFromTradeItemExchOpts1(final TradeItemExchOpt obj)
	{
		this.removeToManyTarget("tradeItemExchOpts1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeItemExchOpt> getTradeItemExchOpts1()
	{
		return (List<TradeItemExchOpt>) this.readProperty("tradeItemExchOpts1");
	}

	public void addToTradeItemExchOpts2(final TradeItemExchOpt obj)
	{
		this.addToManyTarget("tradeItemExchOpts2", obj, true);
	}

	public void removeFromTradeItemExchOpts2(final TradeItemExchOpt obj)
	{
		this.removeToManyTarget("tradeItemExchOpts2", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeItemExchOpt> getTradeItemExchOpts2()
	{
		return (List<TradeItemExchOpt>) this.readProperty("tradeItemExchOpts2");
	}

	public void addToTradeItemFills(final TradeItemFill obj)
	{
		this.addToManyTarget("tradeItemFills", obj, true);
	}

	public void removeFromTradeItemFills(final TradeItemFill obj)
	{
		this.removeToManyTarget("tradeItemFills", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeItemFill> getTradeItemFills()
	{
		return (List<TradeItemFill>) this.readProperty("tradeItemFills");
	}

	public void addToTradeItemFuts(final TradeItemFut obj)
	{
		this.addToManyTarget("tradeItemFuts", obj, true);
	}

	public void removeFromTradeItemFuts(final TradeItemFut obj)
	{
		this.removeToManyTarget("tradeItemFuts", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeItemFut> getTradeItemFuts()
	{
		return (List<TradeItemFut>) this.readProperty("tradeItemFuts");
	}

	public void addToTradeItemFuts1(final TradeItemFut obj)
	{
		this.addToManyTarget("tradeItemFuts1", obj, true);
	}

	public void removeFromTradeItemFuts1(final TradeItemFut obj)
	{
		this.removeToManyTarget("tradeItemFuts1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeItemFut> getTradeItemFuts1()
	{
		return (List<TradeItemFut>) this.readProperty("tradeItemFuts1");
	}

	public void addToTradeItemOtcOpts(final TradeItemOtcOpt obj)
	{
		this.addToManyTarget("tradeItemOtcOpts", obj, true);
	}

	public void removeFromTradeItemOtcOpts(final TradeItemOtcOpt obj)
	{
		this.removeToManyTarget("tradeItemOtcOpts", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeItemOtcOpt> getTradeItemOtcOpts()
	{
		return (List<TradeItemOtcOpt>) this.readProperty("tradeItemOtcOpts");
	}

	public void addToTradeItemOtcOpts1(final TradeItemOtcOpt obj)
	{
		this.addToManyTarget("tradeItemOtcOpts1", obj, true);
	}

	public void removeFromTradeItemOtcOpts1(final TradeItemOtcOpt obj)
	{
		this.removeToManyTarget("tradeItemOtcOpts1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeItemOtcOpt> getTradeItemOtcOpts1()
	{
		return (List<TradeItemOtcOpt>) this.readProperty("tradeItemOtcOpts1");
	}

	public void addToTradeItemPls(final TradeItemPl obj)
	{
		this.addToManyTarget("tradeItemPls", obj, true);
	}

	public void removeFromTradeItemPls(final TradeItemPl obj)
	{
		this.removeToManyTarget("tradeItemPls", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeItemPl> getTradeItemPls()
	{
		return (List<TradeItemPl>) this.readProperty("tradeItemPls");
	}

	public void addToTradeItemRins(final TradeItemRin obj)
	{
		this.addToManyTarget("tradeItemRins", obj, true);
	}

	public void removeFromTradeItemRins(final TradeItemRin obj)
	{
		this.removeToManyTarget("tradeItemRins", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeItemRin> getTradeItemRins()
	{
		return (List<TradeItemRin>) this.readProperty("tradeItemRins");
	}

	public void addToTradeItemRins1(final TradeItemRin obj)
	{
		this.addToManyTarget("tradeItemRins1", obj, true);
	}

	public void removeFromTradeItemRins1(final TradeItemRin obj)
	{
		this.removeToManyTarget("tradeItemRins1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeItemRin> getTradeItemRins1()
	{
		return (List<TradeItemRin>) this.readProperty("tradeItemRins1");
	}

	public void addToTradeItemSpecs(final TradeItemSpec obj)
	{
		this.addToManyTarget("tradeItemSpecs", obj, true);
	}

	public void removeFromTradeItemSpecs(final TradeItemSpec obj)
	{
		this.removeToManyTarget("tradeItemSpecs", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeItemSpec> getTradeItemSpecs()
	{
		return (List<TradeItemSpec>) this.readProperty("tradeItemSpecs");
	}

	public void addToTradeItemStorages(final TradeItemStorage obj)
	{
		this.addToManyTarget("tradeItemStorages", obj, true);
	}

	public void removeFromTradeItemStorages(final TradeItemStorage obj)
	{
		this.removeToManyTarget("tradeItemStorages", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeItemStorage> getTradeItemStorages()
	{
		return (List<TradeItemStorage>) this.readProperty("tradeItemStorages");
	}

	public void addToTradeItemTransports(final TradeItemTransport obj)
	{
		this.addToManyTarget("tradeItemTransports", obj, true);
	}

	public void removeFromTradeItemTransports(final TradeItemTransport obj)
	{
		this.removeToManyTarget("tradeItemTransports", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeItemTransport> getTradeItemTransports()
	{
		return (List<TradeItemTransport>) this.readProperty("tradeItemTransports");
	}

	public void addToTradeItemTransports1(final TradeItemTransport obj)
	{
		this.addToManyTarget("tradeItemTransports1", obj, true);
	}

	public void removeFromTradeItemTransports1(final TradeItemTransport obj)
	{
		this.removeToManyTarget("tradeItemTransports1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeItemTransport> getTradeItemTransports1()
	{
		return (List<TradeItemTransport>) this.readProperty("tradeItemTransports1");
	}

	public void addToTradeItemTransports2(final TradeItemTransport obj)
	{
		this.addToManyTarget("tradeItemTransports2", obj, true);
	}

	public void removeFromTradeItemTransports2(final TradeItemTransport obj)
	{
		this.removeToManyTarget("tradeItemTransports2", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeItemTransport> getTradeItemTransports2()
	{
		return (List<TradeItemTransport>) this.readProperty("tradeItemTransports2");
	}

	public void addToTradeItemTransports3(final TradeItemTransport obj)
	{
		this.addToManyTarget("tradeItemTransports3", obj, true);
	}

	public void removeFromTradeItemTransports3(final TradeItemTransport obj)
	{
		this.removeToManyTarget("tradeItemTransports3", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeItemTransport> getTradeItemTransports3()
	{
		return (List<TradeItemTransport>) this.readProperty("tradeItemTransports3");
	}

	public void addToTradeItems(final TradeItem obj)
	{
		this.addToManyTarget("tradeItems", obj, true);
	}

	public void removeFromTradeItems(final TradeItem obj)
	{
		this.removeToManyTarget("tradeItems", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeItem> getTradeItems()
	{
		return (List<TradeItem>) this.readProperty("tradeItems");
	}

	public void addToTradeItems1(final TradeItem obj)
	{
		this.addToManyTarget("tradeItems1", obj, true);
	}

	public void removeFromTradeItems1(final TradeItem obj)
	{
		this.removeToManyTarget("tradeItems1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeItem> getTradeItems1()
	{
		return (List<TradeItem>) this.readProperty("tradeItems1");
	}

	public void addToTradeItems2(final TradeItem obj)
	{
		this.addToManyTarget("tradeItems2", obj, true);
	}

	public void removeFromTradeItems2(final TradeItem obj)
	{
		this.removeToManyTarget("tradeItems2", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeItem> getTradeItems2()
	{
		return (List<TradeItem>) this.readProperty("tradeItems2");
	}

	public void addToTradeItems3(final TradeItem obj)
	{
		this.addToManyTarget("tradeItems3", obj, true);
	}

	public void removeFromTradeItems3(final TradeItem obj)
	{
		this.removeToManyTarget("tradeItems3", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeItem> getTradeItems3()
	{
		return (List<TradeItem>) this.readProperty("tradeItems3");
	}

	public void addToTradeItems4(final TradeItem obj)
	{
		this.addToManyTarget("tradeItems4", obj, true);
	}

	public void removeFromTradeItems4(final TradeItem obj)
	{
		this.removeToManyTarget("tradeItems4", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeItem> getTradeItems4()
	{
		return (List<TradeItem>) this.readProperty("tradeItems4");
	}

	public void addToTradeOrderBals(final TradeOrderBal obj)
	{
		this.addToManyTarget("tradeOrderBals", obj, true);
	}

	public void removeFromTradeOrderBals(final TradeOrderBal obj)
	{
		this.removeToManyTarget("tradeOrderBals", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeOrderBal> getTradeOrderBals()
	{
		return (List<TradeOrderBal>) this.readProperty("tradeOrderBals");
	}

	public void addToTradeOrderBals1(final TradeOrderBal obj)
	{
		this.addToManyTarget("tradeOrderBals1", obj, true);
	}

	public void removeFromTradeOrderBals1(final TradeOrderBal obj)
	{
		this.removeToManyTarget("tradeOrderBals1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeOrderBal> getTradeOrderBals1()
	{
		return (List<TradeOrderBal>) this.readProperty("tradeOrderBals1");
	}

	public void addToTradeOrderBunkers(final TradeOrderBunker obj)
	{
		this.addToManyTarget("tradeOrderBunkers", obj, true);
	}

	public void removeFromTradeOrderBunkers(final TradeOrderBunker obj)
	{
		this.removeToManyTarget("tradeOrderBunkers", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeOrderBunker> getTradeOrderBunkers()
	{
		return (List<TradeOrderBunker>) this.readProperty("tradeOrderBunkers");
	}

	public void addToTradeOrderBunkers1(final TradeOrderBunker obj)
	{
		this.addToManyTarget("tradeOrderBunkers1", obj, true);
	}

	public void removeFromTradeOrderBunkers1(final TradeOrderBunker obj)
	{
		this.removeToManyTarget("tradeOrderBunkers1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeOrderBunker> getTradeOrderBunkers1()
	{
		return (List<TradeOrderBunker>) this.readProperty("tradeOrderBunkers1");
	}

	public void addToTradeOrderOnExches(final TradeOrderOnExch obj)
	{
		this.addToManyTarget("tradeOrderOnExches", obj, true);
	}

	public void removeFromTradeOrderOnExches(final TradeOrderOnExch obj)
	{
		this.removeToManyTarget("tradeOrderOnExches", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeOrderOnExch> getTradeOrderOnExches()
	{
		return (List<TradeOrderOnExch>) this.readProperty("tradeOrderOnExches");
	}

	public void addToTradeOrderPosEffects(final TradeOrderPosEffect obj)
	{
		this.addToManyTarget("tradeOrderPosEffects", obj, true);
	}

	public void removeFromTradeOrderPosEffects(final TradeOrderPosEffect obj)
	{
		this.removeToManyTarget("tradeOrderPosEffects", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeOrderPosEffect> getTradeOrderPosEffects()
	{
		return (List<TradeOrderPosEffect>) this.readProperty("tradeOrderPosEffects");
	}

	public void addToTradeOrderPosEffects1(final TradeOrderPosEffect obj)
	{
		this.addToManyTarget("tradeOrderPosEffects1", obj, true);
	}

	public void removeFromTradeOrderPosEffects1(final TradeOrderPosEffect obj)
	{
		this.removeToManyTarget("tradeOrderPosEffects1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeOrderPosEffect> getTradeOrderPosEffects1()
	{
		return (List<TradeOrderPosEffect>) this.readProperty("tradeOrderPosEffects1");
	}

	public void addToTradeOrders(final TradeOrder obj)
	{
		this.addToManyTarget("tradeOrders", obj, true);
	}

	public void removeFromTradeOrders(final TradeOrder obj)
	{
		this.removeToManyTarget("tradeOrders", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeOrder> getTradeOrders()
	{
		return (List<TradeOrder>) this.readProperty("tradeOrders");
	}

	public void addToTransportCostSchedules(final TransportCostSchedule obj)
	{
		this.addToManyTarget("transportCostSchedules", obj, true);
	}

	public void removeFromTransportCostSchedules(final TransportCostSchedule obj)
	{
		this.removeToManyTarget("transportCostSchedules", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TransportCostSchedule> getTransportCostSchedules()
	{
		return (List<TransportCostSchedule>) this.readProperty("transportCostSchedules");
	}

	public void addToTsOpsCargoes(final TsOpsCargo obj)
	{
		this.addToManyTarget("tsOpsCargoes", obj, true);
	}

	public void removeFromTsOpsCargoes(final TsOpsCargo obj)
	{
		this.removeToManyTarget("tsOpsCargoes", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TsOpsCargo> getTsOpsCargoes()
	{
		return (List<TsOpsCargo>) this.readProperty("tsOpsCargoes");
	}

	public void setUom(final Uom uom)
	{
		this.setToOneTarget("uom", uom, true);
	}

	public Uom getUom()
	{
		return (Uom) this.readProperty("uom");
	}

	public void setUom1(final Uom uom1)
	{
		this.setToOneTarget("uom1", uom1, true);
	}

	public Uom getUom1()
	{
		return (Uom) this.readProperty("uom1");
	}

	public void addToUomConversions(final UomConversion obj)
	{
		this.addToManyTarget("uomConversions", obj, true);
	}

	public void removeFromUomConversions(final UomConversion obj)
	{
		this.removeToManyTarget("uomConversions", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<UomConversion> getUomConversions()
	{
		return (List<UomConversion>) this.readProperty("uomConversions");
	}

	public void addToVesselDistMtms(final VesselDistMtm obj)
	{
		this.addToManyTarget("vesselDistMtms", obj, true);
	}

	public void removeFromVesselDistMtms(final VesselDistMtm obj)
	{
		this.removeToManyTarget("vesselDistMtms", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<VesselDistMtm> getVesselDistMtms()
	{
		return (List<VesselDistMtm>) this.readProperty("vesselDistMtms");
	}

	public void addToVesselDists(final VesselDist obj)
	{
		this.addToManyTarget("vesselDists", obj, true);
	}

	public void removeFromVesselDists(final VesselDist obj)
	{
		this.removeToManyTarget("vesselDists", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<VesselDist> getVesselDists()
	{
		return (List<VesselDist>) this.readProperty("vesselDists");
	}

	public void addToVoucherCosts(final VoucherCost obj)
	{
		this.addToManyTarget("voucherCosts", obj, true);
	}

	public void removeFromVoucherCosts(final VoucherCost obj)
	{
		this.removeToManyTarget("voucherCosts", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<VoucherCost> getVoucherCosts()
	{
		return (List<VoucherCost>) this.readProperty("voucherCosts");
	}

	public void addToVoucherPayments(final VoucherPayment obj)
	{
		this.addToManyTarget("voucherPayments", obj, true);
	}

	public void removeFromVoucherPayments(final VoucherPayment obj)
	{
		this.removeToManyTarget("voucherPayments", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<VoucherPayment> getVoucherPayments()
	{
		return (List<VoucherPayment>) this.readProperty("voucherPayments");
	}

	public void addToVoucherPayments1(final VoucherPayment obj)
	{
		this.addToManyTarget("voucherPayments1", obj, true);
	}

	public void removeFromVoucherPayments1(final VoucherPayment obj)
	{
		this.removeToManyTarget("voucherPayments1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<VoucherPayment> getVoucherPayments1()
	{
		return (List<VoucherPayment>) this.readProperty("voucherPayments1");
	}

	public void addToVoucherVats(final VoucherVat obj)
	{
		this.addToManyTarget("voucherVats", obj, true);
	}

	public void removeFromVoucherVats(final VoucherVat obj)
	{
		this.removeToManyTarget("voucherVats", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<VoucherVat> getVoucherVats()
	{
		return (List<VoucherVat>) this.readProperty("voucherVats");
	}

	public void addToVoucherVats1(final VoucherVat obj)
	{
		this.addToManyTarget("voucherVats1", obj, true);
	}

	public void removeFromVoucherVats1(final VoucherVat obj)
	{
		this.removeToManyTarget("voucherVats1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<VoucherVat> getVoucherVats1()
	{
		return (List<VoucherVat>) this.readProperty("voucherVats1");
	}

	public void addToVouchers(final Voucher obj)
	{
		this.addToManyTarget("vouchers", obj, true);
	}

	public void removeFromVouchers(final Voucher obj)
	{
		this.removeToManyTarget("vouchers", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<Voucher> getVouchers()
	{
		return (List<Voucher>) this.readProperty("vouchers");
	}

	public void addToVouchers1(final Voucher obj)
	{
		this.addToManyTarget("vouchers1", obj, true);
	}

	public void removeFromVouchers1(final Voucher obj)
	{
		this.removeToManyTarget("vouchers1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<Voucher> getVouchers1()
	{
		return (List<Voucher>) this.readProperty("vouchers1");
	}

	public void addToVouchers2(final Voucher obj)
	{
		this.addToManyTarget("vouchers2", obj, true);
	}

	public void removeFromVouchers2(final Voucher obj)
	{
		this.removeToManyTarget("vouchers2", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<Voucher> getVouchers2()
	{
		return (List<Voucher>) this.readProperty("vouchers2");
	}

	public void addToVouchers3(final Voucher obj)
	{
		this.addToManyTarget("vouchers3", obj, true);
	}

	public void removeFromVouchers3(final Voucher obj)
	{
		this.removeToManyTarget("vouchers3", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<Voucher> getVouchers3()
	{
		return (List<Voucher>) this.readProperty("vouchers3");
	}

	public void addToWbContractConsumptionss(final WbContractConsumptions obj)
	{
		this.addToManyTarget("wbContractConsumptionss", obj, true);
	}

	public void removeFromWbContractConsumptionss(final WbContractConsumptions obj)
	{
		this.removeToManyTarget("wbContractConsumptionss", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<WbContractConsumptions> getWbContractConsumptionss()
	{
		return (List<WbContractConsumptions>) this.readProperty("wbContractConsumptionss");
	}

	public void addToWbContractRobs(final WbContractRob obj)
	{
		this.addToManyTarget("wbContractRobs", obj, true);
	}

	public void removeFromWbContractRobs(final WbContractRob obj)
	{
		this.removeToManyTarget("wbContractRobs", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<WbContractRob> getWbContractRobs()
	{
		return (List<WbContractRob>) this.readProperty("wbContractRobs");
	}

	public void addToWbContractRobs1(final WbContractRob obj)
	{
		this.addToManyTarget("wbContractRobs1", obj, true);
	}

	public void removeFromWbContractRobs1(final WbContractRob obj)
	{
		this.removeToManyTarget("wbContractRobs1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<WbContractRob> getWbContractRobs1()
	{
		return (List<WbContractRob>) this.readProperty("wbContractRobs1");
	}

	public void addToWbContractTcConfigs(final WbContractTcConfig obj)
	{
		this.addToManyTarget("wbContractTcConfigs", obj, true);
	}

	public void removeFromWbContractTcConfigs(final WbContractTcConfig obj)
	{
		this.removeToManyTarget("wbContractTcConfigs", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<WbContractTcConfig> getWbContractTcConfigs()
	{
		return (List<WbContractTcConfig>) this.readProperty("wbContractTcConfigs");
	}

	public void addToWbContractTcCostss(final WbContractTcCosts obj)
	{
		this.addToManyTarget("wbContractTcCostss", obj, true);
	}

	public void removeFromWbContractTcCostss(final WbContractTcCosts obj)
	{
		this.removeToManyTarget("wbContractTcCostss", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<WbContractTcCosts> getWbContractTcCostss()
	{
		return (List<WbContractTcCosts>) this.readProperty("wbContractTcCostss");
	}

	public void addToWbOpsBunkers(final WbOpsBunker obj)
	{
		this.addToManyTarget("wbOpsBunkers", obj, true);
	}

	public void removeFromWbOpsBunkers(final WbOpsBunker obj)
	{
		this.removeToManyTarget("wbOpsBunkers", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<WbOpsBunker> getWbOpsBunkers()
	{
		return (List<WbOpsBunker>) this.readProperty("wbOpsBunkers");
	}

	public void addToWbOpsBunkers1(final WbOpsBunker obj)
	{
		this.addToManyTarget("wbOpsBunkers1", obj, true);
	}

	public void removeFromWbOpsBunkers1(final WbOpsBunker obj)
	{
		this.removeToManyTarget("wbOpsBunkers1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<WbOpsBunker> getWbOpsBunkers1()
	{
		return (List<WbOpsBunker>) this.readProperty("wbOpsBunkers1");
	}

	public void addToWbOpsPortRobs(final WbOpsPortRob obj)
	{
		this.addToManyTarget("wbOpsPortRobs", obj, true);
	}

	public void removeFromWbOpsPortRobs(final WbOpsPortRob obj)
	{
		this.removeToManyTarget("wbOpsPortRobs", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<WbOpsPortRob> getWbOpsPortRobs()
	{
		return (List<WbOpsPortRob>) this.readProperty("wbOpsPortRobs");
	}

	public void addToWbOpsRobs(final WbOpsRob obj)
	{
		this.addToManyTarget("wbOpsRobs", obj, true);
	}

	public void removeFromWbOpsRobs(final WbOpsRob obj)
	{
		this.removeToManyTarget("wbOpsRobs", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<WbOpsRob> getWbOpsRobs()
	{
		return (List<WbOpsRob>) this.readProperty("wbOpsRobs");
	}

	public void addToWbOpsRobs1(final WbOpsRob obj)
	{
		this.addToManyTarget("wbOpsRobs1", obj, true);
	}

	public void removeFromWbOpsRobs1(final WbOpsRob obj)
	{
		this.removeToManyTarget("wbOpsRobs1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<WbOpsRob> getWbOpsRobs1()
	{
		return (List<WbOpsRob>) this.readProperty("wbOpsRobs1");
	}

	public void addToWbPreBunkers(final WbPreBunker obj)
	{
		this.addToManyTarget("wbPreBunkers", obj, true);
	}

	public void removeFromWbPreBunkers(final WbPreBunker obj)
	{
		this.removeToManyTarget("wbPreBunkers", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<WbPreBunker> getWbPreBunkers()
	{
		return (List<WbPreBunker>) this.readProperty("wbPreBunkers");
	}

	public void addToWbPreBunkers1(final WbPreBunker obj)
	{
		this.addToManyTarget("wbPreBunkers1", obj, true);
	}

	public void removeFromWbPreBunkers1(final WbPreBunker obj)
	{
		this.removeToManyTarget("wbPreBunkers1", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<WbPreBunker> getWbPreBunkers1()
	{
		return (List<WbPreBunker>) this.readProperty("wbPreBunkers1");
	}

	public void addToWbPreCargoes(final WbPreCargo obj)
	{
		this.addToManyTarget("wbPreCargoes", obj, true);
	}

	public void removeFromWbPreCargoes(final WbPreCargo obj)
	{
		this.removeToManyTarget("wbPreCargoes", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<WbPreCargo> getWbPreCargoes()
	{
		return (List<WbPreCargo>) this.readProperty("wbPreCargoes");
	}

	public void addToWbPrgCargoCrds(final WbPrgCargoCrd obj)
	{
		this.addToManyTarget("wbPrgCargoCrds", obj, true);
	}

	public void removeFromWbPrgCargoCrds(final WbPrgCargoCrd obj)
	{
		this.removeToManyTarget("wbPrgCargoCrds", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<WbPrgCargoCrd> getWbPrgCargoCrds()
	{
		return (List<WbPrgCargoCrd>) this.readProperty("wbPrgCargoCrds");
	}

	public void addToWbPrgCargoes(final WbPrgCargo obj)
	{
		this.addToManyTarget("wbPrgCargoes", obj, true);
	}

	public void removeFromWbPrgCargoes(final WbPrgCargo obj)
	{
		this.removeToManyTarget("wbPrgCargoes", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<WbPrgCargo> getWbPrgCargoes()
	{
		return (List<WbPrgCargo>) this.readProperty("wbPrgCargoes");
	}

	public void addToWbProfitSharings(final WbProfitSharing obj)
	{
		this.addToManyTarget("wbProfitSharings", obj, true);
	}

	public void removeFromWbProfitSharings(final WbProfitSharing obj)
	{
		this.removeToManyTarget("wbProfitSharings", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<WbProfitSharing> getWbProfitSharings()
	{
		return (List<WbProfitSharing>) this.readProperty("wbProfitSharings");
	}

	public void addToWbTbnPrices(final WbTbnPrice obj)
	{
		this.addToManyTarget("wbTbnPrices", obj, true);
	}

	public void removeFromWbTbnPrices(final WbTbnPrice obj)
	{
		this.removeToManyTarget("wbTbnPrices", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<WbTbnPrice> getWbTbnPrices()
	{
		return (List<WbTbnPrice>) this.readProperty("wbTbnPrices");
	}

	public void addToWbTemplatesOpss(final WbTemplatesOps obj)
	{
		this.addToManyTarget("wbTemplatesOpss", obj, true);
	}

	public void removeFromWbTemplatesOpss(final WbTemplatesOps obj)
	{
		this.removeToManyTarget("wbTemplatesOpss", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<WbTemplatesOps> getWbTemplatesOpss()
	{
		return (List<WbTemplatesOps>) this.readProperty("wbTemplatesOpss");
	}

}
