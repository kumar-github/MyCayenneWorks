package com.tc.app.exchangemonitor.model.cayenne.persistent.auto;

import java.math.BigDecimal;
import java.util.Date;

import org.apache.cayenne.CayenneDataObject;
import org.apache.cayenne.exp.Property;

/**
 * Class _AudDemurrageVoyage was generated by Cayenne.
 * It is probably a good idea to avoid changing this class manually,
 * since it may be overwritten next time code is regenerated.
 * If you need to make any customizations, please use subclass.
 */
public abstract class _AudDemurrageVoyage extends CayenneDataObject
{

	private static final long serialVersionUID = 1L;

	public static final Property<Integer> ALLOC_ITEM = new Property<Integer>("allocItem");
	public static final Property<Integer> ALLOC_NUM = new Property<Integer>("allocNum");
	public static final Property<Integer> BOOK_COMPANY = new Property<Integer>("bookCompany");
	public static final Property<Integer> COUNTERPARTY = new Property<Integer>("counterparty");
	public static final Property<Date> CREATION_DATE = new Property<Date>("creationDate");
	public static final Property<String> CREATION_USER = new Property<String>("creationUser");
	public static final Property<Date> DATE_OP = new Property<Date>("dateOp");
	public static final Property<String> DEMURRAGE_CURRENCY = new Property<String>("demurrageCurrency");
	public static final Property<BigDecimal> DEMURRAGE_HOURS = new Property<BigDecimal>("demurrageHours");
	public static final Property<Integer> DEMURRAGE_KEY = new Property<Integer>("demurrageKey");
	public static final Property<BigDecimal> DEMURRAGE_RATE = new Property<BigDecimal>("demurrageRate");
	public static final Property<String> DEMURRAGE_SIGN = new Property<String>("demurrageSign");
	public static final Property<Integer> DEMURRAGE_TIME_UNIT = new Property<Integer>("demurrageTimeUnit");
	public static final Property<Integer> ESTIMATED_COST = new Property<Integer>("estimatedCost");
	public static final Property<Integer> EXPECTED_COST = new Property<Integer>("expectedCost");
	public static final Property<Date> EXPECTED_COST_DATE = new Property<Date>("expectedCostDate");
	public static final Property<Integer> FINAL_COST = new Property<Integer>("finalCost");
	public static final Property<Date> FINAL_COST_DATE = new Property<Date>("finalCostDate");
	public static final Property<Integer> FINAL_FINAL_HOURS = new Property<Integer>("finalFinalHours");
	public static final Property<BigDecimal> FINAL_HOURS = new Property<BigDecimal>("finalHours");
	public static final Property<Integer> IS_CLOSED = new Property<Integer>("isClosed");
	public static final Property<Integer> IS_SPLITTED = new Property<Integer>("isSplitted");
	public static final Property<BigDecimal> MAX_ALLOWED_TIME = new Property<BigDecimal>("maxAllowedTime");
	public static final Property<BigDecimal> MAX_ALLOWED_TIME_DISCHARGING = new Property<BigDecimal>("maxAllowedTimeDischarging");
	public static final Property<BigDecimal> MAX_ALLOWED_TIME_LOADING = new Property<BigDecimal>("maxAllowedTimeLoading");
	public static final Property<Integer> OFFERED_COST = new Property<Integer>("offeredCost");
	public static final Property<Date> OFFERED_COST_DATE = new Property<Date>("offeredCostDate");
	public static final Property<String> OPERATION = new Property<String>("operation");
	public static final Property<Integer> PORTFOLIO_NUM = new Property<Integer>("portfolioNum");
	public static final Property<Integer> REQUESTED_COST = new Property<Integer>("requestedCost");
	public static final Property<Date> REQUESTED_COST_DATE = new Property<Date>("requestedCostDate");
	public static final Property<Integer> REQUESTED_HOURS = new Property<Integer>("requestedHours");
	public static final Property<String> SPOT_KEY = new Property<String>("spotKey");
	public static final Property<BigDecimal> TOTAL_DEDUCTION_HOURS = new Property<BigDecimal>("totalDeductionHours");
	public static final Property<Integer> TYPEID = new Property<Integer>("typeid");
	public static final Property<String> USERID = new Property<String>("userid");
	public static final Property<String> VOYAGE_KEY = new Property<String>("voyageKey");

	public void setAllocItem(Integer allocItem)
	{
		writeProperty("allocItem", allocItem);
	}

	public Integer getAllocItem()
	{
		return (Integer) readProperty("allocItem");
	}

	public void setAllocNum(Integer allocNum)
	{
		writeProperty("allocNum", allocNum);
	}

	public Integer getAllocNum()
	{
		return (Integer) readProperty("allocNum");
	}

	public void setBookCompany(Integer bookCompany)
	{
		writeProperty("bookCompany", bookCompany);
	}

	public Integer getBookCompany()
	{
		return (Integer) readProperty("bookCompany");
	}

	public void setCounterparty(Integer counterparty)
	{
		writeProperty("counterparty", counterparty);
	}

	public Integer getCounterparty()
	{
		return (Integer) readProperty("counterparty");
	}

	public void setCreationDate(Date creationDate)
	{
		writeProperty("creationDate", creationDate);
	}

	public Date getCreationDate()
	{
		return (Date) readProperty("creationDate");
	}

	public void setCreationUser(String creationUser)
	{
		writeProperty("creationUser", creationUser);
	}

	public String getCreationUser()
	{
		return (String) readProperty("creationUser");
	}

	public void setDateOp(Date dateOp)
	{
		writeProperty("dateOp", dateOp);
	}

	public Date getDateOp()
	{
		return (Date) readProperty("dateOp");
	}

	public void setDemurrageCurrency(String demurrageCurrency)
	{
		writeProperty("demurrageCurrency", demurrageCurrency);
	}

	public String getDemurrageCurrency()
	{
		return (String) readProperty("demurrageCurrency");
	}

	public void setDemurrageHours(BigDecimal demurrageHours)
	{
		writeProperty("demurrageHours", demurrageHours);
	}

	public BigDecimal getDemurrageHours()
	{
		return (BigDecimal) readProperty("demurrageHours");
	}

	public void setDemurrageKey(Integer demurrageKey)
	{
		writeProperty("demurrageKey", demurrageKey);
	}

	public Integer getDemurrageKey()
	{
		return (Integer) readProperty("demurrageKey");
	}

	public void setDemurrageRate(BigDecimal demurrageRate)
	{
		writeProperty("demurrageRate", demurrageRate);
	}

	public BigDecimal getDemurrageRate()
	{
		return (BigDecimal) readProperty("demurrageRate");
	}

	public void setDemurrageSign(String demurrageSign)
	{
		writeProperty("demurrageSign", demurrageSign);
	}

	public String getDemurrageSign()
	{
		return (String) readProperty("demurrageSign");
	}

	public void setDemurrageTimeUnit(Integer demurrageTimeUnit)
	{
		writeProperty("demurrageTimeUnit", demurrageTimeUnit);
	}

	public Integer getDemurrageTimeUnit()
	{
		return (Integer) readProperty("demurrageTimeUnit");
	}

	public void setEstimatedCost(Integer estimatedCost)
	{
		writeProperty("estimatedCost", estimatedCost);
	}

	public Integer getEstimatedCost()
	{
		return (Integer) readProperty("estimatedCost");
	}

	public void setExpectedCost(Integer expectedCost)
	{
		writeProperty("expectedCost", expectedCost);
	}

	public Integer getExpectedCost()
	{
		return (Integer) readProperty("expectedCost");
	}

	public void setExpectedCostDate(Date expectedCostDate)
	{
		writeProperty("expectedCostDate", expectedCostDate);
	}

	public Date getExpectedCostDate()
	{
		return (Date) readProperty("expectedCostDate");
	}

	public void setFinalCost(Integer finalCost)
	{
		writeProperty("finalCost", finalCost);
	}

	public Integer getFinalCost()
	{
		return (Integer) readProperty("finalCost");
	}

	public void setFinalCostDate(Date finalCostDate)
	{
		writeProperty("finalCostDate", finalCostDate);
	}

	public Date getFinalCostDate()
	{
		return (Date) readProperty("finalCostDate");
	}

	public void setFinalFinalHours(Integer finalFinalHours)
	{
		writeProperty("finalFinalHours", finalFinalHours);
	}

	public Integer getFinalFinalHours()
	{
		return (Integer) readProperty("finalFinalHours");
	}

	public void setFinalHours(BigDecimal finalHours)
	{
		writeProperty("finalHours", finalHours);
	}

	public BigDecimal getFinalHours()
	{
		return (BigDecimal) readProperty("finalHours");
	}

	public void setIsClosed(Integer isClosed)
	{
		writeProperty("isClosed", isClosed);
	}

	public Integer getIsClosed()
	{
		return (Integer) readProperty("isClosed");
	}

	public void setIsSplitted(Integer isSplitted)
	{
		writeProperty("isSplitted", isSplitted);
	}

	public Integer getIsSplitted()
	{
		return (Integer) readProperty("isSplitted");
	}

	public void setMaxAllowedTime(BigDecimal maxAllowedTime)
	{
		writeProperty("maxAllowedTime", maxAllowedTime);
	}

	public BigDecimal getMaxAllowedTime()
	{
		return (BigDecimal) readProperty("maxAllowedTime");
	}

	public void setMaxAllowedTimeDischarging(BigDecimal maxAllowedTimeDischarging)
	{
		writeProperty("maxAllowedTimeDischarging", maxAllowedTimeDischarging);
	}

	public BigDecimal getMaxAllowedTimeDischarging()
	{
		return (BigDecimal) readProperty("maxAllowedTimeDischarging");
	}

	public void setMaxAllowedTimeLoading(BigDecimal maxAllowedTimeLoading)
	{
		writeProperty("maxAllowedTimeLoading", maxAllowedTimeLoading);
	}

	public BigDecimal getMaxAllowedTimeLoading()
	{
		return (BigDecimal) readProperty("maxAllowedTimeLoading");
	}

	public void setOfferedCost(Integer offeredCost)
	{
		writeProperty("offeredCost", offeredCost);
	}

	public Integer getOfferedCost()
	{
		return (Integer) readProperty("offeredCost");
	}

	public void setOfferedCostDate(Date offeredCostDate)
	{
		writeProperty("offeredCostDate", offeredCostDate);
	}

	public Date getOfferedCostDate()
	{
		return (Date) readProperty("offeredCostDate");
	}

	public void setOperation(String operation)
	{
		writeProperty("operation", operation);
	}

	public String getOperation()
	{
		return (String) readProperty("operation");
	}

	public void setPortfolioNum(Integer portfolioNum)
	{
		writeProperty("portfolioNum", portfolioNum);
	}

	public Integer getPortfolioNum()
	{
		return (Integer) readProperty("portfolioNum");
	}

	public void setRequestedCost(Integer requestedCost)
	{
		writeProperty("requestedCost", requestedCost);
	}

	public Integer getRequestedCost()
	{
		return (Integer) readProperty("requestedCost");
	}

	public void setRequestedCostDate(Date requestedCostDate)
	{
		writeProperty("requestedCostDate", requestedCostDate);
	}

	public Date getRequestedCostDate()
	{
		return (Date) readProperty("requestedCostDate");
	}

	public void setRequestedHours(Integer requestedHours)
	{
		writeProperty("requestedHours", requestedHours);
	}

	public Integer getRequestedHours()
	{
		return (Integer) readProperty("requestedHours");
	}

	public void setSpotKey(String spotKey)
	{
		writeProperty("spotKey", spotKey);
	}

	public String getSpotKey()
	{
		return (String) readProperty("spotKey");
	}

	public void setTotalDeductionHours(BigDecimal totalDeductionHours)
	{
		writeProperty("totalDeductionHours", totalDeductionHours);
	}

	public BigDecimal getTotalDeductionHours()
	{
		return (BigDecimal) readProperty("totalDeductionHours");
	}

	public void setTypeid(Integer typeid)
	{
		writeProperty("typeid", typeid);
	}

	public Integer getTypeid()
	{
		return (Integer) readProperty("typeid");
	}

	public void setUserid(String userid)
	{
		writeProperty("userid", userid);
	}

	public String getUserid()
	{
		return (String) readProperty("userid");
	}

	public void setVoyageKey(String voyageKey)
	{
		writeProperty("voyageKey", voyageKey);
	}

	public String getVoyageKey()
	{
		return (String) readProperty("voyageKey");
	}

}
