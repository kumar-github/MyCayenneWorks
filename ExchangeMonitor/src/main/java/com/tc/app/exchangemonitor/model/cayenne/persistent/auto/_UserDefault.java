package com.tc.app.exchangemonitor.model.cayenne.persistent.auto;

import org.apache.cayenne.CayenneDataObject;
import org.apache.cayenne.exp.Property;

import com.tc.app.exchangemonitor.model.cayenne.persistent.DefaultsDomain;
import com.tc.app.exchangemonitor.model.cayenne.persistent.IctsUser;

/**
 * Class _UserDefault was generated by Cayenne.
 * It is probably a good idea to avoid changing this class manually,
 * since it may be overwritten next time code is regenerated.
 * If you need to make any customizations, please use subclass.
 */
public abstract class _UserDefault extends CayenneDataObject
{

	private static final long serialVersionUID = 1L;

	public static final String OID_PK_COLUMN = "oid";

	public static final Property<String> DEFAULTS_KEY = new Property<String>("defaultsKey");
	public static final Property<String> DEFAULTS_VALUE = new Property<String>("defaultsValue");
	public static final Property<Boolean> MAY_NOT_OVERRIDE = new Property<Boolean>("mayNotOverride");
	public static final Property<Integer> TRANS_ID = new Property<Integer>("transId");
	public static final Property<DefaultsDomain> DOMAIN = new Property<DefaultsDomain>("domain");
	public static final Property<IctsUser> ICTS_USER = new Property<IctsUser>("ictsUser");

	public void setDefaultsKey(String defaultsKey)
	{
		writeProperty("defaultsKey", defaultsKey);
	}

	public String getDefaultsKey()
	{
		return (String) readProperty("defaultsKey");
	}

	public void setDefaultsValue(String defaultsValue)
	{
		writeProperty("defaultsValue", defaultsValue);
	}

	public String getDefaultsValue()
	{
		return (String) readProperty("defaultsValue");
	}

	public void setMayNotOverride(Boolean mayNotOverride)
	{
		writeProperty("mayNotOverride", mayNotOverride);
	}

	public Boolean getMayNotOverride()
	{
		return (Boolean) readProperty("mayNotOverride");
	}

	public void setTransId(Integer transId)
	{
		writeProperty("transId", transId);
	}

	public Integer getTransId()
	{
		return (Integer) readProperty("transId");
	}

	public void setDomain(DefaultsDomain domain)
	{
		setToOneTarget("domain", domain, true);
	}

	public DefaultsDomain getDomain()
	{
		return (DefaultsDomain) readProperty("domain");
	}

	public void setIctsUser(IctsUser ictsUser)
	{
		setToOneTarget("ictsUser", ictsUser, true);
	}

	public IctsUser getIctsUser()
	{
		return (IctsUser) readProperty("ictsUser");
	}

}
