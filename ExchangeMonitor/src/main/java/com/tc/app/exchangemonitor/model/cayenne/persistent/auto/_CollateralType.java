package com.tc.app.exchangemonitor.model.cayenne.persistent.auto;

import java.util.List;

import org.apache.cayenne.CayenneDataObject;
import org.apache.cayenne.exp.Property;

import com.tc.app.exchangemonitor.model.cayenne.persistent.AccountCollateral;
import com.tc.app.exchangemonitor.model.cayenne.persistent.Lc;

/**
 * Class _CollateralType was generated by Cayenne.
 * It is probably a good idea to avoid changing this class manually,
 * since it may be overwritten next time code is regenerated.
 * If you need to make any customizations, please use subclass.
 */
public abstract class _CollateralType extends CayenneDataObject
{

	private static final long serialVersionUID = 1L;

	public static final String COLLATERAL_TYPE_CODE_PK_COLUMN = "collateral_type_code";

	public static final Property<String> COLLATERAL_TYPE_DESC = new Property<>("collateralTypeDesc");
	public static final Property<Integer> TRANS_ID = new Property<>("transId");
	public static final Property<List<AccountCollateral>> ACCOUNT_COLLATERALS = new Property<>("accountCollaterals");
	public static final Property<List<Lc>> LCS = new Property<>("lcs");

	public void setCollateralTypeDesc(final String collateralTypeDesc)
	{
		this.writeProperty("collateralTypeDesc", collateralTypeDesc);
	}

	public String getCollateralTypeDesc()
	{
		return (String) this.readProperty("collateralTypeDesc");
	}

	public void setTransId(final Integer transId)
	{
		this.writeProperty("transId", transId);
	}

	public Integer getTransId()
	{
		return (Integer) this.readProperty("transId");
	}

	public void addToAccountCollaterals(final AccountCollateral obj)
	{
		this.addToManyTarget("accountCollaterals", obj, true);
	}

	public void removeFromAccountCollaterals(final AccountCollateral obj)
	{
		this.removeToManyTarget("accountCollaterals", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<AccountCollateral> getAccountCollaterals()
	{
		return (List<AccountCollateral>) this.readProperty("accountCollaterals");
	}

	public void addToLcs(final Lc obj)
	{
		this.addToManyTarget("lcs", obj, true);
	}

	public void removeFromLcs(final Lc obj)
	{
		this.removeToManyTarget("lcs", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<Lc> getLcs()
	{
		return (List<Lc>) this.readProperty("lcs");
	}

}
