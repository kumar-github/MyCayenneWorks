package com.tc.app.exchangemonitor.model.cayenne.persistent.auto;

import java.util.Date;

import org.apache.cayenne.CayenneDataObject;
import org.apache.cayenne.exp.Property;

import com.tc.app.exchangemonitor.model.cayenne.persistent.Commodity;

/**
 * Class _TidPl was generated by Cayenne.
 * It is probably a good idea to avoid changing this class manually,
 * since it may be overwritten next time code is regenerated.
 * If you need to make any customizations, please use subclass.
 */
public abstract class _TidPl extends CayenneDataObject
{

	private static final long serialVersionUID = 1L;

	public static final String DIST_NUM_PK_COLUMN = "dist_num";

	public static final Property<Double> ADDL_COST_SUM = new Property<Double>("addlCostSum");
	public static final Property<Double> CLOSED_PL = new Property<Double>("closedPl");
	public static final Property<Double> OPEN_PL = new Property<Double>("openPl");
	public static final Property<Date> PL_ASOF_DATE = new Property<Date>("plAsofDate");
	public static final Property<Integer> TRANS_ID = new Property<Integer>("transId");
	public static final Property<Commodity> COMMODITY = new Property<Commodity>("commodity");

	public void setAddlCostSum(Double addlCostSum)
	{
		writeProperty("addlCostSum", addlCostSum);
	}

	public Double getAddlCostSum()
	{
		return (Double) readProperty("addlCostSum");
	}

	public void setClosedPl(Double closedPl)
	{
		writeProperty("closedPl", closedPl);
	}

	public Double getClosedPl()
	{
		return (Double) readProperty("closedPl");
	}

	public void setOpenPl(Double openPl)
	{
		writeProperty("openPl", openPl);
	}

	public Double getOpenPl()
	{
		return (Double) readProperty("openPl");
	}

	public void setPlAsofDate(Date plAsofDate)
	{
		writeProperty("plAsofDate", plAsofDate);
	}

	public Date getPlAsofDate()
	{
		return (Date) readProperty("plAsofDate");
	}

	public void setTransId(Integer transId)
	{
		writeProperty("transId", transId);
	}

	public Integer getTransId()
	{
		return (Integer) readProperty("transId");
	}

	public void setCommodity(Commodity commodity)
	{
		setToOneTarget("commodity", commodity, true);
	}

	public Commodity getCommodity()
	{
		return (Commodity) readProperty("commodity");
	}

}
