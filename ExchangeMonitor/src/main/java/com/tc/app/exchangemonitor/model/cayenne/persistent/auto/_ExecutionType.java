package com.tc.app.exchangemonitor.model.cayenne.persistent.auto;

import java.util.List;

import org.apache.cayenne.CayenneDataObject;
import org.apache.cayenne.exp.Property;

import com.tc.app.exchangemonitor.model.cayenne.persistent.BrokerCostAutogen;
import com.tc.app.exchangemonitor.model.cayenne.persistent.TradeItemExchOpt;
import com.tc.app.exchangemonitor.model.cayenne.persistent.TradeItemFut;

/**
 * Class _ExecutionType was generated by Cayenne.
 * It is probably a good idea to avoid changing this class manually,
 * since it may be overwritten next time code is regenerated.
 * If you need to make any customizations, please use subclass.
 */
public abstract class _ExecutionType extends CayenneDataObject
{

	private static final long serialVersionUID = 1L;

	public static final String EXEC_TYPE_CODE_PK_COLUMN = "exec_type_code";

	public static final Property<String> EXEC_TYPE_DESC = new Property<String>("execTypeDesc");
	public static final Property<Short> FIFO_PRIORITY = new Property<Short>("fifoPriority");
	public static final Property<Integer> TRANS_ID = new Property<Integer>("transId");
	public static final Property<List<BrokerCostAutogen>> BROKER_COST_AUTOGENS = new Property<List<BrokerCostAutogen>>("brokerCostAutogens");
	public static final Property<List<TradeItemExchOpt>> TRADE_ITEM_EXCH_OPTS = new Property<List<TradeItemExchOpt>>("tradeItemExchOpts");
	public static final Property<List<TradeItemFut>> TRADE_ITEM_FUTS = new Property<List<TradeItemFut>>("tradeItemFuts");

	public void setExecTypeDesc(String execTypeDesc)
	{
		writeProperty("execTypeDesc", execTypeDesc);
	}

	public String getExecTypeDesc()
	{
		return (String) readProperty("execTypeDesc");
	}

	public void setFifoPriority(Short fifoPriority)
	{
		writeProperty("fifoPriority", fifoPriority);
	}

	public Short getFifoPriority()
	{
		return (Short) readProperty("fifoPriority");
	}

	public void setTransId(Integer transId)
	{
		writeProperty("transId", transId);
	}

	public Integer getTransId()
	{
		return (Integer) readProperty("transId");
	}

	public void addToBrokerCostAutogens(BrokerCostAutogen obj)
	{
		addToManyTarget("brokerCostAutogens", obj, true);
	}

	public void removeFromBrokerCostAutogens(BrokerCostAutogen obj)
	{
		removeToManyTarget("brokerCostAutogens", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<BrokerCostAutogen> getBrokerCostAutogens()
	{
		return (List<BrokerCostAutogen>) readProperty("brokerCostAutogens");
	}

	public void addToTradeItemExchOpts(TradeItemExchOpt obj)
	{
		addToManyTarget("tradeItemExchOpts", obj, true);
	}

	public void removeFromTradeItemExchOpts(TradeItemExchOpt obj)
	{
		removeToManyTarget("tradeItemExchOpts", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeItemExchOpt> getTradeItemExchOpts()
	{
		return (List<TradeItemExchOpt>) readProperty("tradeItemExchOpts");
	}

	public void addToTradeItemFuts(TradeItemFut obj)
	{
		addToManyTarget("tradeItemFuts", obj, true);
	}

	public void removeFromTradeItemFuts(TradeItemFut obj)
	{
		removeToManyTarget("tradeItemFuts", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<TradeItemFut> getTradeItemFuts()
	{
		return (List<TradeItemFut>) readProperty("tradeItemFuts");
	}

}
