package com.tc.app.exchangemonitor.model.cayenne.persistent.auto;

import java.util.Date;

import org.apache.cayenne.CayenneDataObject;
import org.apache.cayenne.exp.Property;

import com.tc.app.exchangemonitor.model.cayenne.persistent.Commodity;
import com.tc.app.exchangemonitor.model.cayenne.persistent.Uom;

/**
 * Class _InventoryBalance was generated by Cayenne.
 * It is probably a good idea to avoid changing this class manually,
 * since it may be overwritten next time code is regenerated.
 * If you need to make any customizations, please use subclass.
 */
public abstract class _InventoryBalance extends CayenneDataObject
{

	private static final long serialVersionUID = 1L;

	public static final String INV_BAL_NUM_PK_COLUMN = "inv_bal_num";
	public static final String INV_NUM_PK_COLUMN = "inv_num";

	public static final Property<Double> INV_ADJ_QTY = new Property<Double>("invAdjQty");
	public static final Property<Double> INV_AVG_COST = new Property<Double>("invAvgCost");
	public static final Property<Date> INV_BAL_FROM_DATE = new Property<Date>("invBalFromDate");
	public static final Property<Date> INV_BAL_TO_DATE = new Property<Date>("invBalToDate");
	public static final Property<Double> INV_CLOSE_PRD_ACTUAL_QTY = new Property<Double>("invClosePrdActualQty");
	public static final Property<Double> INV_CLOSE_PRD_PROJ_QTY = new Property<Double>("invClosePrdProjQty");
	public static final Property<Double> INV_OPEN_PRD_ACTUAL_QTY = new Property<Double>("invOpenPrdActualQty");
	public static final Property<Double> INV_OPEN_PRD_PROJ_QTY = new Property<Double>("invOpenPrdProjQty");
	public static final Property<Integer> TRANS_ID = new Property<Integer>("transId");
	public static final Property<Commodity> COMMODITY = new Property<Commodity>("commodity");
	public static final Property<Uom> UOM = new Property<Uom>("uom");
	public static final Property<Uom> UOM1 = new Property<Uom>("uom1");

	public void setInvAdjQty(Double invAdjQty)
	{
		writeProperty("invAdjQty", invAdjQty);
	}

	public Double getInvAdjQty()
	{
		return (Double) readProperty("invAdjQty");
	}

	public void setInvAvgCost(Double invAvgCost)
	{
		writeProperty("invAvgCost", invAvgCost);
	}

	public Double getInvAvgCost()
	{
		return (Double) readProperty("invAvgCost");
	}

	public void setInvBalFromDate(Date invBalFromDate)
	{
		writeProperty("invBalFromDate", invBalFromDate);
	}

	public Date getInvBalFromDate()
	{
		return (Date) readProperty("invBalFromDate");
	}

	public void setInvBalToDate(Date invBalToDate)
	{
		writeProperty("invBalToDate", invBalToDate);
	}

	public Date getInvBalToDate()
	{
		return (Date) readProperty("invBalToDate");
	}

	public void setInvClosePrdActualQty(Double invClosePrdActualQty)
	{
		writeProperty("invClosePrdActualQty", invClosePrdActualQty);
	}

	public Double getInvClosePrdActualQty()
	{
		return (Double) readProperty("invClosePrdActualQty");
	}

	public void setInvClosePrdProjQty(Double invClosePrdProjQty)
	{
		writeProperty("invClosePrdProjQty", invClosePrdProjQty);
	}

	public Double getInvClosePrdProjQty()
	{
		return (Double) readProperty("invClosePrdProjQty");
	}

	public void setInvOpenPrdActualQty(Double invOpenPrdActualQty)
	{
		writeProperty("invOpenPrdActualQty", invOpenPrdActualQty);
	}

	public Double getInvOpenPrdActualQty()
	{
		return (Double) readProperty("invOpenPrdActualQty");
	}

	public void setInvOpenPrdProjQty(Double invOpenPrdProjQty)
	{
		writeProperty("invOpenPrdProjQty", invOpenPrdProjQty);
	}

	public Double getInvOpenPrdProjQty()
	{
		return (Double) readProperty("invOpenPrdProjQty");
	}

	public void setTransId(Integer transId)
	{
		writeProperty("transId", transId);
	}

	public Integer getTransId()
	{
		return (Integer) readProperty("transId");
	}

	public void setCommodity(Commodity commodity)
	{
		setToOneTarget("commodity", commodity, true);
	}

	public Commodity getCommodity()
	{
		return (Commodity) readProperty("commodity");
	}

	public void setUom(Uom uom)
	{
		setToOneTarget("uom", uom, true);
	}

	public Uom getUom()
	{
		return (Uom) readProperty("uom");
	}

	public void setUom1(Uom uom1)
	{
		setToOneTarget("uom1", uom1, true);
	}

	public Uom getUom1()
	{
		return (Uom) readProperty("uom1");
	}

}
