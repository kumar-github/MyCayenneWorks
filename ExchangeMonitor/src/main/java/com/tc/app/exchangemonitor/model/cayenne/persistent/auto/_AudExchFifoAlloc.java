package com.tc.app.exchangemonitor.model.cayenne.persistent.auto;

import java.math.BigDecimal;
import java.util.Date;

import org.apache.cayenne.CayenneDataObject;
import org.apache.cayenne.exp.Property;

/**
 * Class _AudExchFifoAlloc was generated by Cayenne.
 * It is probably a good idea to avoid changing this class manually,
 * since it may be overwritten next time code is regenerated.
 * If you need to make any customizations, please use subclass.
 */
public abstract class _AudExchFifoAlloc extends CayenneDataObject
{

	private static final long serialVersionUID = 1L;

	public static final Property<BigDecimal> ALLOC_BROKERAGE_COST = new Property<BigDecimal>("allocBrokerageCost");
	public static final Property<Date> ALLOC_DATE = new Property<Date>("allocDate");
	public static final Property<BigDecimal> ALLOC_PL = new Property<BigDecimal>("allocPl");
	public static final Property<Date> ALLOC_PL_ASOF_DATE = new Property<Date>("allocPlAsofDate");
	public static final Property<Date> ALLOC_PL_CALC_DATE = new Property<Date>("allocPlCalcDate");
	public static final Property<String> ALLOC_PL_CURR_CODE = new Property<String>("allocPlCurrCode");
	public static final Property<String> ALLOC_STATUS = new Property<String>("allocStatus");
	public static final Property<Integer> EXCH_FIFO_ALLOC_NUM = new Property<Integer>("exchFifoAllocNum");
	public static final Property<Integer> POS_NUM = new Property<Integer>("posNum");
	public static final Property<Integer> RESP_TRANS_ID = new Property<Integer>("respTransId");
	public static final Property<Integer> TRANS_ID = new Property<Integer>("transId");

	public void setAllocBrokerageCost(BigDecimal allocBrokerageCost)
	{
		writeProperty("allocBrokerageCost", allocBrokerageCost);
	}

	public BigDecimal getAllocBrokerageCost()
	{
		return (BigDecimal) readProperty("allocBrokerageCost");
	}

	public void setAllocDate(Date allocDate)
	{
		writeProperty("allocDate", allocDate);
	}

	public Date getAllocDate()
	{
		return (Date) readProperty("allocDate");
	}

	public void setAllocPl(BigDecimal allocPl)
	{
		writeProperty("allocPl", allocPl);
	}

	public BigDecimal getAllocPl()
	{
		return (BigDecimal) readProperty("allocPl");
	}

	public void setAllocPlAsofDate(Date allocPlAsofDate)
	{
		writeProperty("allocPlAsofDate", allocPlAsofDate);
	}

	public Date getAllocPlAsofDate()
	{
		return (Date) readProperty("allocPlAsofDate");
	}

	public void setAllocPlCalcDate(Date allocPlCalcDate)
	{
		writeProperty("allocPlCalcDate", allocPlCalcDate);
	}

	public Date getAllocPlCalcDate()
	{
		return (Date) readProperty("allocPlCalcDate");
	}

	public void setAllocPlCurrCode(String allocPlCurrCode)
	{
		writeProperty("allocPlCurrCode", allocPlCurrCode);
	}

	public String getAllocPlCurrCode()
	{
		return (String) readProperty("allocPlCurrCode");
	}

	public void setAllocStatus(String allocStatus)
	{
		writeProperty("allocStatus", allocStatus);
	}

	public String getAllocStatus()
	{
		return (String) readProperty("allocStatus");
	}

	public void setExchFifoAllocNum(Integer exchFifoAllocNum)
	{
		writeProperty("exchFifoAllocNum", exchFifoAllocNum);
	}

	public Integer getExchFifoAllocNum()
	{
		return (Integer) readProperty("exchFifoAllocNum");
	}

	public void setPosNum(Integer posNum)
	{
		writeProperty("posNum", posNum);
	}

	public Integer getPosNum()
	{
		return (Integer) readProperty("posNum");
	}

	public void setRespTransId(Integer respTransId)
	{
		writeProperty("respTransId", respTransId);
	}

	public Integer getRespTransId()
	{
		return (Integer) readProperty("respTransId");
	}

	public void setTransId(Integer transId)
	{
		writeProperty("transId", transId);
	}

	public Integer getTransId()
	{
		return (Integer) readProperty("transId");
	}

}
