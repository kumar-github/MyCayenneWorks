package com.tc.app.exchangemonitor.model.cayenne.persistent.auto;

import org.apache.cayenne.CayenneDataObject;
import org.apache.cayenne.exp.Property;

/**
 * Class _AudMarketdataSupplier was generated by Cayenne.
 * It is probably a good idea to avoid changing this class manually,
 * since it may be overwritten next time code is regenerated.
 * If you need to make any customizations, please use subclass.
 */
public abstract class _AudMarketdataSupplier extends CayenneDataObject
{

	private static final long serialVersionUID = 1L;

	public static final Property<Integer> ID = new Property<Integer>("id");
	public static final Property<Integer> MARKETDATA_FILE_ID = new Property<Integer>("marketdataFileId");
	public static final Property<Integer> QUOTE_MKTDATA_SOURCE_ID = new Property<Integer>("quoteMktdataSourceId");
	public static final Property<Integer> RESP_TRANS_ID = new Property<Integer>("respTransId");
	public static final Property<Integer> TRANS_ID = new Property<Integer>("transId");
	public static final Property<String> TYPE = new Property<String>("type");

	public void setId(Integer id)
	{
		writeProperty("id", id);
	}

	public Integer getId()
	{
		return (Integer) readProperty("id");
	}

	public void setMarketdataFileId(Integer marketdataFileId)
	{
		writeProperty("marketdataFileId", marketdataFileId);
	}

	public Integer getMarketdataFileId()
	{
		return (Integer) readProperty("marketdataFileId");
	}

	public void setQuoteMktdataSourceId(Integer quoteMktdataSourceId)
	{
		writeProperty("quoteMktdataSourceId", quoteMktdataSourceId);
	}

	public Integer getQuoteMktdataSourceId()
	{
		return (Integer) readProperty("quoteMktdataSourceId");
	}

	public void setRespTransId(Integer respTransId)
	{
		writeProperty("respTransId", respTransId);
	}

	public Integer getRespTransId()
	{
		return (Integer) readProperty("respTransId");
	}

	public void setTransId(Integer transId)
	{
		writeProperty("transId", transId);
	}

	public Integer getTransId()
	{
		return (Integer) readProperty("transId");
	}

	public void setType(String type)
	{
		writeProperty("type", type);
	}

	public String getType()
	{
		return (String) readProperty("type");
	}

}
