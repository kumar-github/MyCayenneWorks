package com.tc.app.exchangemonitor.model.cayenne.persistent.auto;

import java.util.List;

import org.apache.cayenne.CayenneDataObject;
import org.apache.cayenne.exp.Property;

import com.tc.app.exchangemonitor.model.cayenne.persistent.CargoInspection;
import com.tc.app.exchangemonitor.model.cayenne.persistent.MeasureDefaults;

/**
 * Class _Contexts was generated by Cayenne.
 * It is probably a good idea to avoid changing this class manually,
 * since it may be overwritten next time code is regenerated.
 * If you need to make any customizations, please use subclass.
 */
public abstract class _Contexts extends CayenneDataObject
{

	private static final long serialVersionUID = 1L;

	public static final String FLDCHR_CONTEXT_ID_PK_COLUMN = "fldchrContextId";

	public static final Property<String> FLDVCH_CONTEXT_DESC = new Property<String>("fldvchContextDesc");
	public static final Property<Integer> TRANS_ID = new Property<Integer>("transId");
	public static final Property<List<CargoInspection>> CARGO_INSPECTIONS = new Property<List<CargoInspection>>("cargoInspections");
	public static final Property<List<MeasureDefaults>> MEASURE_DEFAULTSS = new Property<List<MeasureDefaults>>("measureDefaultss");

	public void setFldvchContextDesc(String fldvchContextDesc)
	{
		writeProperty("fldvchContextDesc", fldvchContextDesc);
	}

	public String getFldvchContextDesc()
	{
		return (String) readProperty("fldvchContextDesc");
	}

	public void setTransId(Integer transId)
	{
		writeProperty("transId", transId);
	}

	public Integer getTransId()
	{
		return (Integer) readProperty("transId");
	}

	public void addToCargoInspections(CargoInspection obj)
	{
		addToManyTarget("cargoInspections", obj, true);
	}

	public void removeFromCargoInspections(CargoInspection obj)
	{
		removeToManyTarget("cargoInspections", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<CargoInspection> getCargoInspections()
	{
		return (List<CargoInspection>) readProperty("cargoInspections");
	}

	public void addToMeasureDefaultss(MeasureDefaults obj)
	{
		addToManyTarget("measureDefaultss", obj, true);
	}

	public void removeFromMeasureDefaultss(MeasureDefaults obj)
	{
		removeToManyTarget("measureDefaultss", obj, true);
	}

	@SuppressWarnings("unchecked")
	public List<MeasureDefaults> getMeasureDefaultss()
	{
		return (List<MeasureDefaults>) readProperty("measureDefaultss");
	}

}
