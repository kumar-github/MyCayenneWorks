package com.tc.app.exchangemonitor.model.cayenne.persistent.auto;

import java.util.Date;

import org.apache.cayenne.CayenneDataObject;
import org.apache.cayenne.exp.Property;

import com.tc.app.exchangemonitor.model.cayenne.persistent.Account;
import com.tc.app.exchangemonitor.model.cayenne.persistent.Commodity;
import com.tc.app.exchangemonitor.model.cayenne.persistent.Uom;

/**
 * Class _CostReportSnapshot was generated by Cayenne.
 * It is probably a good idea to avoid changing this class manually,
 * since it may be overwritten next time code is regenerated.
 * If you need to make any customizations, please use subclass.
 */
public abstract class _CostReportSnapshot extends CayenneDataObject
{

	private static final long serialVersionUID = 1L;

	public static final String BALANCE_DATE_PK_COLUMN = "balance_date";
	public static final String BALANCE_TYPE_PK_COLUMN = "balance_type";
	public static final String COST_NUM_PK_COLUMN = "cost_num";

	public static final Property<Double> COST_AMT = new Property<Double>("costAmt");
	public static final Property<String> COST_AMT_TYPE = new Property<String>("costAmtType");
	public static final Property<Date> COST_BOOK_PRD_DATE = new Property<Date>("costBookPrdDate");
	public static final Property<String> COST_PRICE_EST_ACTUAL_IND = new Property<String>("costPriceEstActualInd");
	public static final Property<Double> COST_QTY = new Property<Double>("costQty");
	public static final Property<String> COST_QTY_EST_ACTUAL_IND = new Property<String>("costQtyEstActualInd");
	public static final Property<Double> COST_UNIT_PRICE = new Property<Double>("costUnitPrice");
	public static final Property<Integer> TRANS_ID = new Property<Integer>("transId");
	public static final Property<Account> ACCOUNT = new Property<Account>("account");
	public static final Property<Commodity> COMMODITY = new Property<Commodity>("commodity");
	public static final Property<Uom> UOM = new Property<Uom>("uom");
	public static final Property<Uom> UOM1 = new Property<Uom>("uom1");

	public void setCostAmt(Double costAmt)
	{
		writeProperty("costAmt", costAmt);
	}

	public Double getCostAmt()
	{
		return (Double) readProperty("costAmt");
	}

	public void setCostAmtType(String costAmtType)
	{
		writeProperty("costAmtType", costAmtType);
	}

	public String getCostAmtType()
	{
		return (String) readProperty("costAmtType");
	}

	public void setCostBookPrdDate(Date costBookPrdDate)
	{
		writeProperty("costBookPrdDate", costBookPrdDate);
	}

	public Date getCostBookPrdDate()
	{
		return (Date) readProperty("costBookPrdDate");
	}

	public void setCostPriceEstActualInd(String costPriceEstActualInd)
	{
		writeProperty("costPriceEstActualInd", costPriceEstActualInd);
	}

	public String getCostPriceEstActualInd()
	{
		return (String) readProperty("costPriceEstActualInd");
	}

	public void setCostQty(Double costQty)
	{
		writeProperty("costQty", costQty);
	}

	public Double getCostQty()
	{
		return (Double) readProperty("costQty");
	}

	public void setCostQtyEstActualInd(String costQtyEstActualInd)
	{
		writeProperty("costQtyEstActualInd", costQtyEstActualInd);
	}

	public String getCostQtyEstActualInd()
	{
		return (String) readProperty("costQtyEstActualInd");
	}

	public void setCostUnitPrice(Double costUnitPrice)
	{
		writeProperty("costUnitPrice", costUnitPrice);
	}

	public Double getCostUnitPrice()
	{
		return (Double) readProperty("costUnitPrice");
	}

	public void setTransId(Integer transId)
	{
		writeProperty("transId", transId);
	}

	public Integer getTransId()
	{
		return (Integer) readProperty("transId");
	}

	public void setAccount(Account account)
	{
		setToOneTarget("account", account, true);
	}

	public Account getAccount()
	{
		return (Account) readProperty("account");
	}

	public void setCommodity(Commodity commodity)
	{
		setToOneTarget("commodity", commodity, true);
	}

	public Commodity getCommodity()
	{
		return (Commodity) readProperty("commodity");
	}

	public void setUom(Uom uom)
	{
		setToOneTarget("uom", uom, true);
	}

	public Uom getUom()
	{
		return (Uom) readProperty("uom");
	}

	public void setUom1(Uom uom1)
	{
		setToOneTarget("uom1", uom1, true);
	}

	public Uom getUom1()
	{
		return (Uom) readProperty("uom1");
	}

}
