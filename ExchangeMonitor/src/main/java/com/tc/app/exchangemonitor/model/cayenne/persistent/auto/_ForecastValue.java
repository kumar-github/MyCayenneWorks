package com.tc.app.exchangemonitor.model.cayenne.persistent.auto;

import java.math.BigDecimal;
import java.util.Date;

import org.apache.cayenne.CayenneDataObject;
import org.apache.cayenne.exp.Property;

import com.tc.app.exchangemonitor.model.cayenne.persistent.Account;
import com.tc.app.exchangemonitor.model.cayenne.persistent.Location;
import com.tc.app.exchangemonitor.model.cayenne.persistent.MotType;
import com.tc.app.exchangemonitor.model.cayenne.persistent.Portfolio;
import com.tc.app.exchangemonitor.model.cayenne.persistent.Position;
import com.tc.app.exchangemonitor.model.cayenne.persistent.TradingPeriod;
import com.tc.app.exchangemonitor.model.cayenne.persistent.Uom;

/**
 * Class _ForecastValue was generated by Cayenne.
 * It is probably a good idea to avoid changing this class manually,
 * since it may be overwritten next time code is regenerated.
 * If you need to make any customizations, please use subclass.
 */
public abstract class _ForecastValue extends CayenneDataObject
{

	private static final long serialVersionUID = 1L;

	public static final String OID_PK_COLUMN = "oid";

	public static final Property<Date> DEL_DATE_FROM = new Property<>("delDateFrom");
	public static final Property<Date> DEL_DATE_TO = new Property<>("delDateTo");
	public static final Property<BigDecimal> FORECAST_QTY = new Property<>("forecastQty");
	public static final Property<String> P_SIND = new Property<>("pSInd");
	public static final Property<Integer> TRANS_ID = new Property<>("transId");
	public static final Property<Account> ACCOUNT = new Property<>("account");
	public static final Property<Account> ACCOUNT1 = new Property<>("account1");
	public static final Property<Location> LOCATION = new Property<>("location");
	public static final Property<MotType> MOT_TYPE = new Property<>("motType");
	public static final Property<Portfolio> PORTFOLIO = new Property<>("portfolio");
	public static final Property<Position> POSITION = new Property<>("position");
	public static final Property<Position> POSITION1 = new Property<>("position1");
	public static final Property<TradingPeriod> TRADING_PERIOD = new Property<>("tradingPeriod");
	public static final Property<TradingPeriod> TRADING_PERIOD1 = new Property<>("tradingPeriod1");
	public static final Property<Uom> UOM = new Property<>("uom");

	public void setDelDateFrom(final Date delDateFrom)
	{
		this.writeProperty("delDateFrom", delDateFrom);
	}

	public Date getDelDateFrom()
	{
		return (Date) this.readProperty("delDateFrom");
	}

	public void setDelDateTo(final Date delDateTo)
	{
		this.writeProperty("delDateTo", delDateTo);
	}

	public Date getDelDateTo()
	{
		return (Date) this.readProperty("delDateTo");
	}

	public void setForecastQty(final BigDecimal forecastQty)
	{
		this.writeProperty("forecastQty", forecastQty);
	}

	public BigDecimal getForecastQty()
	{
		return (BigDecimal) this.readProperty("forecastQty");
	}

	public void setPSInd(final String pSInd)
	{
		this.writeProperty("pSInd", pSInd);
	}

	public String getPSInd()
	{
		return (String) this.readProperty("pSInd");
	}

	public void setTransId(final Integer transId)
	{
		this.writeProperty("transId", transId);
	}

	public Integer getTransId()
	{
		return (Integer) this.readProperty("transId");
	}

	public void setAccount(final Account account)
	{
		this.setToOneTarget("account", account, true);
	}

	public Account getAccount()
	{
		return (Account) this.readProperty("account");
	}

	public void setAccount1(final Account account1)
	{
		this.setToOneTarget("account1", account1, true);
	}

	public Account getAccount1()
	{
		return (Account) this.readProperty("account1");
	}

	public void setLocation(final Location location)
	{
		this.setToOneTarget("location", location, true);
	}

	public Location getLocation()
	{
		return (Location) this.readProperty("location");
	}

	public void setMotType(final MotType motType)
	{
		this.setToOneTarget("motType", motType, true);
	}

	public MotType getMotType()
	{
		return (MotType) this.readProperty("motType");
	}

	public void setPortfolio(final Portfolio portfolio)
	{
		this.setToOneTarget("portfolio", portfolio, true);
	}

	public Portfolio getPortfolio()
	{
		return (Portfolio) this.readProperty("portfolio");
	}

	public void setPosition(final Position position)
	{
		this.setToOneTarget("position", position, true);
	}

	public Position getPosition()
	{
		return (Position) this.readProperty("position");
	}

	public void setPosition1(final Position position1)
	{
		this.setToOneTarget("position1", position1, true);
	}

	public Position getPosition1()
	{
		return (Position) this.readProperty("position1");
	}

	public void setTradingPeriod(final TradingPeriod tradingPeriod)
	{
		this.setToOneTarget("tradingPeriod", tradingPeriod, true);
	}

	public TradingPeriod getTradingPeriod()
	{
		return (TradingPeriod) this.readProperty("tradingPeriod");
	}

	public void setTradingPeriod1(final TradingPeriod tradingPeriod1)
	{
		this.setToOneTarget("tradingPeriod1", tradingPeriod1, true);
	}

	public TradingPeriod getTradingPeriod1()
	{
		return (TradingPeriod) this.readProperty("tradingPeriod1");
	}

	public void setUom(final Uom uom)
	{
		this.setToOneTarget("uom", uom, true);
	}

	public Uom getUom()
	{
		return (Uom) this.readProperty("uom");
	}

}
